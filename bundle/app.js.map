{
  "version": 3,
  "sources": ["../../../../node_modules/preact/src/constants.js", "../../../../node_modules/preact/src/util.js", "../../../../node_modules/preact/src/options.js", "../../../../node_modules/preact/src/create-element.js", "../../../../node_modules/preact/src/component.js", "../../../../node_modules/preact/src/diff/props.js", "../../../../node_modules/preact/src/create-context.js", "../../../../node_modules/preact/src/diff/children.js", "../../../../node_modules/preact/src/diff/index.js", "../../../../node_modules/preact/src/render.js", "../../../../node_modules/preact/src/clone-element.js", "../../../../node_modules/preact/src/diff/catch-error.js", "../../../../node_modules/preact/devtools/src/devtools.js", "../../../../node_modules/preact/devtools/src/index.js", "../../../../node_modules/preact/debug/src/check-props.js", "../../../../node_modules/preact/debug/src/component-stack.js", "../../../../node_modules/preact/debug/src/debug.js", "../../../../node_modules/preact/debug/src/constants.js", "../../../../node_modules/preact/debug/src/util.js", "../../../../node_modules/preact/debug/src/index.js", "../../src/elements.ts", "../../../frontend/src/auxiliar/dom.ts", "../../../frontend/src/auxiliar/events.ts", "../../../../node_modules/rison2/src/token.ts", "../../../../node_modules/rison2/src/lexer.ts", "../../../../node_modules/rison2/src/parser.ts", "../../../../node_modules/rison2/src/stringifier.ts", "../../../../node_modules/rison2/src/rison.ts", "../../../../node_modules/rison2/src/escaped.ts", "../../../../node_modules/rison2/src/index.ts", "../../../auxiliar/src/misc.ts", "../../../frontend/src/auxiliar/fragment.ts", "../../../frontend/src/auxiliar/livereload.ts", "../../../frontend/src/auxiliar/styles.ts", "../../../../node_modules/preact/hooks/src/index.js", "../../../frontend/src/auxiliar/dispatchable.ts", "../../../../node_modules/preact/jsx-runtime/src/utils.js", "../../../../node_modules/preact/src/constants.js", "../../../../node_modules/preact/jsx-runtime/src/index.js", "../../../frontend/src/auxiliar/icons.tsx", "../../../frontend/src/components/icon-button/state.tsx", "../../../frontend/src/components/icon-button/icon-button.tsx", "../../../frontend/src/components/icon-button/index.tsx", "../../../frontend/src/components/vertex-info/vertex-info.tsx", "../../../frontend/src/components/vertex-info/index.tsx", "../../../auxiliar/src/filters.ts", "../../../auxiliar/src/value.ts", "../../../frontend/src/auxiliar/storage.ts", "../../../auxiliar/src/map2.ts", "../../../auxiliar/src/debounce.ts", "../../../frontend/src/facets/main/grid_util.ts", "../../../frontend/src/facets/main/state.ts", "../../../frontend/src/facets/misc/facet-bool.tsx", "../../../frontend/src/facets/misc/facet-text.tsx", "../../../frontend/src/facets/multisel/state.ts", "../../../frontend/src/facets/multisel/facet-multi.tsx", "../../../frontend/src/facets/table/entries.ts", "../../../frontend/src/facets/table/header.tsx", "../../../frontend/src/facets/table/state.ts", "../../../frontend/src/facets/table/facet-table.tsx", "../../../frontend/src/facets/misc/facet-group.tsx", "../../../frontend/src/facets/main/types.ts", "../../../plangs/src/facets/apps.ts", "../../../plangs/src/facets/communities.ts", "../../../plangs/src/facets/learning.ts", "../../../plangs/src/facets/libraries.ts", "../../../plangs/src/facets/plangs.ts", "../../../plangs/src/facets/tools.ts", "../../../plangs/src/facets/index.ts", "../../../auxiliar/src/array.ts", "../../../auxiliar/src/iter_tap.ts", "../../../graphgen/src/library.ts", "../../../plangs/src/auxiliar/str_date.ts", "../../../plangs/src/graph/vertex_data_fields.ts", "../../../plangs/src/graph/vertex_base.ts", "../../../plangs/src/graph/generated.ts", "../../../plangs/src/graph/index.ts", "../../../frontend/src/facets/kind/apps.tsx", "../../../frontend/src/facets/kind/communities.tsx", "../../../frontend/src/facets/kind/learning.tsx", "../../../frontend/src/facets/kind/libraries.tsx", "../../../frontend/src/facets/kind/plangs.tsx", "../../../frontend/src/facets/kind/tools.tsx", "../../../frontend/src/facets/main/use_state.ts", "../../../frontend/src/facets/main/main.tsx", "../../../frontend/src/facets/main/index.tsx", "../../../frontend/src/app/index.tsx"],
  "sourcesContent": ["/** Normal hydration that attaches to a DOM tree but does not diff it. */\nexport const MODE_HYDRATE = 1 << 5;\n/** Signifies this VNode suspended on the previous render */\nexport const MODE_SUSPENDED = 1 << 7;\n/** Indicates that this node needs to be inserted while patching children */\nexport const INSERT_VNODE = 1 << 16;\n/** Indicates a VNode has been matched with another VNode in the diff */\nexport const MATCHED = 1 << 17;\n\n/** Reset all mode flags */\nexport const RESET_MODE = ~(MODE_HYDRATE | MODE_SUSPENDED);\n\nexport const EMPTY_OBJ = /** @type {any} */ ({});\nexport const EMPTY_ARR = [];\nexport const IS_NON_DIMENSIONAL =\n\t/acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i;\n", "import { EMPTY_ARR } from './constants';\n\nexport const isArray = Array.isArray;\n\n/**\n * Assign properties from `props` to `obj`\n * @template O, P The obj and props types\n * @param {O} obj The object to copy properties to\n * @param {P} props The object to copy properties from\n * @returns {O & P}\n */\nexport function assign(obj, props) {\n\t// @ts-expect-error We change the type of `obj` to be `O & P`\n\tfor (let i in props) obj[i] = props[i];\n\treturn /** @type {O & P} */ (obj);\n}\n\n/**\n * Remove a child node from its parent if attached. This is a workaround for\n * IE11 which doesn't support `Element.prototype.remove()`. Using this function\n * is smaller than including a dedicated polyfill.\n * @param {preact.ContainerNode} node The node to remove\n */\nexport function removeNode(node) {\n\tlet parentNode = node.parentNode;\n\tif (parentNode) parentNode.removeChild(node);\n}\n\nexport const slice = EMPTY_ARR.slice;\n", "import { _catchError } from './diff/catch-error';\n\n/**\n * The `option` object can potentially contain callback functions\n * that are called during various stages of our renderer. This is the\n * foundation on which all our addons like `preact/debug`, `preact/compat`,\n * and `preact/hooks` are based on. See the `Options` type in `internal.d.ts`\n * for a full list of available option hooks (most editors/IDEs allow you to\n * ctrl+click or cmd+click on mac the type definition below).\n * @type {Options}\n */\nconst options = {\n\t_catchError\n};\n\nexport default options;\n", "import { slice } from './util';\nimport options from './options';\n\nlet vnodeId = 0;\n\n/**\n * Create an virtual node (used for JSX)\n * @param {VNode[\"type\"]} type The node name or Component constructor for this\n * virtual node\n * @param {object | null | undefined} [props] The properties of the virtual node\n * @param {Array<import('.').ComponentChildren>} [children] The children of the\n * virtual node\n * @returns {VNode}\n */\nexport function createElement(type, props, children) {\n\tlet normalizedProps = {},\n\t\tkey,\n\t\tref,\n\t\ti;\n\tfor (i in props) {\n\t\tif (i == 'key') key = props[i];\n\t\telse if (i == 'ref') ref = props[i];\n\t\telse normalizedProps[i] = props[i];\n\t}\n\n\tif (arguments.length > 2) {\n\t\tnormalizedProps.children =\n\t\t\targuments.length > 3 ? slice.call(arguments, 2) : children;\n\t}\n\n\t// If a Component VNode, check for and apply defaultProps\n\t// Note: type may be undefined in development, must never error here.\n\tif (typeof type == 'function' && type.defaultProps != null) {\n\t\tfor (i in type.defaultProps) {\n\t\t\tif (normalizedProps[i] === undefined) {\n\t\t\t\tnormalizedProps[i] = type.defaultProps[i];\n\t\t\t}\n\t\t}\n\t}\n\n\treturn createVNode(type, normalizedProps, key, ref, null);\n}\n\n/**\n * Create a VNode (used internally by Preact)\n * @param {VNode[\"type\"]} type The node name or Component\n * Constructor for this virtual node\n * @param {object | string | number | null} props The properties of this virtual node.\n * If this virtual node represents a text node, this is the text of the node (string or number).\n * @param {string | number | null} key The key for this virtual node, used when\n * diffing it against its children\n * @param {VNode[\"ref\"]} ref The ref property that will\n * receive a reference to its created child\n * @returns {VNode}\n */\nexport function createVNode(type, props, key, ref, original) {\n\t// V8 seems to be better at detecting type shapes if the object is allocated from the same call site\n\t// Do not inline into createElement and coerceToVNode!\n\t/** @type {VNode} */\n\tconst vnode = {\n\t\ttype,\n\t\tprops,\n\t\tkey,\n\t\tref,\n\t\t_children: null,\n\t\t_parent: null,\n\t\t_depth: 0,\n\t\t_dom: null,\n\t\t// _nextDom must be initialized to undefined b/c it will eventually\n\t\t// be set to dom.nextSibling which can return `null` and it is important\n\t\t// to be able to distinguish between an uninitialized _nextDom and\n\t\t// a _nextDom that has been set to `null`\n\t\t_nextDom: undefined,\n\t\t_component: null,\n\t\tconstructor: undefined,\n\t\t_original: original == null ? ++vnodeId : original,\n\t\t_index: -1,\n\t\t_flags: 0\n\t};\n\n\t// Only invoke the vnode hook if this was *not* a direct copy:\n\tif (original == null && options.vnode != null) options.vnode(vnode);\n\n\treturn vnode;\n}\n\nexport function createRef() {\n\treturn { current: null };\n}\n\nexport function Fragment(props) {\n\treturn props.children;\n}\n\n/**\n * Check if a the argument is a valid Preact VNode.\n * @param {*} vnode\n * @returns {vnode is VNode}\n */\nexport const isValidElement = vnode =>\n\tvnode != null && vnode.constructor == undefined;\n", "import { assign } from './util';\nimport { diff, commitRoot } from './diff/index';\nimport options from './options';\nimport { Fragment } from './create-element';\nimport { MODE_HYDRATE } from './constants';\n\n/**\n * Base Component class. Provides `setState()` and `forceUpdate()`, which\n * trigger rendering\n * @param {object} props The initial component props\n * @param {object} context The initial context from parent components'\n * getChildContext\n */\nexport function BaseComponent(props, context) {\n\tthis.props = props;\n\tthis.context = context;\n}\n\n/**\n * Update component state and schedule a re-render.\n * @this {Component}\n * @param {object | ((s: object, p: object) => object)} update A hash of state\n * properties to update with new values or a function that given the current\n * state and props returns a new partial state\n * @param {() => void} [callback] A function to be called once component state is\n * updated\n */\nBaseComponent.prototype.setState = function (update, callback) {\n\t// only clone state when copying to nextState the first time.\n\tlet s;\n\tif (this._nextState != null && this._nextState !== this.state) {\n\t\ts = this._nextState;\n\t} else {\n\t\ts = this._nextState = assign({}, this.state);\n\t}\n\n\tif (typeof update == 'function') {\n\t\t// Some libraries like `immer` mark the current state as readonly,\n\t\t// preventing us from mutating it, so we need to clone it. See #2716\n\t\tupdate = update(assign({}, s), this.props);\n\t}\n\n\tif (update) {\n\t\tassign(s, update);\n\t}\n\n\t// Skip update if updater function returned null\n\tif (update == null) return;\n\n\tif (this._vnode) {\n\t\tif (callback) {\n\t\t\tthis._stateCallbacks.push(callback);\n\t\t}\n\t\tenqueueRender(this);\n\t}\n};\n\n/**\n * Immediately perform a synchronous re-render of the component\n * @this {Component}\n * @param {() => void} [callback] A function to be called after component is\n * re-rendered\n */\nBaseComponent.prototype.forceUpdate = function (callback) {\n\tif (this._vnode) {\n\t\t// Set render mode so that we can differentiate where the render request\n\t\t// is coming from. We need this because forceUpdate should never call\n\t\t// shouldComponentUpdate\n\t\tthis._force = true;\n\t\tif (callback) this._renderCallbacks.push(callback);\n\t\tenqueueRender(this);\n\t}\n};\n\n/**\n * Accepts `props` and `state`, and returns a new Virtual DOM tree to build.\n * Virtual DOM is generally constructed via [JSX](http://jasonformat.com/wtf-is-jsx).\n * @param {object} props Props (eg: JSX attributes) received from parent\n * element/component\n * @param {object} state The component's current state\n * @param {object} context Context object, as returned by the nearest\n * ancestor's `getChildContext()`\n * @returns {ComponentChildren | void}\n */\nBaseComponent.prototype.render = Fragment;\n\n/**\n * @param {VNode} vnode\n * @param {number | null} [childIndex]\n */\nexport function getDomSibling(vnode, childIndex) {\n\tif (childIndex == null) {\n\t\t// Use childIndex==null as a signal to resume the search from the vnode's sibling\n\t\treturn vnode._parent\n\t\t\t? getDomSibling(vnode._parent, vnode._index + 1)\n\t\t\t: null;\n\t}\n\n\tlet sibling;\n\tfor (; childIndex < vnode._children.length; childIndex++) {\n\t\tsibling = vnode._children[childIndex];\n\n\t\tif (sibling != null && sibling._dom != null) {\n\t\t\t// Since updateParentDomPointers keeps _dom pointer correct,\n\t\t\t// we can rely on _dom to tell us if this subtree contains a\n\t\t\t// rendered DOM node, and what the first rendered DOM node is\n\t\t\treturn sibling._dom;\n\t\t}\n\t}\n\n\t// If we get here, we have not found a DOM node in this vnode's children.\n\t// We must resume from this vnode's sibling (in it's parent _children array)\n\t// Only climb up and search the parent if we aren't searching through a DOM\n\t// VNode (meaning we reached the DOM parent of the original vnode that began\n\t// the search)\n\treturn typeof vnode.type == 'function' ? getDomSibling(vnode) : null;\n}\n\n/**\n * Trigger in-place re-rendering of a component.\n * @param {Component} component The component to rerender\n */\nfunction renderComponent(component) {\n\tlet oldVNode = component._vnode,\n\t\toldDom = oldVNode._dom,\n\t\tcommitQueue = [],\n\t\trefQueue = [];\n\n\tif (component._parentDom) {\n\t\tconst newVNode = assign({}, oldVNode);\n\t\tnewVNode._original = oldVNode._original + 1;\n\t\tif (options.vnode) options.vnode(newVNode);\n\n\t\tdiff(\n\t\t\tcomponent._parentDom,\n\t\t\tnewVNode,\n\t\t\toldVNode,\n\t\t\tcomponent._globalContext,\n\t\t\tcomponent._parentDom.namespaceURI,\n\t\t\toldVNode._flags & MODE_HYDRATE ? [oldDom] : null,\n\t\t\tcommitQueue,\n\t\t\toldDom == null ? getDomSibling(oldVNode) : oldDom,\n\t\t\t!!(oldVNode._flags & MODE_HYDRATE),\n\t\t\trefQueue\n\t\t);\n\n\t\tnewVNode._original = oldVNode._original;\n\t\tnewVNode._parent._children[newVNode._index] = newVNode;\n\t\tcommitRoot(commitQueue, newVNode, refQueue);\n\n\t\tif (newVNode._dom != oldDom) {\n\t\t\tupdateParentDomPointers(newVNode);\n\t\t}\n\t}\n}\n\n/**\n * @param {VNode} vnode\n */\nfunction updateParentDomPointers(vnode) {\n\tif ((vnode = vnode._parent) != null && vnode._component != null) {\n\t\tvnode._dom = vnode._component.base = null;\n\t\tfor (let i = 0; i < vnode._children.length; i++) {\n\t\t\tlet child = vnode._children[i];\n\t\t\tif (child != null && child._dom != null) {\n\t\t\t\tvnode._dom = vnode._component.base = child._dom;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn updateParentDomPointers(vnode);\n\t}\n}\n\n/**\n * The render queue\n * @type {Array<Component>}\n */\nlet rerenderQueue = [];\n\n/*\n * The value of `Component.debounce` must asynchronously invoke the passed in callback. It is\n * important that contributors to Preact can consistently reason about what calls to `setState`, etc.\n * do, and when their effects will be applied. See the links below for some further reading on designing\n * asynchronous APIs.\n * * [Designing APIs for Asynchrony](https://blog.izs.me/2013/08/designing-apis-for-asynchrony)\n * * [Callbacks synchronous and asynchronous](https://blog.ometer.com/2011/07/24/callbacks-synchronous-and-asynchronous/)\n */\n\nlet prevDebounce;\n\nconst defer =\n\ttypeof Promise == 'function'\n\t\t? Promise.prototype.then.bind(Promise.resolve())\n\t\t: setTimeout;\n\n/**\n * Enqueue a rerender of a component\n * @param {Component} c The component to rerender\n */\nexport function enqueueRender(c) {\n\tif (\n\t\t(!c._dirty &&\n\t\t\t(c._dirty = true) &&\n\t\t\trerenderQueue.push(c) &&\n\t\t\t!process._rerenderCount++) ||\n\t\tprevDebounce !== options.debounceRendering\n\t) {\n\t\tprevDebounce = options.debounceRendering;\n\t\t(prevDebounce || defer)(process);\n\t}\n}\n\n/**\n * @param {Component} a\n * @param {Component} b\n */\nconst depthSort = (a, b) => a._vnode._depth - b._vnode._depth;\n\n/** Flush the render queue by rerendering all queued components */\nfunction process() {\n\tlet c;\n\trerenderQueue.sort(depthSort);\n\t// Don't update `renderCount` yet. Keep its value non-zero to prevent unnecessary\n\t// process() calls from getting scheduled while `queue` is still being consumed.\n\twhile ((c = rerenderQueue.shift())) {\n\t\tif (c._dirty) {\n\t\t\tlet renderQueueLength = rerenderQueue.length;\n\t\t\trenderComponent(c);\n\t\t\tif (rerenderQueue.length > renderQueueLength) {\n\t\t\t\t// When i.e. rerendering a provider additional new items can be injected, we want to\n\t\t\t\t// keep the order from top to bottom with those new items so we can handle them in a\n\t\t\t\t// single pass\n\t\t\t\trerenderQueue.sort(depthSort);\n\t\t\t}\n\t\t}\n\t}\n\tprocess._rerenderCount = 0;\n}\n\nprocess._rerenderCount = 0;\n", "import { IS_NON_DIMENSIONAL } from '../constants';\nimport options from '../options';\n\nfunction setStyle(style, key, value) {\n\tif (key[0] === '-') {\n\t\tstyle.setProperty(key, value == null ? '' : value);\n\t} else if (value == null) {\n\t\tstyle[key] = '';\n\t} else if (typeof value != 'number' || IS_NON_DIMENSIONAL.test(key)) {\n\t\tstyle[key] = value;\n\t} else {\n\t\tstyle[key] = value + 'px';\n\t}\n}\n\n// A logical clock to solve issues like https://github.com/preactjs/preact/issues/3927.\n// When the DOM performs an event it leaves micro-ticks in between bubbling up which means that\n// an event can trigger on a newly reated DOM-node while the event bubbles up.\n//\n// Originally inspired by Vue\n// (https://github.com/vuejs/core/blob/caeb8a68811a1b0f79/packages/runtime-dom/src/modules/events.ts#L90-L101),\n// but modified to use a logical clock instead of Date.now() in case event handlers get attached\n// and events get dispatched during the same millisecond.\n//\n// The clock is incremented after each new event dispatch. This allows 1 000 000 new events\n// per second for over 280 years before the value reaches Number.MAX_SAFE_INTEGER (2**53 - 1).\nlet eventClock = 0;\n\n/**\n * Set a property value on a DOM node\n * @param {PreactElement} dom The DOM node to modify\n * @param {string} name The name of the property to set\n * @param {*} value The value to set the property to\n * @param {*} oldValue The old value the property had\n * @param {string} namespace Whether or not this DOM node is an SVG node or not\n */\nexport function setProperty(dom, name, value, oldValue, namespace) {\n\tlet useCapture;\n\n\to: if (name === 'style') {\n\t\tif (typeof value == 'string') {\n\t\t\tdom.style.cssText = value;\n\t\t} else {\n\t\t\tif (typeof oldValue == 'string') {\n\t\t\t\tdom.style.cssText = oldValue = '';\n\t\t\t}\n\n\t\t\tif (oldValue) {\n\t\t\t\tfor (name in oldValue) {\n\t\t\t\t\tif (!(value && name in value)) {\n\t\t\t\t\t\tsetStyle(dom.style, name, '');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (value) {\n\t\t\t\tfor (name in value) {\n\t\t\t\t\tif (!oldValue || value[name] !== oldValue[name]) {\n\t\t\t\t\t\tsetStyle(dom.style, name, value[name]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t// Benchmark for comparison: https://esbench.com/bench/574c954bdb965b9a00965ac6\n\telse if (name[0] === 'o' && name[1] === 'n') {\n\t\tuseCapture =\n\t\t\tname !== (name = name.replace(/(PointerCapture)$|Capture$/i, '$1'));\n\n\t\t// Infer correct casing for DOM built-in events:\n\t\tif (\n\t\t\tname.toLowerCase() in dom ||\n\t\t\tname === 'onFocusOut' ||\n\t\t\tname === 'onFocusIn'\n\t\t)\n\t\t\tname = name.toLowerCase().slice(2);\n\t\telse name = name.slice(2);\n\n\t\tif (!dom._listeners) dom._listeners = {};\n\t\tdom._listeners[name + useCapture] = value;\n\n\t\tif (value) {\n\t\t\tif (!oldValue) {\n\t\t\t\tvalue._attached = eventClock;\n\t\t\t\tdom.addEventListener(\n\t\t\t\t\tname,\n\t\t\t\t\tuseCapture ? eventProxyCapture : eventProxy,\n\t\t\t\t\tuseCapture\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tvalue._attached = oldValue._attached;\n\t\t\t}\n\t\t} else {\n\t\t\tdom.removeEventListener(\n\t\t\t\tname,\n\t\t\t\tuseCapture ? eventProxyCapture : eventProxy,\n\t\t\t\tuseCapture\n\t\t\t);\n\t\t}\n\t} else {\n\t\tif (namespace == 'http://www.w3.org/2000/svg') {\n\t\t\t// Normalize incorrect prop usage for SVG:\n\t\t\t// - xlink:href / xlinkHref --> href (xlink:href was removed from SVG and isn't needed)\n\t\t\t// - className --> class\n\t\t\tname = name.replace(/xlink(H|:h)/, 'h').replace(/sName$/, 's');\n\t\t} else if (\n\t\t\tname != 'width' &&\n\t\t\tname != 'height' &&\n\t\t\tname != 'href' &&\n\t\t\tname != 'list' &&\n\t\t\tname != 'form' &&\n\t\t\t// Default value in browsers is `-1` and an empty string is\n\t\t\t// cast to `0` instead\n\t\t\tname != 'tabIndex' &&\n\t\t\tname != 'download' &&\n\t\t\tname != 'rowSpan' &&\n\t\t\tname != 'colSpan' &&\n\t\t\tname != 'role' &&\n\t\t\tname != 'popover' &&\n\t\t\tname in dom\n\t\t) {\n\t\t\ttry {\n\t\t\t\tdom[name] = value == null ? '' : value;\n\t\t\t\t// labelled break is 1b smaller here than a return statement (sorry)\n\t\t\t\tbreak o;\n\t\t\t} catch (e) {}\n\t\t}\n\n\t\t// aria- and data- attributes have no boolean representation.\n\t\t// A `false` value is different from the attribute not being\n\t\t// present, so we can't remove it. For non-boolean aria\n\t\t// attributes we could treat false as a removal, but the\n\t\t// amount of exceptions would cost too many bytes. On top of\n\t\t// that other frameworks generally stringify `false`.\n\n\t\tif (typeof value == 'function') {\n\t\t\t// never serialize functions as attribute values\n\t\t} else if (value != null && (value !== false || name[4] === '-')) {\n\t\t\tdom.setAttribute(name, name == 'popover' && value == true ? '' : value);\n\t\t} else {\n\t\t\tdom.removeAttribute(name);\n\t\t}\n\t}\n}\n\n/**\n * Create an event proxy function.\n * @param {boolean} useCapture Is the event handler for the capture phase.\n * @private\n */\nfunction createEventProxy(useCapture) {\n\t/**\n\t * Proxy an event to hooked event handlers\n\t * @param {PreactEvent} e The event object from the browser\n\t * @private\n\t */\n\treturn function (e) {\n\t\tif (this._listeners) {\n\t\t\tconst eventHandler = this._listeners[e.type + useCapture];\n\t\t\tif (e._dispatched == null) {\n\t\t\t\te._dispatched = eventClock++;\n\n\t\t\t\t// When `e._dispatched` is smaller than the time when the targeted event\n\t\t\t\t// handler was attached we know we have bubbled up to an element that was added\n\t\t\t\t// during patching the DOM.\n\t\t\t} else if (e._dispatched < eventHandler._attached) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\treturn eventHandler(options.event ? options.event(e) : e);\n\t\t}\n\t};\n}\n\nconst eventProxy = createEventProxy(false);\nconst eventProxyCapture = createEventProxy(true);\n", "import { enqueueRender } from './component';\n\nexport let i = 0;\n\nexport function createContext(defaultValue, contextId) {\n\tcontextId = '__cC' + i++;\n\n\tconst context = {\n\t\t_id: contextId,\n\t\t_defaultValue: defaultValue,\n\t\t/** @type {FunctionComponent} */\n\t\tConsumer(props, contextValue) {\n\t\t\t// return props.children(\n\t\t\t// \tcontext[contextId] ? context[contextId].props.value : defaultValue\n\t\t\t// );\n\t\t\treturn props.children(contextValue);\n\t\t},\n\t\t/** @type {FunctionComponent} */\n\t\tProvider(props) {\n\t\t\tif (!this.getChildContext) {\n\t\t\t\t/** @type {Component[] | null} */\n\t\t\t\tlet subs = [];\n\t\t\t\tlet ctx = {};\n\t\t\t\tctx[contextId] = this;\n\n\t\t\t\tthis.getChildContext = () => ctx;\n\n\t\t\t\tthis.componentWillUnmount = () => {\n\t\t\t\t\tsubs = null;\n\t\t\t\t};\n\n\t\t\t\tthis.shouldComponentUpdate = function (_props) {\n\t\t\t\t\tif (this.props.value !== _props.value) {\n\t\t\t\t\t\tsubs.some(c => {\n\t\t\t\t\t\t\tc._force = true;\n\t\t\t\t\t\t\tenqueueRender(c);\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tthis.sub = c => {\n\t\t\t\t\tsubs.push(c);\n\t\t\t\t\tlet old = c.componentWillUnmount;\n\t\t\t\t\tc.componentWillUnmount = () => {\n\t\t\t\t\t\tif (subs) {\n\t\t\t\t\t\t\tsubs.splice(subs.indexOf(c), 1);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (old) old.call(c);\n\t\t\t\t\t};\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn props.children;\n\t\t}\n\t};\n\n\t// Devtools needs access to the context object when it\n\t// encounters a Provider. This is necessary to support\n\t// setting `displayName` on the context object instead\n\t// of on the component itself. See:\n\t// https://reactjs.org/docs/context.html#contextdisplayname\n\n\treturn (context.Provider._contextRef = context.Consumer.contextType =\n\t\tcontext);\n}\n", "import { diff, unmount, applyRef } from './index';\nimport { createVNode, Fragment } from '../create-element';\nimport { EMPTY_OBJ, EMPTY_ARR, INSERT_VNODE, MATCHED } from '../constants';\nimport { isArray } from '../util';\nimport { getDomSibling } from '../component';\n\n/**\n * Diff the children of a virtual node\n * @param {PreactElement} parentDom The DOM element whose children are being\n * diffed\n * @param {ComponentChildren[]} renderResult\n * @param {VNode} newParentVNode The new virtual node whose children should be\n * diff'ed against oldParentVNode\n * @param {VNode} oldParentVNode The old virtual node whose children should be\n * diff'ed against newParentVNode\n * @param {object} globalContext The current context object - modified by\n * getChildContext\n * @param {string} namespace Current namespace of the DOM node (HTML, SVG, or MathML)\n * @param {Array<PreactElement>} excessDomChildren\n * @param {Array<Component>} commitQueue List of components which have callbacks\n * to invoke in commitRoot\n * @param {PreactElement} oldDom The current attached DOM element any new dom\n * elements should be placed around. Likely `null` on first render (except when\n * hydrating). Can be a sibling DOM element when diffing Fragments that have\n * siblings. In most cases, it starts out as `oldChildren[0]._dom`.\n * @param {boolean} isHydrating Whether or not we are in hydration\n * @param {any[]} refQueue an array of elements needed to invoke refs\n */\nexport function diffChildren(\n\tparentDom,\n\trenderResult,\n\tnewParentVNode,\n\toldParentVNode,\n\tglobalContext,\n\tnamespace,\n\texcessDomChildren,\n\tcommitQueue,\n\toldDom,\n\tisHydrating,\n\trefQueue\n) {\n\tlet i,\n\t\t/** @type {VNode} */\n\t\toldVNode,\n\t\t/** @type {VNode} */\n\t\tchildVNode,\n\t\t/** @type {PreactElement} */\n\t\tnewDom,\n\t\t/** @type {PreactElement} */\n\t\tfirstChildDom;\n\n\t// This is a compression of oldParentVNode!=null && oldParentVNode != EMPTY_OBJ && oldParentVNode._children || EMPTY_ARR\n\t// as EMPTY_OBJ._children should be `undefined`.\n\t/** @type {VNode[]} */\n\tlet oldChildren = (oldParentVNode && oldParentVNode._children) || EMPTY_ARR;\n\n\tlet newChildrenLength = renderResult.length;\n\n\tnewParentVNode._nextDom = oldDom;\n\tconstructNewChildrenArray(newParentVNode, renderResult, oldChildren);\n\toldDom = newParentVNode._nextDom;\n\n\tfor (i = 0; i < newChildrenLength; i++) {\n\t\tchildVNode = newParentVNode._children[i];\n\t\tif (\n\t\t\tchildVNode == null ||\n\t\t\ttypeof childVNode == 'boolean' ||\n\t\t\ttypeof childVNode == 'function'\n\t\t) {\n\t\t\tcontinue;\n\t\t}\n\n\t\t// At this point, constructNewChildrenArray has assigned _index to be the\n\t\t// matchingIndex for this VNode's oldVNode (or -1 if there is no oldVNode).\n\t\tif (childVNode._index === -1) {\n\t\t\toldVNode = EMPTY_OBJ;\n\t\t} else {\n\t\t\toldVNode = oldChildren[childVNode._index] || EMPTY_OBJ;\n\t\t}\n\n\t\t// Update childVNode._index to its final index\n\t\tchildVNode._index = i;\n\n\t\t// Morph the old element into the new one, but don't append it to the dom yet\n\t\tdiff(\n\t\t\tparentDom,\n\t\t\tchildVNode,\n\t\t\toldVNode,\n\t\t\tglobalContext,\n\t\t\tnamespace,\n\t\t\texcessDomChildren,\n\t\t\tcommitQueue,\n\t\t\toldDom,\n\t\t\tisHydrating,\n\t\t\trefQueue\n\t\t);\n\n\t\t// Adjust DOM nodes\n\t\tnewDom = childVNode._dom;\n\t\tif (childVNode.ref && oldVNode.ref != childVNode.ref) {\n\t\t\tif (oldVNode.ref) {\n\t\t\t\tapplyRef(oldVNode.ref, null, childVNode);\n\t\t\t}\n\t\t\trefQueue.push(\n\t\t\t\tchildVNode.ref,\n\t\t\t\tchildVNode._component || newDom,\n\t\t\t\tchildVNode\n\t\t\t);\n\t\t}\n\n\t\tif (firstChildDom == null && newDom != null) {\n\t\t\tfirstChildDom = newDom;\n\t\t}\n\n\t\tif (\n\t\t\tchildVNode._flags & INSERT_VNODE ||\n\t\t\toldVNode._children === childVNode._children\n\t\t) {\n\t\t\toldDom = insert(childVNode, oldDom, parentDom);\n\t\t} else if (\n\t\t\ttypeof childVNode.type == 'function' &&\n\t\t\tchildVNode._nextDom !== undefined\n\t\t) {\n\t\t\t// Since Fragments or components that return Fragment like VNodes can\n\t\t\t// contain multiple DOM nodes as the same level, continue the diff from\n\t\t\t// the sibling of last DOM child of this child VNode\n\t\t\toldDom = childVNode._nextDom;\n\t\t} else if (newDom) {\n\t\t\toldDom = newDom.nextSibling;\n\t\t}\n\n\t\t// Eagerly cleanup _nextDom. We don't need to persist the value because it\n\t\t// is only used by `diffChildren` to determine where to resume the diff\n\t\t// after diffing Components and Fragments. Once we store it the nextDOM\n\t\t// local var, we can clean up the property. Also prevents us hanging on to\n\t\t// DOM nodes that may have been unmounted.\n\t\tchildVNode._nextDom = undefined;\n\n\t\t// Unset diffing flags\n\t\tchildVNode._flags &= ~(INSERT_VNODE | MATCHED);\n\t}\n\n\t// TODO: With new child diffing algo, consider alt ways to diff Fragments.\n\t// Such as dropping oldDom and moving fragments in place\n\t//\n\t// Because the newParentVNode is Fragment-like, we need to set it's\n\t// _nextDom property to the nextSibling of its last child DOM node.\n\t//\n\t// `oldDom` contains the correct value here because if the last child\n\t// is a Fragment-like, then oldDom has already been set to that child's _nextDom.\n\t// If the last child is a DOM VNode, then oldDom will be set to that DOM\n\t// node's nextSibling.\n\tnewParentVNode._nextDom = oldDom;\n\tnewParentVNode._dom = firstChildDom;\n}\n\n/**\n * @param {VNode} newParentVNode\n * @param {ComponentChildren[]} renderResult\n * @param {VNode[]} oldChildren\n */\nfunction constructNewChildrenArray(newParentVNode, renderResult, oldChildren) {\n\t/** @type {number} */\n\tlet i;\n\t/** @type {VNode} */\n\tlet childVNode;\n\t/** @type {VNode} */\n\tlet oldVNode;\n\n\tconst newChildrenLength = renderResult.length;\n\tlet oldChildrenLength = oldChildren.length,\n\t\tremainingOldChildren = oldChildrenLength;\n\n\tlet skew = 0;\n\n\tnewParentVNode._children = [];\n\tfor (i = 0; i < newChildrenLength; i++) {\n\t\t// @ts-expect-error We are reusing the childVNode variable to hold both the\n\t\t// pre and post normalized childVNode\n\t\tchildVNode = renderResult[i];\n\n\t\tif (\n\t\t\tchildVNode == null ||\n\t\t\ttypeof childVNode == 'boolean' ||\n\t\t\ttypeof childVNode == 'function'\n\t\t) {\n\t\t\tchildVNode = newParentVNode._children[i] = null;\n\t\t}\n\t\t// If this newVNode is being reused (e.g. <div>{reuse}{reuse}</div>) in the same diff,\n\t\t// or we are rendering a component (e.g. setState) copy the oldVNodes so it can have\n\t\t// it's own DOM & etc. pointers\n\t\telse if (\n\t\t\ttypeof childVNode == 'string' ||\n\t\t\ttypeof childVNode == 'number' ||\n\t\t\t// eslint-disable-next-line valid-typeof\n\t\t\ttypeof childVNode == 'bigint' ||\n\t\t\tchildVNode.constructor == String\n\t\t) {\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tnull,\n\t\t\t\tchildVNode,\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\tnull\n\t\t\t);\n\t\t} else if (isArray(childVNode)) {\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tFragment,\n\t\t\t\t{ children: childVNode },\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\tnull\n\t\t\t);\n\t\t} else if (childVNode.constructor === undefined && childVNode._depth > 0) {\n\t\t\t// VNode is already in use, clone it. This can happen in the following\n\t\t\t// scenario:\n\t\t\t//   const reuse = <div />\n\t\t\t//   <div>{reuse}<span />{reuse}</div>\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tchildVNode.type,\n\t\t\t\tchildVNode.props,\n\t\t\t\tchildVNode.key,\n\t\t\t\tchildVNode.ref ? childVNode.ref : null,\n\t\t\t\tchildVNode._original\n\t\t\t);\n\t\t} else {\n\t\t\tchildVNode = newParentVNode._children[i] = childVNode;\n\t\t}\n\n\t\tconst skewedIndex = i + skew;\n\n\t\t// Handle unmounting null placeholders, i.e. VNode => null in unkeyed children\n\t\tif (childVNode == null) {\n\t\t\toldVNode = oldChildren[skewedIndex];\n\t\t\tif (\n\t\t\t\toldVNode &&\n\t\t\t\toldVNode.key == null &&\n\t\t\t\toldVNode._dom &&\n\t\t\t\t(oldVNode._flags & MATCHED) === 0\n\t\t\t) {\n\t\t\t\tif (oldVNode._dom == newParentVNode._nextDom) {\n\t\t\t\t\tnewParentVNode._nextDom = getDomSibling(oldVNode);\n\t\t\t\t}\n\n\t\t\t\tunmount(oldVNode, oldVNode, false);\n\n\t\t\t\t// Explicitly nullify this position in oldChildren instead of just\n\t\t\t\t// setting `_match=true` to prevent other routines (e.g.\n\t\t\t\t// `findMatchingIndex` or `getDomSibling`) from thinking VNodes or DOM\n\t\t\t\t// nodes in this position are still available to be used in diffing when\n\t\t\t\t// they have actually already been unmounted. For example, by only\n\t\t\t\t// setting `_match=true` here, the unmounting loop later would attempt\n\t\t\t\t// to unmount this VNode again seeing `_match==true`.  Further,\n\t\t\t\t// getDomSibling doesn't know about _match and so would incorrectly\n\t\t\t\t// assume DOM nodes in this subtree are mounted and usable.\n\t\t\t\toldChildren[skewedIndex] = null;\n\t\t\t\tremainingOldChildren--;\n\t\t\t}\n\t\t\tcontinue;\n\t\t}\n\n\t\tchildVNode._parent = newParentVNode;\n\t\tchildVNode._depth = newParentVNode._depth + 1;\n\n\t\tconst matchingIndex = findMatchingIndex(\n\t\t\tchildVNode,\n\t\t\toldChildren,\n\t\t\tskewedIndex,\n\t\t\tremainingOldChildren\n\t\t);\n\n\t\t// Temporarily store the matchingIndex on the _index property so we can pull\n\t\t// out the oldVNode in diffChildren. We'll override this to the VNode's\n\t\t// final index after using this property to get the oldVNode\n\t\tchildVNode._index = matchingIndex;\n\n\t\toldVNode = null;\n\t\tif (matchingIndex !== -1) {\n\t\t\toldVNode = oldChildren[matchingIndex];\n\t\t\tremainingOldChildren--;\n\t\t\tif (oldVNode) {\n\t\t\t\toldVNode._flags |= MATCHED;\n\t\t\t}\n\t\t}\n\n\t\t// Here, we define isMounting for the purposes of the skew diffing\n\t\t// algorithm. Nodes that are unsuspending are considered mounting and we detect\n\t\t// this by checking if oldVNode._original === null\n\t\tconst isMounting = oldVNode == null || oldVNode._original === null;\n\n\t\tif (isMounting) {\n\t\t\tif (matchingIndex == -1) {\n\t\t\t\tskew--;\n\t\t\t}\n\n\t\t\t// If we are mounting a DOM VNode, mark it for insertion\n\t\t\tif (typeof childVNode.type != 'function') {\n\t\t\t\tchildVNode._flags |= INSERT_VNODE;\n\t\t\t}\n\t\t} else if (matchingIndex !== skewedIndex) {\n\t\t\tif (matchingIndex == skewedIndex - 1) {\n\t\t\t\tskew--;\n\t\t\t} else if (matchingIndex == skewedIndex + 1) {\n\t\t\t\tskew++;\n\t\t\t} else if (matchingIndex > skewedIndex) {\n\t\t\t\t// Our matched DOM-node is further in the list of children than\n\t\t\t\t// where it's at now.\n\n\t\t\t\t// When the remaining old children is bigger than the new-children\n\t\t\t\t// minus our skewed index we know we are dealing with a shrinking list\n\t\t\t\t// we have to increase our skew with the matchedIndex - the skewed index\n\t\t\t\tif (remainingOldChildren > newChildrenLength - skewedIndex) {\n\t\t\t\t\tskew += matchingIndex - skewedIndex;\n\t\t\t\t} else {\n\t\t\t\t\t// If we have matched all the children just decrease the skew\n\t\t\t\t\tskew--;\n\t\t\t\t}\n\t\t\t} else if (matchingIndex < skewedIndex) {\n\t\t\t\tif (matchingIndex == skewedIndex - skew) {\n\t\t\t\t\tskew -= matchingIndex - skewedIndex;\n\t\t\t\t} else {\n\t\t\t\t\t// When our new position is in front of our old position than we increase the skew\n\t\t\t\t\tskew++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Move this VNode's DOM if the original index (matchingIndex) doesn't\n\t\t\t// match the new skew index (i + new skew)\n\t\t\tif (matchingIndex !== i + skew) {\n\t\t\t\tchildVNode._flags |= INSERT_VNODE;\n\t\t\t}\n\t\t}\n\t}\n\n\t// Remove remaining oldChildren if there are any. Loop forwards so that as we\n\t// unmount DOM from the beginning of the oldChildren, we can adjust oldDom to\n\t// point to the next child, which needs to be the first DOM node that won't be\n\t// unmounted.\n\tif (remainingOldChildren) {\n\t\tfor (i = 0; i < oldChildrenLength; i++) {\n\t\t\toldVNode = oldChildren[i];\n\t\t\tif (oldVNode != null && (oldVNode._flags & MATCHED) === 0) {\n\t\t\t\tif (oldVNode._dom == newParentVNode._nextDom) {\n\t\t\t\t\tnewParentVNode._nextDom = getDomSibling(oldVNode);\n\t\t\t\t}\n\n\t\t\t\tunmount(oldVNode, oldVNode);\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * @param {VNode} parentVNode\n * @param {PreactElement} oldDom\n * @param {PreactElement} parentDom\n * @returns {PreactElement}\n */\nfunction insert(parentVNode, oldDom, parentDom) {\n\t// Note: VNodes in nested suspended trees may be missing _children.\n\n\tif (typeof parentVNode.type == 'function') {\n\t\tlet children = parentVNode._children;\n\t\tfor (let i = 0; children && i < children.length; i++) {\n\t\t\tif (children[i]) {\n\t\t\t\t// If we enter this code path on sCU bailout, where we copy\n\t\t\t\t// oldVNode._children to newVNode._children, we need to update the old\n\t\t\t\t// children's _parent pointer to point to the newVNode (parentVNode\n\t\t\t\t// here).\n\t\t\t\tchildren[i]._parent = parentVNode;\n\t\t\t\toldDom = insert(children[i], oldDom, parentDom);\n\t\t\t}\n\t\t}\n\n\t\treturn oldDom;\n\t} else if (parentVNode._dom != oldDom) {\n\t\tif (oldDom && parentVNode.type && !parentDom.contains(oldDom)) {\n\t\t\toldDom = getDomSibling(parentVNode);\n\t\t}\n\t\tparentDom.insertBefore(parentVNode._dom, oldDom || null);\n\t\toldDom = parentVNode._dom;\n\t}\n\n\tdo {\n\t\toldDom = oldDom && oldDom.nextSibling;\n\t} while (oldDom != null && oldDom.nodeType === 8);\n\n\treturn oldDom;\n}\n\n/**\n * Flatten and loop through the children of a virtual node\n * @param {ComponentChildren} children The unflattened children of a virtual\n * node\n * @returns {VNode[]}\n */\nexport function toChildArray(children, out) {\n\tout = out || [];\n\tif (children == null || typeof children == 'boolean') {\n\t} else if (isArray(children)) {\n\t\tchildren.some(child => {\n\t\t\ttoChildArray(child, out);\n\t\t});\n\t} else {\n\t\tout.push(children);\n\t}\n\treturn out;\n}\n\n/**\n * @param {VNode} childVNode\n * @param {VNode[]} oldChildren\n * @param {number} skewedIndex\n * @param {number} remainingOldChildren\n * @returns {number}\n */\nfunction findMatchingIndex(\n\tchildVNode,\n\toldChildren,\n\tskewedIndex,\n\tremainingOldChildren\n) {\n\tconst key = childVNode.key;\n\tconst type = childVNode.type;\n\tlet x = skewedIndex - 1;\n\tlet y = skewedIndex + 1;\n\tlet oldVNode = oldChildren[skewedIndex];\n\n\t// We only need to perform a search if there are more children\n\t// (remainingOldChildren) to search. However, if the oldVNode we just looked\n\t// at skewedIndex was not already used in this diff, then there must be at\n\t// least 1 other (so greater than 1) remainingOldChildren to attempt to match\n\t// against. So the following condition checks that ensuring\n\t// remainingOldChildren > 1 if the oldVNode is not already used/matched. Else\n\t// if the oldVNode was null or matched, then there could needs to be at least\n\t// 1 (aka `remainingOldChildren > 0`) children to find and compare against.\n\tlet shouldSearch =\n\t\tremainingOldChildren >\n\t\t(oldVNode != null && (oldVNode._flags & MATCHED) === 0 ? 1 : 0);\n\n\tif (\n\t\toldVNode === null ||\n\t\t(oldVNode &&\n\t\t\tkey == oldVNode.key &&\n\t\t\ttype === oldVNode.type &&\n\t\t\t(oldVNode._flags & MATCHED) === 0)\n\t) {\n\t\treturn skewedIndex;\n\t} else if (shouldSearch) {\n\t\twhile (x >= 0 || y < oldChildren.length) {\n\t\t\tif (x >= 0) {\n\t\t\t\toldVNode = oldChildren[x];\n\t\t\t\tif (\n\t\t\t\t\toldVNode &&\n\t\t\t\t\t(oldVNode._flags & MATCHED) === 0 &&\n\t\t\t\t\tkey == oldVNode.key &&\n\t\t\t\t\ttype === oldVNode.type\n\t\t\t\t) {\n\t\t\t\t\treturn x;\n\t\t\t\t}\n\t\t\t\tx--;\n\t\t\t}\n\n\t\t\tif (y < oldChildren.length) {\n\t\t\t\toldVNode = oldChildren[y];\n\t\t\t\tif (\n\t\t\t\t\toldVNode &&\n\t\t\t\t\t(oldVNode._flags & MATCHED) === 0 &&\n\t\t\t\t\tkey == oldVNode.key &&\n\t\t\t\t\ttype === oldVNode.type\n\t\t\t\t) {\n\t\t\t\t\treturn y;\n\t\t\t\t}\n\t\t\t\ty++;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn -1;\n}\n", "import {\n\tEMPTY_OBJ,\n\tMODE_HYDRATE,\n\tMODE_SUSPENDED,\n\tRESET_MODE\n} from '../constants';\nimport { BaseComponent, getDomSibling } from '../component';\nimport { Fragment } from '../create-element';\nimport { diffChildren } from './children';\nimport { setProperty } from './props';\nimport { assign, isArray, removeNode, slice } from '../util';\nimport options from '../options';\n\n/**\n * Diff two virtual nodes and apply proper changes to the DOM\n * @param {PreactElement} parentDom The parent of the DOM element\n * @param {VNode} newVNode The new virtual node\n * @param {VNode} oldVNode The old virtual node\n * @param {object} globalContext The current context object. Modified by\n * getChildContext\n * @param {string} namespace Current namespace of the DOM node (HTML, SVG, or MathML)\n * @param {Array<PreactElement>} excessDomChildren\n * @param {Array<Component>} commitQueue List of components which have callbacks\n * to invoke in commitRoot\n * @param {PreactElement} oldDom The current attached DOM element any new dom\n * elements should be placed around. Likely `null` on first render (except when\n * hydrating). Can be a sibling DOM element when diffing Fragments that have\n * siblings. In most cases, it starts out as `oldChildren[0]._dom`.\n * @param {boolean} isHydrating Whether or not we are in hydration\n * @param {any[]} refQueue an array of elements needed to invoke refs\n */\nexport function diff(\n\tparentDom,\n\tnewVNode,\n\toldVNode,\n\tglobalContext,\n\tnamespace,\n\texcessDomChildren,\n\tcommitQueue,\n\toldDom,\n\tisHydrating,\n\trefQueue\n) {\n\t/** @type {any} */\n\tlet tmp,\n\t\tnewType = newVNode.type;\n\n\t// When passing through createElement it assigns the object\n\t// constructor as undefined. This to prevent JSON-injection.\n\tif (newVNode.constructor !== undefined) return null;\n\n\t// If the previous diff bailed out, resume creating/hydrating.\n\tif (oldVNode._flags & MODE_SUSPENDED) {\n\t\tisHydrating = !!(oldVNode._flags & MODE_HYDRATE);\n\t\toldDom = newVNode._dom = oldVNode._dom;\n\t\texcessDomChildren = [oldDom];\n\t}\n\n\tif ((tmp = options._diff)) tmp(newVNode);\n\n\touter: if (typeof newType == 'function') {\n\t\ttry {\n\t\t\tlet c, isNew, oldProps, oldState, snapshot, clearProcessingException;\n\t\t\tlet newProps = newVNode.props;\n\t\t\tconst isClassComponent =\n\t\t\t\t'prototype' in newType && newType.prototype.render;\n\n\t\t\t// Necessary for createContext api. Setting this property will pass\n\t\t\t// the context value as `this.context` just for this component.\n\t\t\ttmp = newType.contextType;\n\t\t\tlet provider = tmp && globalContext[tmp._id];\n\t\t\tlet componentContext = tmp\n\t\t\t\t? provider\n\t\t\t\t\t? provider.props.value\n\t\t\t\t\t: tmp._defaultValue\n\t\t\t\t: globalContext;\n\n\t\t\t// Get component and set it to `c`\n\t\t\tif (oldVNode._component) {\n\t\t\t\tc = newVNode._component = oldVNode._component;\n\t\t\t\tclearProcessingException = c._processingException = c._pendingError;\n\t\t\t} else {\n\t\t\t\t// Instantiate the new component\n\t\t\t\tif (isClassComponent) {\n\t\t\t\t\t// @ts-expect-error The check above verifies that newType is suppose to be constructed\n\t\t\t\t\tnewVNode._component = c = new newType(newProps, componentContext); // eslint-disable-line new-cap\n\t\t\t\t} else {\n\t\t\t\t\t// @ts-expect-error Trust me, Component implements the interface we want\n\t\t\t\t\tnewVNode._component = c = new BaseComponent(\n\t\t\t\t\t\tnewProps,\n\t\t\t\t\t\tcomponentContext\n\t\t\t\t\t);\n\t\t\t\t\tc.constructor = newType;\n\t\t\t\t\tc.render = doRender;\n\t\t\t\t}\n\t\t\t\tif (provider) provider.sub(c);\n\n\t\t\t\tc.props = newProps;\n\t\t\t\tif (!c.state) c.state = {};\n\t\t\t\tc.context = componentContext;\n\t\t\t\tc._globalContext = globalContext;\n\t\t\t\tisNew = c._dirty = true;\n\t\t\t\tc._renderCallbacks = [];\n\t\t\t\tc._stateCallbacks = [];\n\t\t\t}\n\n\t\t\t// Invoke getDerivedStateFromProps\n\t\t\tif (isClassComponent && c._nextState == null) {\n\t\t\t\tc._nextState = c.state;\n\t\t\t}\n\n\t\t\tif (isClassComponent && newType.getDerivedStateFromProps != null) {\n\t\t\t\tif (c._nextState == c.state) {\n\t\t\t\t\tc._nextState = assign({}, c._nextState);\n\t\t\t\t}\n\n\t\t\t\tassign(\n\t\t\t\t\tc._nextState,\n\t\t\t\t\tnewType.getDerivedStateFromProps(newProps, c._nextState)\n\t\t\t\t);\n\t\t\t}\n\n\t\t\toldProps = c.props;\n\t\t\toldState = c.state;\n\t\t\tc._vnode = newVNode;\n\n\t\t\t// Invoke pre-render lifecycle methods\n\t\t\tif (isNew) {\n\t\t\t\tif (\n\t\t\t\t\tisClassComponent &&\n\t\t\t\t\tnewType.getDerivedStateFromProps == null &&\n\t\t\t\t\tc.componentWillMount != null\n\t\t\t\t) {\n\t\t\t\t\tc.componentWillMount();\n\t\t\t\t}\n\n\t\t\t\tif (isClassComponent && c.componentDidMount != null) {\n\t\t\t\t\tc._renderCallbacks.push(c.componentDidMount);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (\n\t\t\t\t\tisClassComponent &&\n\t\t\t\t\tnewType.getDerivedStateFromProps == null &&\n\t\t\t\t\tnewProps !== oldProps &&\n\t\t\t\t\tc.componentWillReceiveProps != null\n\t\t\t\t) {\n\t\t\t\t\tc.componentWillReceiveProps(newProps, componentContext);\n\t\t\t\t}\n\n\t\t\t\tif (\n\t\t\t\t\t!c._force &&\n\t\t\t\t\t((c.shouldComponentUpdate != null &&\n\t\t\t\t\t\tc.shouldComponentUpdate(\n\t\t\t\t\t\t\tnewProps,\n\t\t\t\t\t\t\tc._nextState,\n\t\t\t\t\t\t\tcomponentContext\n\t\t\t\t\t\t) === false) ||\n\t\t\t\t\t\tnewVNode._original === oldVNode._original)\n\t\t\t\t) {\n\t\t\t\t\t// More info about this here: https://gist.github.com/JoviDeCroock/bec5f2ce93544d2e6070ef8e0036e4e8\n\t\t\t\t\tif (newVNode._original !== oldVNode._original) {\n\t\t\t\t\t\t// When we are dealing with a bail because of sCU we have to update\n\t\t\t\t\t\t// the props, state and dirty-state.\n\t\t\t\t\t\t// when we are dealing with strict-equality we don't as the child could still\n\t\t\t\t\t\t// be dirtied see #3883\n\t\t\t\t\t\tc.props = newProps;\n\t\t\t\t\t\tc.state = c._nextState;\n\t\t\t\t\t\tc._dirty = false;\n\t\t\t\t\t}\n\n\t\t\t\t\tnewVNode._dom = oldVNode._dom;\n\t\t\t\t\tnewVNode._children = oldVNode._children;\n\t\t\t\t\tnewVNode._children.forEach(vnode => {\n\t\t\t\t\t\tif (vnode) vnode._parent = newVNode;\n\t\t\t\t\t});\n\n\t\t\t\t\tfor (let i = 0; i < c._stateCallbacks.length; i++) {\n\t\t\t\t\t\tc._renderCallbacks.push(c._stateCallbacks[i]);\n\t\t\t\t\t}\n\t\t\t\t\tc._stateCallbacks = [];\n\n\t\t\t\t\tif (c._renderCallbacks.length) {\n\t\t\t\t\t\tcommitQueue.push(c);\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\n\t\t\t\tif (c.componentWillUpdate != null) {\n\t\t\t\t\tc.componentWillUpdate(newProps, c._nextState, componentContext);\n\t\t\t\t}\n\n\t\t\t\tif (isClassComponent && c.componentDidUpdate != null) {\n\t\t\t\t\tc._renderCallbacks.push(() => {\n\t\t\t\t\t\tc.componentDidUpdate(oldProps, oldState, snapshot);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tc.context = componentContext;\n\t\t\tc.props = newProps;\n\t\t\tc._parentDom = parentDom;\n\t\t\tc._force = false;\n\n\t\t\tlet renderHook = options._render,\n\t\t\t\tcount = 0;\n\t\t\tif (isClassComponent) {\n\t\t\t\tc.state = c._nextState;\n\t\t\t\tc._dirty = false;\n\n\t\t\t\tif (renderHook) renderHook(newVNode);\n\n\t\t\t\ttmp = c.render(c.props, c.state, c.context);\n\n\t\t\t\tfor (let i = 0; i < c._stateCallbacks.length; i++) {\n\t\t\t\t\tc._renderCallbacks.push(c._stateCallbacks[i]);\n\t\t\t\t}\n\t\t\t\tc._stateCallbacks = [];\n\t\t\t} else {\n\t\t\t\tdo {\n\t\t\t\t\tc._dirty = false;\n\t\t\t\t\tif (renderHook) renderHook(newVNode);\n\n\t\t\t\t\ttmp = c.render(c.props, c.state, c.context);\n\n\t\t\t\t\t// Handle setState called in render, see #2553\n\t\t\t\t\tc.state = c._nextState;\n\t\t\t\t} while (c._dirty && ++count < 25);\n\t\t\t}\n\n\t\t\t// Handle setState called in render, see #2553\n\t\t\tc.state = c._nextState;\n\n\t\t\tif (c.getChildContext != null) {\n\t\t\t\tglobalContext = assign(assign({}, globalContext), c.getChildContext());\n\t\t\t}\n\n\t\t\tif (isClassComponent && !isNew && c.getSnapshotBeforeUpdate != null) {\n\t\t\t\tsnapshot = c.getSnapshotBeforeUpdate(oldProps, oldState);\n\t\t\t}\n\n\t\t\tlet isTopLevelFragment =\n\t\t\t\ttmp != null && tmp.type === Fragment && tmp.key == null;\n\t\t\tlet renderResult = isTopLevelFragment ? tmp.props.children : tmp;\n\n\t\t\tdiffChildren(\n\t\t\t\tparentDom,\n\t\t\t\tisArray(renderResult) ? renderResult : [renderResult],\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tnamespace,\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\toldDom,\n\t\t\t\tisHydrating,\n\t\t\t\trefQueue\n\t\t\t);\n\n\t\t\tc.base = newVNode._dom;\n\n\t\t\t// We successfully rendered this VNode, unset any stored hydration/bailout state:\n\t\t\tnewVNode._flags &= RESET_MODE;\n\n\t\t\tif (c._renderCallbacks.length) {\n\t\t\t\tcommitQueue.push(c);\n\t\t\t}\n\n\t\t\tif (clearProcessingException) {\n\t\t\t\tc._pendingError = c._processingException = null;\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tnewVNode._original = null;\n\t\t\t// if hydrating or creating initial tree, bailout preserves DOM:\n\t\t\tif (isHydrating || excessDomChildren != null) {\n\t\t\t\tnewVNode._flags |= isHydrating\n\t\t\t\t\t? MODE_HYDRATE | MODE_SUSPENDED\n\t\t\t\t\t: MODE_HYDRATE;\n\n\t\t\t\twhile (oldDom && oldDom.nodeType === 8 && oldDom.nextSibling) {\n\t\t\t\t\toldDom = oldDom.nextSibling;\n\t\t\t\t}\n\t\t\t\texcessDomChildren[excessDomChildren.indexOf(oldDom)] = null;\n\t\t\t\tnewVNode._dom = oldDom;\n\t\t\t} else {\n\t\t\t\tnewVNode._dom = oldVNode._dom;\n\t\t\t\tnewVNode._children = oldVNode._children;\n\t\t\t}\n\t\t\toptions._catchError(e, newVNode, oldVNode);\n\t\t}\n\t} else if (\n\t\texcessDomChildren == null &&\n\t\tnewVNode._original === oldVNode._original\n\t) {\n\t\tnewVNode._children = oldVNode._children;\n\t\tnewVNode._dom = oldVNode._dom;\n\t} else {\n\t\tnewVNode._dom = diffElementNodes(\n\t\t\toldVNode._dom,\n\t\t\tnewVNode,\n\t\t\toldVNode,\n\t\t\tglobalContext,\n\t\t\tnamespace,\n\t\t\texcessDomChildren,\n\t\t\tcommitQueue,\n\t\t\tisHydrating,\n\t\t\trefQueue\n\t\t);\n\t}\n\n\tif ((tmp = options.diffed)) tmp(newVNode);\n}\n\n/**\n * @param {Array<Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {VNode} root\n */\nexport function commitRoot(commitQueue, root, refQueue) {\n\troot._nextDom = undefined;\n\n\tfor (let i = 0; i < refQueue.length; i++) {\n\t\tapplyRef(refQueue[i], refQueue[++i], refQueue[++i]);\n\t}\n\n\tif (options._commit) options._commit(root, commitQueue);\n\n\tcommitQueue.some(c => {\n\t\ttry {\n\t\t\t// @ts-expect-error Reuse the commitQueue variable here so the type changes\n\t\t\tcommitQueue = c._renderCallbacks;\n\t\t\tc._renderCallbacks = [];\n\t\t\tcommitQueue.some(cb => {\n\t\t\t\t// @ts-expect-error See above comment on commitQueue\n\t\t\t\tcb.call(c);\n\t\t\t});\n\t\t} catch (e) {\n\t\t\toptions._catchError(e, c._vnode);\n\t\t}\n\t});\n}\n\n/**\n * Diff two virtual nodes representing DOM element\n * @param {PreactElement} dom The DOM element representing the virtual nodes\n * being diffed\n * @param {VNode} newVNode The new virtual node\n * @param {VNode} oldVNode The old virtual node\n * @param {object} globalContext The current context object\n * @param {string} namespace Current namespace of the DOM node (HTML, SVG, or MathML)\n * @param {Array<PreactElement>} excessDomChildren\n * @param {Array<Component>} commitQueue List of components which have callbacks\n * to invoke in commitRoot\n * @param {boolean} isHydrating Whether or not we are in hydration\n * @param {any[]} refQueue an array of elements needed to invoke refs\n * @returns {PreactElement}\n */\nfunction diffElementNodes(\n\tdom,\n\tnewVNode,\n\toldVNode,\n\tglobalContext,\n\tnamespace,\n\texcessDomChildren,\n\tcommitQueue,\n\tisHydrating,\n\trefQueue\n) {\n\tlet oldProps = oldVNode.props;\n\tlet newProps = newVNode.props;\n\tlet nodeType = /** @type {string} */ (newVNode.type);\n\t/** @type {any} */\n\tlet i;\n\t/** @type {{ __html?: string }} */\n\tlet newHtml;\n\t/** @type {{ __html?: string }} */\n\tlet oldHtml;\n\t/** @type {ComponentChildren} */\n\tlet newChildren;\n\tlet value;\n\tlet inputValue;\n\tlet checked;\n\n\t// Tracks entering and exiting namespaces when descending through the tree.\n\tif (nodeType === 'svg') namespace = 'http://www.w3.org/2000/svg';\n\telse if (nodeType === 'math')\n\t\tnamespace = 'http://www.w3.org/1998/Math/MathML';\n\telse if (!namespace) namespace = 'http://www.w3.org/1999/xhtml';\n\n\tif (excessDomChildren != null) {\n\t\tfor (i = 0; i < excessDomChildren.length; i++) {\n\t\t\tvalue = excessDomChildren[i];\n\n\t\t\t// if newVNode matches an element in excessDomChildren or the `dom`\n\t\t\t// argument matches an element in excessDomChildren, remove it from\n\t\t\t// excessDomChildren so it isn't later removed in diffChildren\n\t\t\tif (\n\t\t\t\tvalue &&\n\t\t\t\t'setAttribute' in value === !!nodeType &&\n\t\t\t\t(nodeType ? value.localName === nodeType : value.nodeType === 3)\n\t\t\t) {\n\t\t\t\tdom = value;\n\t\t\t\texcessDomChildren[i] = null;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (dom == null) {\n\t\tif (nodeType === null) {\n\t\t\treturn document.createTextNode(newProps);\n\t\t}\n\n\t\tdom = document.createElementNS(\n\t\t\tnamespace,\n\t\t\tnodeType,\n\t\t\tnewProps.is && newProps\n\t\t);\n\n\t\t// we created a new parent, so none of the previously attached children can be reused:\n\t\texcessDomChildren = null;\n\t\t// we are creating a new node, so we can assume this is a new subtree (in\n\t\t// case we are hydrating), this deopts the hydrate\n\t\tisHydrating = false;\n\t}\n\n\tif (nodeType === null) {\n\t\t// During hydration, we still have to split merged text from SSR'd HTML.\n\t\tif (oldProps !== newProps && (!isHydrating || dom.data !== newProps)) {\n\t\t\tdom.data = newProps;\n\t\t}\n\t} else {\n\t\t// If excessDomChildren was not null, repopulate it with the current element's children:\n\t\texcessDomChildren = excessDomChildren && slice.call(dom.childNodes);\n\n\t\toldProps = oldVNode.props || EMPTY_OBJ;\n\n\t\t// If we are in a situation where we are not hydrating but are using\n\t\t// existing DOM (e.g. replaceNode) we should read the existing DOM\n\t\t// attributes to diff them\n\t\tif (!isHydrating && excessDomChildren != null) {\n\t\t\toldProps = {};\n\t\t\tfor (i = 0; i < dom.attributes.length; i++) {\n\t\t\t\tvalue = dom.attributes[i];\n\t\t\t\toldProps[value.name] = value.value;\n\t\t\t}\n\t\t}\n\n\t\tfor (i in oldProps) {\n\t\t\tvalue = oldProps[i];\n\t\t\tif (i == 'children') {\n\t\t\t} else if (i == 'dangerouslySetInnerHTML') {\n\t\t\t\toldHtml = value;\n\t\t\t} else if (i !== 'key' && !(i in newProps)) {\n\t\t\t\tif (\n\t\t\t\t\t(i == 'value' && 'defaultValue' in newProps) ||\n\t\t\t\t\t(i == 'checked' && 'defaultChecked' in newProps)\n\t\t\t\t) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tsetProperty(dom, i, null, value, namespace);\n\t\t\t}\n\t\t}\n\n\t\t// During hydration, props are not diffed at all (including dangerouslySetInnerHTML)\n\t\t// @TODO we should warn in debug mode when props don't match here.\n\t\tfor (i in newProps) {\n\t\t\tvalue = newProps[i];\n\t\t\tif (i == 'children') {\n\t\t\t\tnewChildren = value;\n\t\t\t} else if (i == 'dangerouslySetInnerHTML') {\n\t\t\t\tnewHtml = value;\n\t\t\t} else if (i == 'value') {\n\t\t\t\tinputValue = value;\n\t\t\t} else if (i == 'checked') {\n\t\t\t\tchecked = value;\n\t\t\t} else if (\n\t\t\t\ti !== 'key' &&\n\t\t\t\t(!isHydrating || typeof value == 'function') &&\n\t\t\t\toldProps[i] !== value\n\t\t\t) {\n\t\t\t\tsetProperty(dom, i, value, oldProps[i], namespace);\n\t\t\t}\n\t\t}\n\n\t\t// If the new vnode didn't have dangerouslySetInnerHTML, diff its children\n\t\tif (newHtml) {\n\t\t\t// Avoid re-applying the same '__html' if it did not changed between re-render\n\t\t\tif (\n\t\t\t\t!isHydrating &&\n\t\t\t\t(!oldHtml ||\n\t\t\t\t\t(newHtml.__html !== oldHtml.__html &&\n\t\t\t\t\t\tnewHtml.__html !== dom.innerHTML))\n\t\t\t) {\n\t\t\t\tdom.innerHTML = newHtml.__html;\n\t\t\t}\n\n\t\t\tnewVNode._children = [];\n\t\t} else {\n\t\t\tif (oldHtml) dom.innerHTML = '';\n\n\t\t\tdiffChildren(\n\t\t\t\tdom,\n\t\t\t\tisArray(newChildren) ? newChildren : [newChildren],\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tnodeType === 'foreignObject'\n\t\t\t\t\t? 'http://www.w3.org/1999/xhtml'\n\t\t\t\t\t: namespace,\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\texcessDomChildren\n\t\t\t\t\t? excessDomChildren[0]\n\t\t\t\t\t: oldVNode._children && getDomSibling(oldVNode, 0),\n\t\t\t\tisHydrating,\n\t\t\t\trefQueue\n\t\t\t);\n\n\t\t\t// Remove children that are not part of any vnode.\n\t\t\tif (excessDomChildren != null) {\n\t\t\t\tfor (i = excessDomChildren.length; i--; ) {\n\t\t\t\t\tif (excessDomChildren[i] != null) removeNode(excessDomChildren[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// As above, don't diff props during hydration\n\t\tif (!isHydrating) {\n\t\t\ti = 'value';\n\t\t\tif (\n\t\t\t\tinputValue !== undefined &&\n\t\t\t\t// #2756 For the <progress>-element the initial value is 0,\n\t\t\t\t// despite the attribute not being present. When the attribute\n\t\t\t\t// is missing the progress bar is treated as indeterminate.\n\t\t\t\t// To fix that we'll always update it when it is 0 for progress elements\n\t\t\t\t(inputValue !== dom[i] ||\n\t\t\t\t\t(nodeType === 'progress' && !inputValue) ||\n\t\t\t\t\t// This is only for IE 11 to fix <select> value not being updated.\n\t\t\t\t\t// To avoid a stale select value we need to set the option.value\n\t\t\t\t\t// again, which triggers IE11 to re-evaluate the select value\n\t\t\t\t\t(nodeType === 'option' && inputValue !== oldProps[i]))\n\t\t\t) {\n\t\t\t\tsetProperty(dom, i, inputValue, oldProps[i], namespace);\n\t\t\t}\n\n\t\t\ti = 'checked';\n\t\t\tif (checked !== undefined && checked !== dom[i]) {\n\t\t\t\tsetProperty(dom, i, checked, oldProps[i], namespace);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn dom;\n}\n\n/**\n * Invoke or update a ref, depending on whether it is a function or object ref.\n * @param {Ref<any> & { _unmount?: unknown }} ref\n * @param {any} value\n * @param {VNode} vnode\n */\nexport function applyRef(ref, value, vnode) {\n\ttry {\n\t\tif (typeof ref == 'function') {\n\t\t\tlet hasRefUnmount = typeof ref._unmount == 'function';\n\t\t\tif (hasRefUnmount) {\n\t\t\t\t// @ts-ignore TS doesn't like moving narrowing checks into variables\n\t\t\t\tref._unmount();\n\t\t\t}\n\n\t\t\tif (!hasRefUnmount || value != null) {\n\t\t\t\t// Store the cleanup function on the function\n\t\t\t\t// instance object itself to avoid shape\n\t\t\t\t// transitioning vnode\n\t\t\t\tref._unmount = ref(value);\n\t\t\t}\n\t\t} else ref.current = value;\n\t} catch (e) {\n\t\toptions._catchError(e, vnode);\n\t}\n}\n\n/**\n * Unmount a virtual node from the tree and apply DOM changes\n * @param {VNode} vnode The virtual node to unmount\n * @param {VNode} parentVNode The parent of the VNode that initiated the unmount\n * @param {boolean} [skipRemove] Flag that indicates that a parent node of the\n * current element is already detached from the DOM.\n */\nexport function unmount(vnode, parentVNode, skipRemove) {\n\tlet r;\n\tif (options.unmount) options.unmount(vnode);\n\n\tif ((r = vnode.ref)) {\n\t\tif (!r.current || r.current === vnode._dom) {\n\t\t\tapplyRef(r, null, parentVNode);\n\t\t}\n\t}\n\n\tif ((r = vnode._component) != null) {\n\t\tif (r.componentWillUnmount) {\n\t\t\ttry {\n\t\t\t\tr.componentWillUnmount();\n\t\t\t} catch (e) {\n\t\t\t\toptions._catchError(e, parentVNode);\n\t\t\t}\n\t\t}\n\n\t\tr.base = r._parentDom = null;\n\t}\n\n\tif ((r = vnode._children)) {\n\t\tfor (let i = 0; i < r.length; i++) {\n\t\t\tif (r[i]) {\n\t\t\t\tunmount(\n\t\t\t\t\tr[i],\n\t\t\t\t\tparentVNode,\n\t\t\t\t\tskipRemove || typeof vnode.type != 'function'\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\tif (!skipRemove && vnode._dom != null) {\n\t\tremoveNode(vnode._dom);\n\t}\n\n\t// Must be set to `undefined` to properly clean up `_nextDom`\n\t// for which `null` is a valid value. See comment in `create-element.js`\n\tvnode._component = vnode._parent = vnode._dom = vnode._nextDom = undefined;\n}\n\n/** The `.render()` method for a PFC backing instance. */\nfunction doRender(props, state, context) {\n\treturn this.constructor(props, context);\n}\n", "import { EMPTY_OBJ } from './constants';\nimport { commitRoot, diff } from './diff/index';\nimport { createElement, Fragment } from './create-element';\nimport options from './options';\nimport { slice } from './util';\n\n/**\n * Render a Preact virtual node into a DOM element\n * @param {ComponentChild} vnode The virtual node to render\n * @param {PreactElement} parentDom The DOM element to render into\n * @param {PreactElement | object} [replaceNode] Optional: Attempt to re-use an\n * existing DOM tree rooted at `replaceNode`\n */\nexport function render(vnode, parentDom, replaceNode) {\n\tif (options._root) options._root(vnode, parentDom);\n\n\t// We abuse the `replaceNode` parameter in `hydrate()` to signal if we are in\n\t// hydration mode or not by passing the `hydrate` function instead of a DOM\n\t// element..\n\tlet isHydrating = typeof replaceNode == 'function';\n\n\t// To be able to support calling `render()` multiple times on the same\n\t// DOM node, we need to obtain a reference to the previous tree. We do\n\t// this by assigning a new `_children` property to DOM nodes which points\n\t// to the last rendered tree. By default this property is not present, which\n\t// means that we are mounting a new tree for the first time.\n\tlet oldVNode = isHydrating\n\t\t? null\n\t\t: (replaceNode && replaceNode._children) || parentDom._children;\n\n\tvnode = ((!isHydrating && replaceNode) || parentDom)._children =\n\t\tcreateElement(Fragment, null, [vnode]);\n\n\t// List of effects that need to be called after diffing.\n\tlet commitQueue = [],\n\t\trefQueue = [];\n\tdiff(\n\t\tparentDom,\n\t\t// Determine the new vnode tree and store it on the DOM element on\n\t\t// our custom `_children` property.\n\t\tvnode,\n\t\toldVNode || EMPTY_OBJ,\n\t\tEMPTY_OBJ,\n\t\tparentDom.namespaceURI,\n\t\t!isHydrating && replaceNode\n\t\t\t? [replaceNode]\n\t\t\t: oldVNode\n\t\t\t\t? null\n\t\t\t\t: parentDom.firstChild\n\t\t\t\t\t? slice.call(parentDom.childNodes)\n\t\t\t\t\t: null,\n\t\tcommitQueue,\n\t\t!isHydrating && replaceNode\n\t\t\t? replaceNode\n\t\t\t: oldVNode\n\t\t\t\t? oldVNode._dom\n\t\t\t\t: parentDom.firstChild,\n\t\tisHydrating,\n\t\trefQueue\n\t);\n\n\t// Flush all queued effects\n\tcommitRoot(commitQueue, vnode, refQueue);\n}\n\n/**\n * Update an existing DOM element with data from a Preact virtual node\n * @param {ComponentChild} vnode The virtual node to render\n * @param {PreactElement} parentDom The DOM element to update\n */\nexport function hydrate(vnode, parentDom) {\n\trender(vnode, parentDom, hydrate);\n}\n", "import { assign, slice } from './util';\nimport { createVNode } from './create-element';\n\n/**\n * Clones the given VNode, optionally adding attributes/props and replacing its\n * children.\n * @param {VNode} vnode The virtual DOM element to clone\n * @param {object} props Attributes/props to add when cloning\n * @param {Array<ComponentChildren>} rest Any additional arguments will be used\n * as replacement children.\n * @returns {VNode}\n */\nexport function cloneElement(vnode, props, children) {\n\tlet normalizedProps = assign({}, vnode.props),\n\t\tkey,\n\t\tref,\n\t\ti;\n\n\tlet defaultProps;\n\n\tif (vnode.type && vnode.type.defaultProps) {\n\t\tdefaultProps = vnode.type.defaultProps;\n\t}\n\n\tfor (i in props) {\n\t\tif (i == 'key') key = props[i];\n\t\telse if (i == 'ref') ref = props[i];\n\t\telse if (props[i] === undefined && defaultProps !== undefined) {\n\t\t\tnormalizedProps[i] = defaultProps[i];\n\t\t} else {\n\t\t\tnormalizedProps[i] = props[i];\n\t\t}\n\t}\n\n\tif (arguments.length > 2) {\n\t\tnormalizedProps.children =\n\t\t\targuments.length > 3 ? slice.call(arguments, 2) : children;\n\t}\n\n\treturn createVNode(\n\t\tvnode.type,\n\t\tnormalizedProps,\n\t\tkey || vnode.key,\n\t\tref || vnode.ref,\n\t\tnull\n\t);\n}\n", "/**\n * Find the closest error boundary to a thrown error and call it\n * @param {object} error The thrown value\n * @param {VNode} vnode The vnode that threw the error that was caught (except\n * for unmounting when this parameter is the highest parent that was being\n * unmounted)\n * @param {VNode} [oldVNode]\n * @param {ErrorInfo} [errorInfo]\n */\nexport function _catchError(error, vnode, oldVNode, errorInfo) {\n\t/** @type {Component} */\n\tlet component,\n\t\t/** @type {ComponentType} */\n\t\tctor,\n\t\t/** @type {boolean} */\n\t\thandled;\n\n\tfor (; (vnode = vnode._parent); ) {\n\t\tif ((component = vnode._component) && !component._processingException) {\n\t\t\ttry {\n\t\t\t\tctor = component.constructor;\n\n\t\t\t\tif (ctor && ctor.getDerivedStateFromError != null) {\n\t\t\t\t\tcomponent.setState(ctor.getDerivedStateFromError(error));\n\t\t\t\t\thandled = component._dirty;\n\t\t\t\t}\n\n\t\t\t\tif (component.componentDidCatch != null) {\n\t\t\t\t\tcomponent.componentDidCatch(error, errorInfo || {});\n\t\t\t\t\thandled = component._dirty;\n\t\t\t\t}\n\n\t\t\t\t// This is an error boundary. Mark it as having bailed out, and whether it was mid-hydration.\n\t\t\t\tif (handled) {\n\t\t\t\t\treturn (component._pendingError = component);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\terror = e;\n\t\t\t}\n\t\t}\n\t}\n\n\tthrow error;\n}\n", "import { Component, Fragment, options } from 'preact';\n\nexport function initDevTools() {\n\tconst globalVar =\n\t\ttypeof globalThis !== 'undefined'\n\t\t\t? globalThis\n\t\t\t: typeof window !== 'undefined'\n\t\t\t\t? window\n\t\t\t\t: undefined;\n\n\tif (\n\t\tglobalVar !== null &&\n\t\tglobalVar !== undefined &&\n\t\tglobalVar.__PREACT_DEVTOOLS__\n\t) {\n\t\tglobalVar.__PREACT_DEVTOOLS__.attachPreact('10.23.2', options, {\n\t\t\tFragment,\n\t\t\tComponent\n\t\t});\n\t}\n}\n", "import { options } from 'preact';\nimport { initDevTools } from './devtools';\n\ninitDevTools();\n\n/**\n * Display a custom label for a custom hook for the devtools panel\n * @type {<T>(value: T, name: string) => T}\n */\nexport function addHookName(value, name) {\n\tif (options._addHookName) {\n\t\toptions._addHookName(name);\n\t}\n\treturn value;\n}\n", "const ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nlet loggedTypeFailures = {};\n\n/**\n * Reset the history of which prop type warnings have been logged.\n */\nexport function resetPropWarnings() {\n\tloggedTypeFailures = {};\n}\n\n/**\n * Assert that the values match with the type specs.\n * Error messages are memorized and will only be shown once.\n *\n * Adapted from https://github.com/facebook/prop-types/blob/master/checkPropTypes.js\n *\n * @param {object} typeSpecs Map of name to a ReactPropType\n * @param {object} values Runtime values that need to be type-checked\n * @param {string} location e.g. \"prop\", \"context\", \"child context\"\n * @param {string} componentName Name of the component for error messages.\n * @param {?Function} getStack Returns the component stack.\n */\nexport function checkPropTypes(\n\ttypeSpecs,\n\tvalues,\n\tlocation,\n\tcomponentName,\n\tgetStack\n) {\n\tObject.keys(typeSpecs).forEach(typeSpecName => {\n\t\tlet error;\n\t\ttry {\n\t\t\terror = typeSpecs[typeSpecName](\n\t\t\t\tvalues,\n\t\t\t\ttypeSpecName,\n\t\t\t\tcomponentName,\n\t\t\t\tlocation,\n\t\t\t\tnull,\n\t\t\t\tReactPropTypesSecret\n\t\t\t);\n\t\t} catch (e) {\n\t\t\terror = e;\n\t\t}\n\t\tif (error && !(error.message in loggedTypeFailures)) {\n\t\t\tloggedTypeFailures[error.message] = true;\n\t\t\tconsole.error(\n\t\t\t\t`Failed ${location} type: ${error.message}${\n\t\t\t\t\t(getStack && `\\n${getStack()}`) || ''\n\t\t\t\t}`\n\t\t\t);\n\t\t}\n\t});\n}\n", "import { options, Fragment } from 'preact';\n\n/**\n * Get human readable name of the component/dom node\n * @param {import('./internal').VNode} vnode\n * @param {import('./internal').VNode} vnode\n * @returns {string}\n */\nexport function getDisplayName(vnode) {\n\tif (vnode.type === Fragment) {\n\t\treturn 'Fragment';\n\t} else if (typeof vnode.type == 'function') {\n\t\treturn vnode.type.displayName || vnode.type.name;\n\t} else if (typeof vnode.type == 'string') {\n\t\treturn vnode.type;\n\t}\n\n\treturn '#text';\n}\n\n/**\n * Used to keep track of the currently rendered `vnode` and print it\n * in debug messages.\n */\nlet renderStack = [];\n\n/**\n * Keep track of the current owners. An owner describes a component\n * which was responsible to render a specific `vnode`. This exclude\n * children that are passed via `props.children`, because they belong\n * to the parent owner.\n *\n * ```jsx\n * const Foo = props => <div>{props.children}</div> // div's owner is Foo\n * const Bar = props => {\n *   return (\n *     <Foo><span /></Foo> // Foo's owner is Bar, span's owner is Bar\n *   )\n * }\n * ```\n *\n * Note: A `vnode` may be hoisted to the root scope due to compiler\n * optimiztions. In these cases the `_owner` will be different.\n */\nlet ownerStack = [];\n\n/**\n * Get the currently rendered `vnode`\n * @returns {import('./internal').VNode | null}\n */\nexport function getCurrentVNode() {\n\treturn renderStack.length > 0 ? renderStack[renderStack.length - 1] : null;\n}\n\n/**\n * If the user doesn't have `@babel/plugin-transform-react-jsx-source`\n * somewhere in his tool chain we can't print the filename and source\n * location of a component. In that case we just omit that, but we'll\n * print a helpful message to the console, notifying the user of it.\n */\nlet showJsxSourcePluginWarning = true;\n\n/**\n * Check if a `vnode` is a possible owner.\n * @param {import('./internal').VNode} vnode\n */\nfunction isPossibleOwner(vnode) {\n\treturn typeof vnode.type == 'function' && vnode.type != Fragment;\n}\n\n/**\n * Return the component stack that was captured up to this point.\n * @param {import('./internal').VNode} vnode\n * @returns {string}\n */\nexport function getOwnerStack(vnode) {\n\tconst stack = [vnode];\n\tlet next = vnode;\n\twhile (next._owner != null) {\n\t\tstack.push(next._owner);\n\t\tnext = next._owner;\n\t}\n\n\treturn stack.reduce((acc, owner) => {\n\t\tacc += `  in ${getDisplayName(owner)}`;\n\n\t\tconst source = owner.__source;\n\t\tif (source) {\n\t\t\tacc += ` (at ${source.fileName}:${source.lineNumber})`;\n\t\t} else if (showJsxSourcePluginWarning) {\n\t\t\tconsole.warn(\n\t\t\t\t'Add @babel/plugin-transform-react-jsx-source to get a more detailed component stack. Note that you should not add it to production builds of your App for bundle size reasons.'\n\t\t\t);\n\t\t}\n\t\tshowJsxSourcePluginWarning = false;\n\n\t\treturn (acc += '\\n');\n\t}, '');\n}\n\n/**\n * Setup code to capture the component trace while rendering. Note that\n * we cannot simply traverse `vnode._parent` upwards, because we have some\n * debug messages for `this.setState` where the `vnode` is `undefined`.\n */\nexport function setupComponentStack() {\n\tlet oldDiff = options._diff;\n\tlet oldDiffed = options.diffed;\n\tlet oldRoot = options._root;\n\tlet oldVNode = options.vnode;\n\tlet oldRender = options._render;\n\n\toptions.diffed = vnode => {\n\t\tif (isPossibleOwner(vnode)) {\n\t\t\townerStack.pop();\n\t\t}\n\t\trenderStack.pop();\n\t\tif (oldDiffed) oldDiffed(vnode);\n\t};\n\n\toptions._diff = vnode => {\n\t\tif (isPossibleOwner(vnode)) {\n\t\t\trenderStack.push(vnode);\n\t\t}\n\t\tif (oldDiff) oldDiff(vnode);\n\t};\n\n\toptions._root = (vnode, parent) => {\n\t\townerStack = [];\n\t\tif (oldRoot) oldRoot(vnode, parent);\n\t};\n\n\toptions.vnode = vnode => {\n\t\tvnode._owner =\n\t\t\townerStack.length > 0 ? ownerStack[ownerStack.length - 1] : null;\n\t\tif (oldVNode) oldVNode(vnode);\n\t};\n\n\toptions._render = vnode => {\n\t\tif (isPossibleOwner(vnode)) {\n\t\t\townerStack.push(vnode);\n\t\t}\n\n\t\tif (oldRender) oldRender(vnode);\n\t};\n}\n", "import { checkPropTypes } from './check-props';\nimport { options, Component } from 'preact';\nimport {\n\tELEMENT_NODE,\n\tDOCUMENT_NODE,\n\tDOCUMENT_FRAGMENT_NODE\n} from './constants';\nimport {\n\tgetOwnerStack,\n\tsetupComponentStack,\n\tgetCurrentVNode,\n\tgetDisplayName\n} from './component-stack';\nimport { assign, isNaN } from './util';\n\nconst isWeakMapSupported = typeof WeakMap == 'function';\n\n/**\n * @param {import('./internal').VNode} vnode\n * @returns {Array<string>}\n */\nfunction getDomChildren(vnode) {\n\tlet domChildren = [];\n\n\tif (!vnode._children) return domChildren;\n\n\tvnode._children.forEach(child => {\n\t\tif (child && typeof child.type === 'function') {\n\t\t\tdomChildren.push.apply(domChildren, getDomChildren(child));\n\t\t} else if (child && typeof child.type === 'string') {\n\t\t\tdomChildren.push(child.type);\n\t\t}\n\t});\n\n\treturn domChildren;\n}\n\n/**\n * @param {import('./internal').VNode} parent\n * @returns {string}\n */\nfunction getClosestDomNodeParentName(parent) {\n\tif (!parent) return '';\n\tif (typeof parent.type == 'function') {\n\t\tif (parent._parent == null) {\n\t\t\tif (parent._dom != null && parent._dom.parentNode != null) {\n\t\t\t\treturn parent._dom.parentNode.localName;\n\t\t\t}\n\t\t\treturn '';\n\t\t}\n\t\treturn getClosestDomNodeParentName(parent._parent);\n\t}\n\treturn /** @type {string} */ (parent.type);\n}\n\nexport function initDebug() {\n\tsetupComponentStack();\n\n\tlet hooksAllowed = false;\n\n\t/* eslint-disable no-console */\n\tlet oldBeforeDiff = options._diff;\n\tlet oldDiffed = options.diffed;\n\tlet oldVnode = options.vnode;\n\tlet oldRender = options._render;\n\tlet oldCatchError = options._catchError;\n\tlet oldRoot = options._root;\n\tlet oldHook = options._hook;\n\tconst warnedComponents = !isWeakMapSupported\n\t\t? null\n\t\t: {\n\t\t\t\tuseEffect: new WeakMap(),\n\t\t\t\tuseLayoutEffect: new WeakMap(),\n\t\t\t\tlazyPropTypes: new WeakMap()\n\t\t\t};\n\tconst deprecations = [];\n\n\toptions._catchError = (error, vnode, oldVNode, errorInfo) => {\n\t\tlet component = vnode && vnode._component;\n\t\tif (component && typeof error.then == 'function') {\n\t\t\tconst promise = error;\n\t\t\terror = new Error(\n\t\t\t\t`Missing Suspense. The throwing component was: ${getDisplayName(vnode)}`\n\t\t\t);\n\n\t\t\tlet parent = vnode;\n\t\t\tfor (; parent; parent = parent._parent) {\n\t\t\t\tif (parent._component && parent._component._childDidSuspend) {\n\t\t\t\t\terror = promise;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// We haven't recovered and we know at this point that there is no\n\t\t\t// Suspense component higher up in the tree\n\t\t\tif (error instanceof Error) {\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t}\n\n\t\ttry {\n\t\t\terrorInfo = errorInfo || {};\n\t\t\terrorInfo.componentStack = getOwnerStack(vnode);\n\t\t\toldCatchError(error, vnode, oldVNode, errorInfo);\n\n\t\t\t// when an error was handled by an ErrorBoundary we will nonetheless emit an error\n\t\t\t// event on the window object. This is to make up for react compatibility in dev mode\n\t\t\t// and thus make the Next.js dev overlay work.\n\t\t\tif (typeof error.then != 'function') {\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tthrow error;\n\t\t\t\t});\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tthrow e;\n\t\t}\n\t};\n\n\toptions._root = (vnode, parentNode) => {\n\t\tif (!parentNode) {\n\t\t\tthrow new Error(\n\t\t\t\t'Undefined parent passed to render(), this is the second argument.\\n' +\n\t\t\t\t\t'Check if the element is available in the DOM/has the correct id.'\n\t\t\t);\n\t\t}\n\n\t\tlet isValid;\n\t\tswitch (parentNode.nodeType) {\n\t\t\tcase ELEMENT_NODE:\n\t\t\tcase DOCUMENT_FRAGMENT_NODE:\n\t\t\tcase DOCUMENT_NODE:\n\t\t\t\tisValid = true;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tisValid = false;\n\t\t}\n\n\t\tif (!isValid) {\n\t\t\tlet componentName = getDisplayName(vnode);\n\t\t\tthrow new Error(\n\t\t\t\t`Expected a valid HTML node as a second argument to render.\tReceived ${parentNode} instead: render(<${componentName} />, ${parentNode});`\n\t\t\t);\n\t\t}\n\n\t\tif (oldRoot) oldRoot(vnode, parentNode);\n\t};\n\n\toptions._diff = vnode => {\n\t\tlet { type } = vnode;\n\n\t\thooksAllowed = true;\n\n\t\tif (type === undefined) {\n\t\t\tthrow new Error(\n\t\t\t\t'Undefined component passed to createElement()\\n\\n' +\n\t\t\t\t\t'You likely forgot to export your component or might have mixed up default and named imports' +\n\t\t\t\t\tserializeVNode(vnode) +\n\t\t\t\t\t`\\n\\n${getOwnerStack(vnode)}`\n\t\t\t);\n\t\t} else if (type != null && typeof type == 'object') {\n\t\t\tif (type._children !== undefined && type._dom !== undefined) {\n\t\t\t\tthrow new Error(\n\t\t\t\t\t`Invalid type passed to createElement(): ${type}\\n\\n` +\n\t\t\t\t\t\t'Did you accidentally pass a JSX literal as JSX twice?\\n\\n' +\n\t\t\t\t\t\t`  let My${getDisplayName(vnode)} = ${serializeVNode(type)};\\n` +\n\t\t\t\t\t\t`  let vnode = <My${getDisplayName(vnode)} />;\\n\\n` +\n\t\t\t\t\t\t'This usually happens when you export a JSX literal and not the component.' +\n\t\t\t\t\t\t`\\n\\n${getOwnerStack(vnode)}`\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tthrow new Error(\n\t\t\t\t'Invalid type passed to createElement(): ' +\n\t\t\t\t\t(Array.isArray(type) ? 'array' : type)\n\t\t\t);\n\t\t}\n\n\t\tif (\n\t\t\tvnode.ref !== undefined &&\n\t\t\ttypeof vnode.ref != 'function' &&\n\t\t\ttypeof vnode.ref != 'object' &&\n\t\t\t!('$$typeof' in vnode) // allow string refs when preact-compat is installed\n\t\t) {\n\t\t\tthrow new Error(\n\t\t\t\t`Component's \"ref\" property should be a function, or an object created ` +\n\t\t\t\t\t`by createRef(), but got [${typeof vnode.ref}] instead\\n` +\n\t\t\t\t\tserializeVNode(vnode) +\n\t\t\t\t\t`\\n\\n${getOwnerStack(vnode)}`\n\t\t\t);\n\t\t}\n\n\t\tif (typeof vnode.type == 'string') {\n\t\t\tfor (const key in vnode.props) {\n\t\t\t\tif (\n\t\t\t\t\tkey[0] === 'o' &&\n\t\t\t\t\tkey[1] === 'n' &&\n\t\t\t\t\ttypeof vnode.props[key] != 'function' &&\n\t\t\t\t\tvnode.props[key] != null\n\t\t\t\t) {\n\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t`Component's \"${key}\" property should be a function, ` +\n\t\t\t\t\t\t\t`but got [${typeof vnode.props[key]}] instead\\n` +\n\t\t\t\t\t\t\tserializeVNode(vnode) +\n\t\t\t\t\t\t\t`\\n\\n${getOwnerStack(vnode)}`\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Check prop-types if available\n\t\tif (typeof vnode.type == 'function' && vnode.type.propTypes) {\n\t\t\tif (\n\t\t\t\tvnode.type.displayName === 'Lazy' &&\n\t\t\t\twarnedComponents &&\n\t\t\t\t!warnedComponents.lazyPropTypes.has(vnode.type)\n\t\t\t) {\n\t\t\t\tconst m =\n\t\t\t\t\t'PropTypes are not supported on lazy(). Use propTypes on the wrapped component itself. ';\n\t\t\t\ttry {\n\t\t\t\t\tconst lazyVNode = vnode.type();\n\t\t\t\t\twarnedComponents.lazyPropTypes.set(vnode.type, true);\n\t\t\t\t\tconsole.warn(\n\t\t\t\t\t\tm + `Component wrapped in lazy() is ${getDisplayName(lazyVNode)}`\n\t\t\t\t\t);\n\t\t\t\t} catch (promise) {\n\t\t\t\t\tconsole.warn(\n\t\t\t\t\t\tm + \"We will log the wrapped component's name once it is loaded.\"\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet values = vnode.props;\n\t\t\tif (vnode.type._forwarded) {\n\t\t\t\tvalues = assign({}, values);\n\t\t\t\tdelete values.ref;\n\t\t\t}\n\n\t\t\tcheckPropTypes(\n\t\t\t\tvnode.type.propTypes,\n\t\t\t\tvalues,\n\t\t\t\t'prop',\n\t\t\t\tgetDisplayName(vnode),\n\t\t\t\t() => getOwnerStack(vnode)\n\t\t\t);\n\t\t}\n\n\t\tif (oldBeforeDiff) oldBeforeDiff(vnode);\n\t};\n\n\tlet renderCount = 0;\n\tlet currentComponent;\n\toptions._render = vnode => {\n\t\tif (oldRender) {\n\t\t\toldRender(vnode);\n\t\t}\n\t\thooksAllowed = true;\n\n\t\tconst nextComponent = vnode._component;\n\t\tif (nextComponent === currentComponent) {\n\t\t\trenderCount++;\n\t\t} else {\n\t\t\trenderCount = 1;\n\t\t}\n\n\t\tif (renderCount >= 25) {\n\t\t\tthrow new Error(\n\t\t\t\t`Too many re-renders. This is limited to prevent an infinite loop ` +\n\t\t\t\t\t`which may lock up your browser. The component causing this is: ${getDisplayName(\n\t\t\t\t\t\tvnode\n\t\t\t\t\t)}`\n\t\t\t);\n\t\t}\n\n\t\tcurrentComponent = nextComponent;\n\t};\n\n\toptions._hook = (comp, index, type) => {\n\t\tif (!comp || !hooksAllowed) {\n\t\t\tthrow new Error('Hook can only be invoked from render methods.');\n\t\t}\n\n\t\tif (oldHook) oldHook(comp, index, type);\n\t};\n\n\t// Ideally we'd want to print a warning once per component, but we\n\t// don't have access to the vnode that triggered it here. As a\n\t// compromise and to avoid flooding the console with warnings we\n\t// print each deprecation warning only once.\n\tconst warn = (property, message) => ({\n\t\tget() {\n\t\t\tconst key = 'get' + property + message;\n\t\t\tif (deprecations && deprecations.indexOf(key) < 0) {\n\t\t\t\tdeprecations.push(key);\n\t\t\t\tconsole.warn(`getting vnode.${property} is deprecated, ${message}`);\n\t\t\t}\n\t\t},\n\t\tset() {\n\t\t\tconst key = 'set' + property + message;\n\t\t\tif (deprecations && deprecations.indexOf(key) < 0) {\n\t\t\t\tdeprecations.push(key);\n\t\t\t\tconsole.warn(`setting vnode.${property} is not allowed, ${message}`);\n\t\t\t}\n\t\t}\n\t});\n\n\tconst deprecatedAttributes = {\n\t\tnodeName: warn('nodeName', 'use vnode.type'),\n\t\tattributes: warn('attributes', 'use vnode.props'),\n\t\tchildren: warn('children', 'use vnode.props.children')\n\t};\n\n\tconst deprecatedProto = Object.create({}, deprecatedAttributes);\n\n\toptions.vnode = vnode => {\n\t\tconst props = vnode.props;\n\t\tif (\n\t\t\tvnode.type !== null &&\n\t\t\tprops != null &&\n\t\t\t('__source' in props || '__self' in props)\n\t\t) {\n\t\t\tconst newProps = (vnode.props = {});\n\t\t\tfor (let i in props) {\n\t\t\t\tconst v = props[i];\n\t\t\t\tif (i === '__source') vnode.__source = v;\n\t\t\t\telse if (i === '__self') vnode.__self = v;\n\t\t\t\telse newProps[i] = v;\n\t\t\t}\n\t\t}\n\n\t\t// eslint-disable-next-line\n\t\tvnode.__proto__ = deprecatedProto;\n\t\tif (oldVnode) oldVnode(vnode);\n\t};\n\n\toptions.diffed = vnode => {\n\t\tconst { type, _parent: parent } = vnode;\n\t\t// Check if the user passed plain objects as children. Note that we cannot\n\t\t// move this check into `options.vnode` because components can receive\n\t\t// children in any shape they want (e.g.\n\t\t// `<MyJSONFormatter>{{ foo: 123, bar: \"abc\" }}</MyJSONFormatter>`).\n\t\t// Putting this check in `options.diffed` ensures that\n\t\t// `vnode._children` is set and that we only validate the children\n\t\t// that were actually rendered.\n\t\tif (vnode._children) {\n\t\t\tvnode._children.forEach(child => {\n\t\t\t\tif (typeof child === 'object' && child && child.type === undefined) {\n\t\t\t\t\tconst keys = Object.keys(child).join(',');\n\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t`Objects are not valid as a child. Encountered an object with the keys {${keys}}.` +\n\t\t\t\t\t\t\t`\\n\\n${getOwnerStack(vnode)}`\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tif (vnode._component === currentComponent) {\n\t\t\trenderCount = 0;\n\t\t}\n\n\t\tif (\n\t\t\ttypeof type === 'string' &&\n\t\t\t(isTableElement(type) ||\n\t\t\t\ttype === 'p' ||\n\t\t\t\ttype === 'a' ||\n\t\t\t\ttype === 'button')\n\t\t) {\n\t\t\t// Avoid false positives when Preact only partially rendered the\n\t\t\t// HTML tree. Whilst we attempt to include the outer DOM in our\n\t\t\t// validation, this wouldn't work on the server for\n\t\t\t// `preact-render-to-string`. There we'd otherwise flood the terminal\n\t\t\t// with false positives, which we'd like to avoid.\n\t\t\tlet domParentName = getClosestDomNodeParentName(parent);\n\t\t\tif (domParentName !== '' && isTableElement(type)) {\n\t\t\t\tif (\n\t\t\t\t\ttype === 'table' &&\n\t\t\t\t\t// Tables can be nested inside each other if it's inside a cell.\n\t\t\t\t\t// See https://developer.mozilla.org/en-US/docs/Learn/HTML/Tables/Advanced#nesting_tables\n\t\t\t\t\tdomParentName !== 'td' &&\n\t\t\t\t\tisTableElement(domParentName)\n\t\t\t\t) {\n\t\t\t\t\tconsole.log(domParentName, parent._dom);\n\t\t\t\t\tconsole.error(\n\t\t\t\t\t\t'Improper nesting of table. Your <table> should not have a table-node parent.' +\n\t\t\t\t\t\t\tserializeVNode(vnode) +\n\t\t\t\t\t\t\t`\\n\\n${getOwnerStack(vnode)}`\n\t\t\t\t\t);\n\t\t\t\t} else if (\n\t\t\t\t\t(type === 'thead' || type === 'tfoot' || type === 'tbody') &&\n\t\t\t\t\tdomParentName !== 'table'\n\t\t\t\t) {\n\t\t\t\t\tconsole.error(\n\t\t\t\t\t\t'Improper nesting of table. Your <thead/tbody/tfoot> should have a <table> parent.' +\n\t\t\t\t\t\t\tserializeVNode(vnode) +\n\t\t\t\t\t\t\t`\\n\\n${getOwnerStack(vnode)}`\n\t\t\t\t\t);\n\t\t\t\t} else if (\n\t\t\t\t\ttype === 'tr' &&\n\t\t\t\t\tdomParentName !== 'thead' &&\n\t\t\t\t\tdomParentName !== 'tfoot' &&\n\t\t\t\t\tdomParentName !== 'tbody'\n\t\t\t\t) {\n\t\t\t\t\tconsole.error(\n\t\t\t\t\t\t'Improper nesting of table. Your <tr> should have a <thead/tbody/tfoot> parent.' +\n\t\t\t\t\t\t\tserializeVNode(vnode) +\n\t\t\t\t\t\t\t`\\n\\n${getOwnerStack(vnode)}`\n\t\t\t\t\t);\n\t\t\t\t} else if (type === 'td' && domParentName !== 'tr') {\n\t\t\t\t\tconsole.error(\n\t\t\t\t\t\t'Improper nesting of table. Your <td> should have a <tr> parent.' +\n\t\t\t\t\t\t\tserializeVNode(vnode) +\n\t\t\t\t\t\t\t`\\n\\n${getOwnerStack(vnode)}`\n\t\t\t\t\t);\n\t\t\t\t} else if (type === 'th' && domParentName !== 'tr') {\n\t\t\t\t\tconsole.error(\n\t\t\t\t\t\t'Improper nesting of table. Your <th> should have a <tr>.' +\n\t\t\t\t\t\t\tserializeVNode(vnode) +\n\t\t\t\t\t\t\t`\\n\\n${getOwnerStack(vnode)}`\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t} else if (type === 'p') {\n\t\t\t\tlet illegalDomChildrenTypes = getDomChildren(vnode).filter(childType =>\n\t\t\t\t\tILLEGAL_PARAGRAPH_CHILD_ELEMENTS.test(childType)\n\t\t\t\t);\n\t\t\t\tif (illegalDomChildrenTypes.length) {\n\t\t\t\t\tconsole.error(\n\t\t\t\t\t\t'Improper nesting of paragraph. Your <p> should not have ' +\n\t\t\t\t\t\t\tillegalDomChildrenTypes.join(', ') +\n\t\t\t\t\t\t\t'as child-elements.' +\n\t\t\t\t\t\t\tserializeVNode(vnode) +\n\t\t\t\t\t\t\t`\\n\\n${getOwnerStack(vnode)}`\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t} else if (type === 'a' || type === 'button') {\n\t\t\t\tif (getDomChildren(vnode).indexOf(type) !== -1) {\n\t\t\t\t\tconsole.error(\n\t\t\t\t\t\t`Improper nesting of interactive content. Your <${type}>` +\n\t\t\t\t\t\t\t` should not have other ${type === 'a' ? 'anchor' : 'button'}` +\n\t\t\t\t\t\t\t' tags as child-elements.' +\n\t\t\t\t\t\t\tserializeVNode(vnode) +\n\t\t\t\t\t\t\t`\\n\\n${getOwnerStack(vnode)}`\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\thooksAllowed = false;\n\n\t\tif (oldDiffed) oldDiffed(vnode);\n\n\t\tif (vnode._children != null) {\n\t\t\tconst keys = [];\n\t\t\tfor (let i = 0; i < vnode._children.length; i++) {\n\t\t\t\tconst child = vnode._children[i];\n\t\t\t\tif (!child || child.key == null) continue;\n\n\t\t\t\tconst key = child.key;\n\t\t\t\tif (keys.indexOf(key) !== -1) {\n\t\t\t\t\tconsole.error(\n\t\t\t\t\t\t'Following component has two or more children with the ' +\n\t\t\t\t\t\t\t`same key attribute: \"${key}\". This may cause glitches and misbehavior ` +\n\t\t\t\t\t\t\t'in rendering process. Component: \\n\\n' +\n\t\t\t\t\t\t\tserializeVNode(vnode) +\n\t\t\t\t\t\t\t`\\n\\n${getOwnerStack(vnode)}`\n\t\t\t\t\t);\n\n\t\t\t\t\t// Break early to not spam the console\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tkeys.push(key);\n\t\t\t}\n\t\t}\n\n\t\tif (vnode._component != null && vnode._component.__hooks != null) {\n\t\t\t// Validate that none of the hooks in this component contain arguments that are NaN.\n\t\t\t// This is a common mistake that can be hard to debug, so we want to catch it early.\n\t\t\tconst hooks = vnode._component.__hooks._list;\n\t\t\tif (hooks) {\n\t\t\t\tfor (let i = 0; i < hooks.length; i += 1) {\n\t\t\t\t\tconst hook = hooks[i];\n\t\t\t\t\tif (hook._args) {\n\t\t\t\t\t\tfor (let j = 0; j < hook._args.length; j++) {\n\t\t\t\t\t\t\tconst arg = hook._args[j];\n\t\t\t\t\t\t\tif (isNaN(arg)) {\n\t\t\t\t\t\t\t\tconst componentName = getDisplayName(vnode);\n\t\t\t\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t\t\t`Invalid argument passed to hook. Hooks should not be called with NaN in the dependency array. Hook index ${i} in component ${componentName} was called with NaN.`\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n}\n\nconst setState = Component.prototype.setState;\nComponent.prototype.setState = function (update, callback) {\n\tif (this._vnode == null) {\n\t\t// `this._vnode` will be `null` during componentWillMount. But it\n\t\t// is perfectly valid to call `setState` during cWM. So we\n\t\t// need an additional check to verify that we are dealing with a\n\t\t// call inside constructor.\n\t\tif (this.state == null) {\n\t\t\tconsole.warn(\n\t\t\t\t`Calling \"this.setState\" inside the constructor of a component is a ` +\n\t\t\t\t\t`no-op and might be a bug in your application. Instead, set ` +\n\t\t\t\t\t`\"this.state = {}\" directly.\\n\\n${getOwnerStack(getCurrentVNode())}`\n\t\t\t);\n\t\t}\n\t}\n\n\treturn setState.call(this, update, callback);\n};\n\nfunction isTableElement(type) {\n\treturn (\n\t\ttype === 'table' ||\n\t\ttype === 'tfoot' ||\n\t\ttype === 'tbody' ||\n\t\ttype === 'thead' ||\n\t\ttype === 'td' ||\n\t\ttype === 'tr' ||\n\t\ttype === 'th'\n\t);\n}\n\nconst ILLEGAL_PARAGRAPH_CHILD_ELEMENTS =\n\t/^(address|article|aside|blockquote|details|div|dl|fieldset|figcaption|figure|footer|form|h1|h2|h3|h4|h5|h6|header|hgroup|hr|main|menu|nav|ol|p|pre|search|section|table|ul)$/;\n\nconst forceUpdate = Component.prototype.forceUpdate;\nComponent.prototype.forceUpdate = function (callback) {\n\tif (this._vnode == null) {\n\t\tconsole.warn(\n\t\t\t`Calling \"this.forceUpdate\" inside the constructor of a component is a ` +\n\t\t\t\t`no-op and might be a bug in your application.\\n\\n${getOwnerStack(\n\t\t\t\t\tgetCurrentVNode()\n\t\t\t\t)}`\n\t\t);\n\t} else if (this._parentDom == null) {\n\t\tconsole.warn(\n\t\t\t`Can't call \"this.forceUpdate\" on an unmounted component. This is a no-op, ` +\n\t\t\t\t`but it indicates a memory leak in your application. To fix, cancel all ` +\n\t\t\t\t`subscriptions and asynchronous tasks in the componentWillUnmount method.` +\n\t\t\t\t`\\n\\n${getOwnerStack(this._vnode)}`\n\t\t);\n\t}\n\treturn forceUpdate.call(this, callback);\n};\n\n/**\n * Serialize a vnode tree to a string\n * @param {import('./internal').VNode} vnode\n * @returns {string}\n */\nexport function serializeVNode(vnode) {\n\tlet { props } = vnode;\n\tlet name = getDisplayName(vnode);\n\n\tlet attrs = '';\n\tfor (let prop in props) {\n\t\tif (props.hasOwnProperty(prop) && prop !== 'children') {\n\t\t\tlet value = props[prop];\n\n\t\t\t// If it is an object but doesn't have toString(), use Object.toString\n\t\t\tif (typeof value == 'function') {\n\t\t\t\tvalue = `function ${value.displayName || value.name}() {}`;\n\t\t\t}\n\n\t\t\tvalue =\n\t\t\t\tObject(value) === value && !value.toString\n\t\t\t\t\t? Object.prototype.toString.call(value)\n\t\t\t\t\t: value + '';\n\n\t\t\tattrs += ` ${prop}=${JSON.stringify(value)}`;\n\t\t}\n\t}\n\n\tlet children = props.children;\n\treturn `<${name}${attrs}${\n\t\tchildren && children.length ? '>..</' + name + '>' : ' />'\n\t}`;\n}\n", "export const ELEMENT_NODE = 1;\nexport const DOCUMENT_NODE = 9;\nexport const DOCUMENT_FRAGMENT_NODE = 11;\n", "/**\n * Assign properties from `props` to `obj`\n * @template O, P The obj and props types\n * @param {O} obj The object to copy properties to\n * @param {P} props The object to copy properties from\n * @returns {O & P}\n */\nexport function assign(obj, props) {\n\tfor (let i in props) obj[i] = props[i];\n\treturn /** @type {O & P} */ (obj);\n}\n\nexport function isNaN(value) {\n\treturn value !== value;\n}\n", "import { initDebug } from './debug';\nimport 'preact/devtools';\n\ninitDebug();\n\nexport { resetPropWarnings } from './check-props';\n", "/**\n * @file utilities to type check DOM \"id\" and \"class\" attributes.\n */\n\n// Elements for which we have 0 or 1 instance.\nexport const ID_KEYS = [\n  \"todo\",\n\n  \"mainNav\", // Main navigation bar, toggled by the hamburger icon.\n  \"vertexGrid\", // Main grid for vertices.\n] as const;\n\n// Elements for which we may have multiple instances.\nexport const CL_KEYS = [\n  \"todo\",\n\n  \"facetsMain\", // A Div wrapper for FacetsMain component.\n  \"iconButton\", // A Div wrapper for IconButton component.\n  \"vertexThumbn\", // Thumbnail for a vertex.\n  \"vertexInfo\", // Information about a vertex.\n] as const;\n\nexport const DATA_KEYS = [\n  \"vertex-key\", // The key of a vertex.\n  \"vertex-ranking\", // The ranking of a vertex.\n] as const;\n\nexport type IDKey = (typeof ID_KEYS)[number];\nexport type CLKey = (typeof CL_KEYS)[number];\nexport type DataKey = (typeof DATA_KEYS)[number];\n\nexport function cssID(key: IDKey): `id-${IDKey}` {\n  return `id-${key}`;\n}\n\nexport function cssClass(key: CLKey): `cl-${CLKey}` {\n  return `cl-${key}`;\n}\n\nexport function dataKey(key: DataKey): `data-${DataKey}` {\n  return `data-${key}`;\n}\n", "import { type CLKey, type DataKey, type IDKey, cssClass, cssID, dataKey } from \"@plangs/server/elements\";\n\n/**\n * Bun will attempt to load this code from the server even if it is not imported explicitly.\n * We need to define a valid document (even if it is undefined) to avoid errors.\n */\nconst doc = (typeof document === \"undefined\" ? undefined : document) as Document;\n\nexport const $ = doc?.querySelector.bind(doc);\nexport const $$ = doc?.querySelectorAll.bind(doc);\n\nexport const elem = <T extends HTMLElement>(key: IDKey) => $<T>(`#${cssID(key)}`) ?? undefined;\nexport const elems = <T extends HTMLElement>(key: CLKey) => $$<T>(`.${cssClass(key)}`);\nexport const data = (el: HTMLElement | null, key: DataKey) => el?.getAttribute(dataKey(key)) ?? undefined;\n\n/** Return computed width and height of the element. */\nexport function size(el: HTMLElement): { width: number; height: number } {\n  try {\n    const style = getComputedStyle(el);\n    return { width: Number.parseInt(style.width), height: Number.parseInt(style.height) };\n  } catch (err) {\n    console.error(\"Error getting size\", el, err);\n  }\n  return { width: 0, height: 0 };\n}\n\n/** Call the same action on Enter or Click. */\nexport function onClickOnEnter(action: (ev: UIEvent) => void) {\n  return {\n    onClick: (ev: MouseEvent) => {\n      ev.stopPropagation();\n      action(ev);\n    },\n    onKeyDown: (ev: KeyboardEvent) => {\n      ev.stopPropagation();\n      if (ev.key === \"Enter\") {\n        ev.preventDefault();\n        action(ev);\n      }\n    },\n  };\n}\n\n/** Check if the min-width breakpoint applies right now.  */\nexport const minWidthBP = (size: string) => window.matchMedia(`(min-width: ${size})`).matches ?? false;\n", "export type Nil = null | undefined;\n\n/** Adds an event listener to the target, and returns a function to undo the listener. */\nexport function on<T>(target: EventTarget | Nil, type: string, listener: (ev: T) => void, opt?: AddEventListenerOptions): undefined | (() => void) {\n  if (!target) console.warn(\"missing target\", { type, listener, opt });\n  target?.addEventListener(type, listener as EventListener, opt);\n  if (target) return () => off(target, type, listener, opt);\n}\n\nexport function off<T>(target: EventTarget | Nil, type: string, listener: (ev: T) => void, opt?: AddEventListenerOptions): void {\n  if (!target) console.warn(\"missing target\", { type, listener, opt });\n  target?.removeEventListener(type, listener as EventListener, opt);\n}\n\nexport function send<T extends Event>(target: EventTarget | Nil, ev: T): boolean | undefined {\n  if (!target) console.warn(\"missing target\", ev);\n  return target?.dispatchEvent(ev);\n}\n\nexport function customEvent<T>(type: string, detail: T, options: CustomEventInit<T> = { bubbles: true, composed: true, cancelable: undefined }) {\n  return new CustomEvent(type, { detail, ...options });\n}\n\n/** Util to type cast and check an event handler. */\nexport function handler<T extends HTMLElement, Ev extends UIEvent = UIEvent>(action: (target: T, ev: Ev) => void) {\n  return (ev: Ev) => {\n    if (ev.target && \"tagName\" in ev.target) action(ev.target as T, ev);\n  };\n}\n", "export const NULL = '!n';\nexport const TRUE = '!t';\nexport const FALSE = '!f';\nexport const OBJECT_START = '(';\nexport const ARRAY_START = '!(';\nexport const OBJECT_ARRAY_END = ')';\nexport const COLON = ':';\nexport const COMMA = ',';\nexport const STRING = 'string';\nexport const NUMBER = 'number';\n\nexport type TokenKind =\n  | typeof NULL\n  | typeof TRUE\n  | typeof FALSE\n  | typeof OBJECT_START\n  | typeof ARRAY_START\n  | typeof OBJECT_ARRAY_END\n  | typeof COLON\n  | typeof COMMA\n  | typeof STRING\n  | typeof NUMBER;\n\nexport interface Token<T extends TokenKind = TokenKind> {\n  kind: T;\n  value: string;\n}\n", "import {\n  ARRAY_START,\n  COLON,\n  COMMA,\n  FALSE,\n  NULL,\n  NUMBER,\n  OBJECT_ARRAY_END,\n  OBJECT_START,\n  STRING,\n  Token,\n  TokenKind,\n  TRUE,\n} from './token';\n\ntype Rule<T extends TokenKind> = (\n  source: string,\n  pos: number,\n) => Token<T> | null;\n\nconst rules = {\n  quote: (): Rule<typeof STRING> => (source, pos) => {\n    if (!source.startsWith(\"'\", pos)) return null;\n\n    let i = pos;\n    while (true) {\n      if (source.length <= ++i) {\n        throw new SyntaxError(`Unexpected end of Rison input`);\n      }\n      switch (source[i]) {\n        case '!':\n          i++;\n          continue;\n        case \"'\":\n          return { kind: STRING, value: source.slice(pos, i + 1) };\n      }\n    }\n  },\n  string:\n    <T extends TokenKind>(kind: T): Rule<T> =>\n    (source, pos) =>\n      source.startsWith(kind, pos) ? { kind, value: kind } : null,\n  regexp:\n    <T extends TokenKind>(kind: T, reg: RegExp): Rule<T> =>\n    (source, pos) => {\n      const match = reg.exec(source.slice(pos));\n      return match ? { kind, value: match[0] } : null;\n    },\n};\n\nconst RULES: Rule<TokenKind>[] = [\n  rules.quote(),\n  rules.string(OBJECT_START),\n  rules.string(ARRAY_START),\n  rules.string(OBJECT_ARRAY_END),\n  rules.string(NULL),\n  rules.string(TRUE),\n  rules.string(FALSE),\n  rules.string(COLON),\n  rules.string(COMMA),\n  rules.regexp(STRING, /^[^0-9- '!:(),*@$][^ '!:(),*@$]*/),\n  rules.regexp(NUMBER, /^-?([1-9][0-9]*|[0-9])(\\.[0-9]+)?(e-?[0-9]+)?/),\n];\n\nexport class Lexer {\n  private pos = 0;\n\n  public constructor(private source: string) {}\n\n  public position(): number {\n    return this.pos;\n  }\n\n  public length(): number {\n    return this.source.length;\n  }\n\n  public nextToken(): Token<TokenKind> | null {\n    if (this.pos >= this.source.length) return null;\n\n    for (const rule of RULES) {\n      const token = rule(this.source, this.pos);\n      if (token !== null) {\n        this.pos += token.value.length;\n        return token;\n      }\n    }\n\n    throw new SyntaxError(\n      `Unexpected token ${this.source[this.pos]} in Rison at position ${\n        this.pos\n      }`,\n    );\n  }\n\n  public syntaxError(token: Token): SyntaxError {\n    const pos = this.pos - token.value.length;\n    return new SyntaxError(\n      `Unexpected token ${this.source[pos]} in Rison at position ${pos}`,\n    );\n  }\n}\n", "import { Lexer } from './lexer';\nimport {\n  ARRAY_START,\n  COLON,\n  COMMA,\n  FALSE,\n  NULL,\n  NUMBER,\n  OBJECT_ARRAY_END,\n  OBJECT_START,\n  STRING,\n  Token,\n  TokenKind,\n  TRUE,\n} from './token';\n\nexport class Parser {\n  public constructor(private readonly lexer: Lexer) {}\n\n  public readAsAny(): any {\n    const val = this.asAny(this.nextToken());\n    if (this.lexer.position() < this.lexer.length()) {\n      throw this.lexer.syntaxError(this.nextToken());\n    }\n    return val;\n  }\n\n  private asAny(token: Token): any {\n    switch (token.kind) {\n      case NULL:\n        return null;\n      case TRUE:\n        return true;\n      case FALSE:\n        return false;\n      case STRING:\n        return this.asString(token);\n      case NUMBER:\n        return Number(token.value);\n      case OBJECT_START:\n        return this.readAsObject();\n      case ARRAY_START:\n        return this.readAsArray();\n      default:\n        throw this.lexer.syntaxError(token);\n    }\n  }\n\n  private asString(token: Token): string {\n    return token.value[0] === \"'\"\n      ? token.value.replace(/!./g, (c) => c[1]).slice(1, -1)\n      : token.value;\n  }\n\n  private readAsObject(): Record<string, any> {\n    const obj: Record<string, any> = {};\n    let token = this.nextToken();\n    while (token.kind !== OBJECT_ARRAY_END) {\n      const key = this.asString(token);\n      this.expectToken(COLON);\n      const val = this.asAny(this.nextToken());\n      obj[key] = val;\n\n      token = this.nextToken();\n      if (token.kind === OBJECT_ARRAY_END) break;\n      if (token.kind !== COMMA) throw this.lexer.syntaxError(token);\n      token = this.nextToken();\n    }\n    return obj;\n  }\n\n  private readAsArray(): any[] {\n    const arr: any[] = [];\n    let token = this.nextToken();\n    while (token.kind !== OBJECT_ARRAY_END) {\n      arr.push(this.asAny(token));\n      token = this.nextToken();\n      if (token.kind === OBJECT_ARRAY_END) break;\n      if (token.kind !== COMMA) throw this.lexer.syntaxError(token);\n      token = this.nextToken();\n    }\n    return arr;\n  }\n\n  private expectToken<T extends TokenKind>(kind: T) {\n    const token = this.nextToken();\n    if (token.kind !== kind) throw this.lexer.syntaxError(token);\n  }\n\n  private nextToken(): Token {\n    const token = this.lexer.nextToken();\n    if (!token) throw new SyntaxError(`Unexpected end of Rison input`);\n    return token;\n  }\n}\n", "import {\n  ARRAY_START,\n  COLON,\n  COMMA,\n  FALSE,\n  NULL,\n  OBJECT_ARRAY_END,\n  OBJECT_START,\n  TRUE,\n} from './token';\n\nconst ID_REGEXP = /^[^0-9- '!:(),*@$][^ '!:(),*@$]*$/;\n\nexport class Stringifier {\n  public value(value: any): string | undefined {\n    if (value === undefined) return undefined;\n    if (value === null) return NULL;\n    switch (typeof value) {\n      case 'object':\n        return Array.isArray(value)\n          ? `${ARRAY_START}${this.array(value)}${OBJECT_ARRAY_END}`\n          : `${OBJECT_START}${this.object(value)}${OBJECT_ARRAY_END}`;\n      case 'boolean':\n        return this.boolean(value);\n      case 'number':\n        return this.number(value);\n      case 'string':\n        return this.string(value);\n      case 'bigint':\n        throw new TypeError('Do not known how to serialize a BigInt');\n      default:\n        return undefined;\n    }\n  }\n\n  public object(value: Record<string, any>): string {\n    return Object.entries(value).reduce<string>((prev, [key, value]) => {\n      const str = this.value(value);\n      if (str === undefined) return prev;\n\n      const pair = `${this.string(key)}${COLON}${str}`;\n      return prev.length > 0 ? `${prev}${COMMA}${pair}` : pair;\n    }, '');\n  }\n\n  public array(value: any[]): string {\n    return value.reduce((prev, value) => {\n      const str = this.value(value) || NULL;\n      return prev.length > 0 ? `${prev}${COMMA}${str}` : str;\n    }, '');\n  }\n\n  public boolean(value: boolean): string {\n    return value ? TRUE : FALSE;\n  }\n\n  public number(value: number): string {\n    return Number.isFinite(value) ? value.toString().replace('+', '') : NULL;\n  }\n\n  public string(value: string): string {\n    return ID_REGEXP.test(value)\n      ? value\n      : `'${value.replace(/[!']/g, (c) => `!${c}`)}'`;\n  }\n}\n", "import { Lexer } from './lexer';\nimport { Parser } from './parser';\nimport { Stringifier } from './stringifier';\n\nexport const RISON = {\n  parse: (text: string): any => {\n    const lexer = new Lexer(text);\n    const parser = new Parser(lexer);\n    return parser.readAsAny();\n  },\n  stringify: (value: any): string => {\n    const stringifier = new Stringifier();\n    return stringifier.value(value) as string;\n  },\n};\n\nexport const ORISON = {\n  parse: (text: string): any => {\n    const lexer = new Lexer(`(${text})`);\n    const parser = new Parser(lexer);\n    return parser.readAsAny();\n  },\n  stringify: (value: Record<string, any>): string => {\n    const stringifier = new Stringifier();\n    return stringifier.object(value);\n  },\n};\n\nexport const ARISON = {\n  parse: (text: string): any => {\n    const lexer = new Lexer(`!(${text})`);\n    const parser = new Parser(lexer);\n    return parser.readAsAny();\n  },\n  stringify: (value: any[]): string => {\n    const stringifier = new Stringifier();\n    return stringifier.array(value);\n  },\n};\n", "import * as rison from './rison';\n\nconst ESCAPE_NO_REQUIRED = /^[-A-Za-z0-9~!*()_.',:@$/]*$/;\n\n/**\n * this is like encodeURIComponent() but quotes fewer characters.\n *\n * See https://github.com/Nanonid/rison/blob/e64af6c096fd30950ec32cfd48526ca6ee21649d/js/rison.js#L107-L118\n *\n * This function is licensed under the MIT license found in the\n * https://github.com/Nanonid/rison/blob/e64af6c096fd30950ec32cfd48526ca6ee21649d/LICENSE.md.\n *\n * @param str\n */\nconst escape = (str: string): string => {\n  if (ESCAPE_NO_REQUIRED.test(str)) return str;\n\n  return encodeURIComponent(str)\n    .replace(/%2C/g, ',')\n    .replace(/%3A/g, ':')\n    .replace(/%40/g, '@')\n    .replace(/%24/g, '$')\n    .replace(/%2F/g, '/')\n    .replace(/%20/g, '+');\n};\n\nconst unescape = (str: string): string =>\n  decodeURIComponent(str.replace(/\\+/g, '%20'));\n\nconst RISON = {\n  parse: (text: string): any => rison.RISON.parse(unescape(text)),\n  stringify: (value: any): string => escape(rison.RISON.stringify(value)),\n};\n\nconst ORISON = {\n  parse: (text: string): any => rison.ORISON.parse(unescape(text)),\n  stringify: (value: Record<string, any>): string =>\n    escape(rison.ORISON.stringify(value)),\n};\n\nconst ARISON = {\n  parse: (text: string): any => rison.ARISON.parse(unescape(text)),\n  stringify: (value: any[]): string => escape(rison.ARISON.stringify(value)),\n};\n\nconst parse = RISON.parse;\nconst stringify = RISON.stringify;\n\nexport { RISON, ORISON, ARISON, parse, stringify, escape, unescape };\n", "import * as escaped from './escaped';\nimport { ARISON, ORISON, RISON } from './rison';\n\nconst parse = RISON.parse;\nconst stringify = RISON.stringify;\nconst escape = escaped.escape;\nconst unescape = escaped.unescape;\n\nexport { RISON, ORISON, ARISON, parse, stringify, escape, unescape, escaped };\n", "/**\n * Ret (short for \"returning\") is a combinator that takes an item and a function,\n * and applies the function to the item.\n *\n * Useful to avoid assigning a value to a variable, also creates a new scope around the item,\n * so the value can be reused multiple times (good if the value is expensive to compute).\n *\n * From:\n * ```\n * const thing = expensiveComputation();\n * doSomething(thing);\n * doSomethingElse(thing);\n * ```\n *\n * To:\n * ```\n * ret(expensiveComputation(), thing => {\n *  doSomething(thing);\n *  doSomethingElse(thing);\n * });\n * ```\n *\n * This is great for instance in TSX where you can't define a variable in the middle of a TSX block.\n *\n * There's a similar combinator (tap), whose purpose is to make a value available for a block of code in the middle of a chain.\n *\n * Aka aka \"K combinator\" aka \"Kestrel\" .\n * https://leanpub.com/combinators/read#leanpub-auto-kestrels\n */\nexport const ret = <T, R>(item: T, action: (item: T) => R): R => action(item);\n\nexport const tap = <T>(item: T, action: (item: T) => void): T => {\n  action(item);\n  return item;\n};\n\n// https://stackoverflow.com/a/32108184\n// biome-ignore lint/suspicious/noExplicitAny: checks if _any_ object is empty.\nexport function isEmpty(obj: any) {\n  for (const prop in obj) {\n    if (Object.hasOwn(obj, prop)) return false;\n  }\n  return true;\n}\n", "import { RISON } from \"rison2\";\n\nimport { isEmpty } from \"@plangs/auxiliar/misc\";\n\nimport { on } from \"./events\";\n\n// Bun loads this code so we need to define a valid window (even if it is not defined).\nconst win = (typeof window === \"undefined\" ? undefined : window) as Window;\n\n/**\n * Returns the fragment (possible empty): the string after the first '#' of a URL or HREF.\n * Returns the input string if it has no '#' character.\n */\nexport function getFragment(fragmentOrURL: URL | Location | string | undefined): string {\n  if (!fragmentOrURL) return \"\";\n  if (fragmentOrURL instanceof URL || fragmentOrURL instanceof Location) return fragmentOrURL.hash.slice(1);\n  const hashIndex = fragmentOrURL.indexOf(\"#\");\n  return hashIndex !== -1 ? fragmentOrURL.slice(hashIndex + 1) : fragmentOrURL;\n}\n\n/**\n * All fragment updates should go to a single instance of this class to ensure we can distinguish\n * between user initiated and app initiated URL Fragment changes:\n *\n * * Use instance.pushState to change the fragment and only trigger a \"user change\" event.\n * * Use instance.update to change the fragment and trigger both a \"user change\" and a \"change\" event.\n */\nexport class FragmentTracker extends EventTarget {\n  #fragment: string = win.location.hash.slice(1);\n  #previous?: string;\n\n  /** Keep a reference so we can remove it if needed (with {@link destroy}). */\n  #boundedHandler?: (ev: HashChangeEvent) => void;\n\n  // biome-ignore lint/suspicious/noExplicitAny: Return of RISON.parse is any.\n  static deserialize(fragment = win.location.hash): any {\n    try {\n      const data = fragment.slice(fragment.indexOf(\"#\") + 1).trim();\n      if (data.length > 2 && data.startsWith(\"(\") && data.endsWith(\")\")) return RISON.parse(data);\n    } catch (e) {\n      console.warn(\"Failed to parse RISON:\", fragment, e);\n    }\n  }\n\n  // biome-ignore lint/suspicious/noExplicitAny: RISON.stringify can serialize any data.\n  static serialize(data: any): string | undefined {\n    try {\n      if (isEmpty(data)) return undefined;\n      return RISON.stringify(data);\n    } catch (e) {\n      console.error(\"Failed to serialize data\", e);\n    }\n  }\n\n  /** Call this to bind the tracker to the hashchange event of the window. */\n  bind(): this {\n    this.destroy();\n    this.#boundedHandler = this.#hashChangeHandler.bind(this);\n    win.addEventListener(\"hashchange\", this.#boundedHandler);\n    return this;\n  }\n\n  /** Remove the hashchange event listener off the window. */\n  destroy() {\n    if (this.#boundedHandler) {\n      win.removeEventListener(\"hashchange\", this.#boundedHandler);\n      this.#boundedHandler = undefined;\n    }\n  }\n\n  get fragment(): string {\n    return this.#fragment;\n  }\n\n  get previous(): string | undefined {\n    return this.#previous;\n  }\n\n  /**\n   * Handler for 'hashchange': this must come from user action (or 3rd party code :-/) since\n   * updates through this class use history.pushState, which doesn't trigger hashchange.\n   */\n  #hashChangeHandler({ newURL, oldURL }: HashChangeEvent) {\n    const newFragment = getFragment(newURL);\n    if (newFragment !== this.#fragment) {\n      this.#previous = getFragment(oldURL);\n      this.#fragment = newFragment;\n      this.dispatchEvent(this.#createEvent(FRAGMENT_USER_CHANGE));\n      this.dispatchEvent(this.#createEvent(FRAGMENT_CHANGE));\n    }\n  }\n\n  /**\n   * This method will use history.pushState, so it won't trigger a {@link FRAGMENT_USER_CHANGE}.\n   * https://developer.mozilla.org/en-US/docs/Web/API/History/pushState#description\n   */\n  pushState(fragmentOrURL: string | URL | undefined) {\n    const newFragment = getFragment(fragmentOrURL);\n    if (newFragment !== this.#fragment) {\n      this.#previous = this.#fragment;\n      this.#fragment = newFragment;\n      history.pushState(null, \"\", `#${newFragment}`);\n      this.dispatchEvent(this.#createEvent(FRAGMENT_CHANGE));\n    }\n  }\n\n  /**\n   * Updates fragment using window.location.hash,\n   * which will trigger both {@link FRAGMENT_USER_CHANGE} and {@link FRAGMENT_CHANGE}.\n   * Useful for programmatically simulating user navigation.\n   */\n  update(fragmentOrURL: string | URL): void {\n    win.location.hash = getFragment(fragmentOrURL);\n  }\n\n  onUserChange(callback: (ev: FragmentChangeEvent) => void): (() => void) | undefined {\n    return on(this, FRAGMENT_USER_CHANGE, callback);\n  }\n\n  #createEvent(type: FragmentEventType): FragmentChangeEvent {\n    return new FragmentChangeEvent(type, { fragment: this.#fragment, previous: this.#previous });\n  }\n}\n\nexport const FRAGMENT_CHANGE = \"fragmentchange\" as const;\nexport const FRAGMENT_USER_CHANGE = \"fragmentuserchange\" as const;\nexport type FragmentEventType = typeof FRAGMENT_CHANGE | typeof FRAGMENT_USER_CHANGE;\n\nexport interface FragmentChangeEventDetail {\n  fragment: string;\n  previous: string | undefined;\n}\n\nexport class FragmentChangeEvent extends CustomEvent<FragmentChangeEventDetail> {\n  constructor(\n    type: FragmentEventType,\n    detail: FragmentChangeEventDetail,\n    options: CustomEventInit<FragmentChangeEventDetail> = { bubbles: true, cancelable: undefined, composed: true },\n  ) {\n    super(type, { ...options, detail });\n  }\n\n  get fragment(): string {\n    return this.detail.fragment;\n  }\n\n  get previous(): string | undefined {\n    return this.detail.previous;\n  }\n\n  /** Attempt to deserialize RISON data. */\n  // biome-ignore lint/suspicious/noExplicitAny: RISON data can be anything.\n  get deserFrag(): any {\n    return FragmentTracker.deserialize(this.detail.fragment);\n  }\n\n  /** Attempt to deserialize RISON data. */\n  // biome-ignore lint/suspicious/noExplicitAny: RISON data can be anything.\n  get deserPrev(): any {\n    const { previous } = this.detail;\n    return previous ? FragmentTracker.deserialize(previous) : undefined;\n  }\n}\n", "let pingTimer: Timer | undefined;\n\nconst INITIAL_TIMEOUT_MS = 500; // If this is too short, in Firefox it stops opening external links :-).\nconst PING_FREQ_MS = 10;\nconst RELOAD_LATENCY_MS = 10;\n\n/**\n * Setup a liverelaod connection. Attempts to reconnect if necessary.\n */\nexport function connectLivereload(timeout = INITIAL_TIMEOUT_MS, lifecycle: \"start\" | \"error\" = \"start\") {\n  if (pingTimer) {\n    clearInterval(pingTimer);\n    pingTimer = undefined;\n  }\n\n  const reconnect = () => {\n    console.info(\"attempting livereload reconnect in\", timeout, \"ms\");\n    setTimeout(() => connectLivereload(timeout * 1.5, \"error\"), timeout);\n  };\n\n  const reload = () => {\n    setTimeout(() => window.location.reload(), RELOAD_LATENCY_MS);\n  };\n\n  const socket = new WebSocket(\"/livereload\");\n  socket.addEventListener(\"open\", () => {\n    // If we needed to reconnect, reload so we can see any server side changes.\n    if (lifecycle === \"error\") return reload();\n    socket.send(\"CONNECT\");\n    pingTimer = setInterval(() => socket.readyState === WebSocket.OPEN && socket.send(\"PING\"), PING_FREQ_MS);\n  });\n\n  socket.addEventListener(\"message\", event => {\n    if (event.data === \"ACK\") console.info(\"livereload connected\", new Date());\n    if (event.data === \"RELOAD\") reload();\n  });\n\n  socket.addEventListener(\"close\", event => {\n    reconnect();\n  });\n}\n", "/**\n * Some CSS styles we reuse across the app.\n */\n\nexport const BAR = \"bg-linear-to-b from-secondary to-background\";\nexport const BORDER = \"border-primary/85 border-dotted\";\nexport const HOVER = \"hover:bg-hiliteb hover:text-hilitef cursor-pointer\";\nexport const HOVER_LIST = [\"bg-hiliteb\", \"text-hilitef\"]; // for classList add/remove\nexport const HOVER_SVG = \"hover:stroke-1 hover:stroke-hiliteb\";\nexport const HOVER_SVG_GROUP = \"group-hover:stroke-1 group-hover:stroke-hiliteb\";\nexport const INPUT = \"bg-background text-foreground placeholder:text-foreground/50\";\nexport const PROSE = \"prose prose-green dark:prose-invert sm:prose-sm lg:prose-lg xl:prose-xl 2xl:prose-2xl max-w-[80ch] mx-auto\";\n\n/** Generate a stripped background image style. */\nexport function stripes(size = \"10px\", col1 = \"var(--color-stripes)\", col2 = \"var(--color-background)\") {\n  const grad = \"radial-gradient(transparent 0, var(--color-background) 75%) top left / 100% 100%\";\n  const rlg = `repeating-linear-gradient(45deg, ${col1} 0, ${col1} 1px, ${col2} 0, ${col2} 50%) top left / ${size} ${size}`;\n  return `background: ${grad}, ${rlg}; backdrop-filter: blur(1.25px);`;\n}\n\n/** Collect tailwind classes. Adding a semicolon at the end or start of a class string filters that string out. */\nexport function tw(...classes: (string | undefined | boolean | string[])[]): string {\n  return classes\n    .flat(5) // Arbirtrary depth to flatten \uD83E\uDD37\u200D\u2642 (in practice we don't really use more than 1 level).\n    .filter(s => typeof s === \"string\" && !/^;|;$/.test(s))\n    .join(\" \");\n}\n\n/** Allow classList.toggle with more than one class. */\nexport function toggleClasses(element: HTMLElement | null | undefined, classes: string | string[], check: boolean) {\n  if (!element) return;\n  const all = Array.isArray(classes) ? classes : classes.split(\" \");\n  for (const c of all) element.classList.toggle(c, check);\n}\n\n/** Collect the classes from the classList of the element, and remove the given cssClasses. */\nexport function classesExcept(elem: Element, ...cssClasses: string[]): string {\n  return [...new Set(elem.classList).difference(new Set(cssClasses))].join(\" \");\n}\n", "import { options as _options } from 'preact';\n\n/** @type {number} */\nlet currentIndex;\n\n/** @type {import('./internal').Component} */\nlet currentComponent;\n\n/** @type {import('./internal').Component} */\nlet previousComponent;\n\n/** @type {number} */\nlet currentHook = 0;\n\n/** @type {Array<import('./internal').Component>} */\nlet afterPaintEffects = [];\n\n// Cast to use internal Options type\nconst options = /** @type {import('./internal').Options} */ (_options);\n\nlet oldBeforeDiff = options._diff;\nlet oldBeforeRender = options._render;\nlet oldAfterDiff = options.diffed;\nlet oldCommit = options._commit;\nlet oldBeforeUnmount = options.unmount;\nlet oldRoot = options._root;\n\nconst RAF_TIMEOUT = 100;\nlet prevRaf;\n\n/** @type {(vnode: import('./internal').VNode) => void} */\noptions._diff = vnode => {\n\tcurrentComponent = null;\n\tif (oldBeforeDiff) oldBeforeDiff(vnode);\n};\n\noptions._root = (vnode, parentDom) => {\n\tif (vnode && parentDom._children && parentDom._children._mask) {\n\t\tvnode._mask = parentDom._children._mask;\n\t}\n\n\tif (oldRoot) oldRoot(vnode, parentDom);\n};\n\n/** @type {(vnode: import('./internal').VNode) => void} */\noptions._render = vnode => {\n\tif (oldBeforeRender) oldBeforeRender(vnode);\n\n\tcurrentComponent = vnode._component;\n\tcurrentIndex = 0;\n\n\tconst hooks = currentComponent.__hooks;\n\tif (hooks) {\n\t\tif (previousComponent === currentComponent) {\n\t\t\thooks._pendingEffects = [];\n\t\t\tcurrentComponent._renderCallbacks = [];\n\t\t\thooks._list.forEach(hookItem => {\n\t\t\t\tif (hookItem._nextValue) {\n\t\t\t\t\thookItem._value = hookItem._nextValue;\n\t\t\t\t}\n\t\t\t\thookItem._pendingArgs = hookItem._nextValue = undefined;\n\t\t\t});\n\t\t} else {\n\t\t\thooks._pendingEffects.forEach(invokeCleanup);\n\t\t\thooks._pendingEffects.forEach(invokeEffect);\n\t\t\thooks._pendingEffects = [];\n\t\t\tcurrentIndex = 0;\n\t\t}\n\t}\n\tpreviousComponent = currentComponent;\n};\n\n/** @type {(vnode: import('./internal').VNode) => void} */\noptions.diffed = vnode => {\n\tif (oldAfterDiff) oldAfterDiff(vnode);\n\n\tconst c = vnode._component;\n\tif (c && c.__hooks) {\n\t\tif (c.__hooks._pendingEffects.length) afterPaint(afterPaintEffects.push(c));\n\t\tc.__hooks._list.forEach(hookItem => {\n\t\t\tif (hookItem._pendingArgs) {\n\t\t\t\thookItem._args = hookItem._pendingArgs;\n\t\t\t}\n\t\t\thookItem._pendingArgs = undefined;\n\t\t});\n\t}\n\tpreviousComponent = currentComponent = null;\n};\n\n// TODO: Improve typing of commitQueue parameter\n/** @type {(vnode: import('./internal').VNode, commitQueue: any) => void} */\noptions._commit = (vnode, commitQueue) => {\n\tcommitQueue.some(component => {\n\t\ttry {\n\t\t\tcomponent._renderCallbacks.forEach(invokeCleanup);\n\t\t\tcomponent._renderCallbacks = component._renderCallbacks.filter(cb =>\n\t\t\t\tcb._value ? invokeEffect(cb) : true\n\t\t\t);\n\t\t} catch (e) {\n\t\t\tcommitQueue.some(c => {\n\t\t\t\tif (c._renderCallbacks) c._renderCallbacks = [];\n\t\t\t});\n\t\t\tcommitQueue = [];\n\t\t\toptions._catchError(e, component._vnode);\n\t\t}\n\t});\n\n\tif (oldCommit) oldCommit(vnode, commitQueue);\n};\n\n/** @type {(vnode: import('./internal').VNode) => void} */\noptions.unmount = vnode => {\n\tif (oldBeforeUnmount) oldBeforeUnmount(vnode);\n\n\tconst c = vnode._component;\n\tif (c && c.__hooks) {\n\t\tlet hasErrored;\n\t\tc.__hooks._list.forEach(s => {\n\t\t\ttry {\n\t\t\t\tinvokeCleanup(s);\n\t\t\t} catch (e) {\n\t\t\t\thasErrored = e;\n\t\t\t}\n\t\t});\n\t\tc.__hooks = undefined;\n\t\tif (hasErrored) options._catchError(hasErrored, c._vnode);\n\t}\n};\n\n/**\n * Get a hook's state from the currentComponent\n * @param {number} index The index of the hook to get\n * @param {number} type The index of the hook to get\n * @returns {any}\n */\nfunction getHookState(index, type) {\n\tif (options._hook) {\n\t\toptions._hook(currentComponent, index, currentHook || type);\n\t}\n\tcurrentHook = 0;\n\n\t// Largely inspired by:\n\t// * https://github.com/michael-klein/funcy.js/blob/f6be73468e6ec46b0ff5aa3cc4c9baf72a29025a/src/hooks/core_hooks.mjs\n\t// * https://github.com/michael-klein/funcy.js/blob/650beaa58c43c33a74820a3c98b3c7079cf2e333/src/renderer.mjs\n\t// Other implementations to look at:\n\t// * https://codesandbox.io/s/mnox05qp8\n\tconst hooks =\n\t\tcurrentComponent.__hooks ||\n\t\t(currentComponent.__hooks = {\n\t\t\t_list: [],\n\t\t\t_pendingEffects: []\n\t\t});\n\n\tif (index >= hooks._list.length) {\n\t\thooks._list.push({});\n\t}\n\n\treturn hooks._list[index];\n}\n\n/**\n * @template {unknown} S\n * @param {import('./index').Dispatch<import('./index').StateUpdater<S>>} [initialState]\n * @returns {[S, (state: S) => void]}\n */\nexport function useState(initialState) {\n\tcurrentHook = 1;\n\treturn useReducer(invokeOrReturn, initialState);\n}\n\n/**\n * @template {unknown} S\n * @template {unknown} A\n * @param {import('./index').Reducer<S, A>} reducer\n * @param {import('./index').Dispatch<import('./index').StateUpdater<S>>} initialState\n * @param {(initialState: any) => void} [init]\n * @returns {[ S, (state: S) => void ]}\n */\nexport function useReducer(reducer, initialState, init) {\n\t/** @type {import('./internal').ReducerHookState} */\n\tconst hookState = getHookState(currentIndex++, 2);\n\thookState._reducer = reducer;\n\tif (!hookState._component) {\n\t\thookState._value = [\n\t\t\t!init ? invokeOrReturn(undefined, initialState) : init(initialState),\n\n\t\t\taction => {\n\t\t\t\tconst currentValue = hookState._nextValue\n\t\t\t\t\t? hookState._nextValue[0]\n\t\t\t\t\t: hookState._value[0];\n\t\t\t\tconst nextValue = hookState._reducer(currentValue, action);\n\n\t\t\t\tif (currentValue !== nextValue) {\n\t\t\t\t\thookState._nextValue = [nextValue, hookState._value[1]];\n\t\t\t\t\thookState._component.setState({});\n\t\t\t\t}\n\t\t\t}\n\t\t];\n\n\t\thookState._component = currentComponent;\n\n\t\tif (!currentComponent._hasScuFromHooks) {\n\t\t\tcurrentComponent._hasScuFromHooks = true;\n\t\t\tlet prevScu = currentComponent.shouldComponentUpdate;\n\t\t\tconst prevCWU = currentComponent.componentWillUpdate;\n\n\t\t\t// If we're dealing with a forced update `shouldComponentUpdate` will\n\t\t\t// not be called. But we use that to update the hook values, so we\n\t\t\t// need to call it.\n\t\t\tcurrentComponent.componentWillUpdate = function (p, s, c) {\n\t\t\t\tif (this._force) {\n\t\t\t\t\tlet tmp = prevScu;\n\t\t\t\t\t// Clear to avoid other sCU hooks from being called\n\t\t\t\t\tprevScu = undefined;\n\t\t\t\t\tupdateHookState(p, s, c);\n\t\t\t\t\tprevScu = tmp;\n\t\t\t\t}\n\n\t\t\t\tif (prevCWU) prevCWU.call(this, p, s, c);\n\t\t\t};\n\n\t\t\t// This SCU has the purpose of bailing out after repeated updates\n\t\t\t// to stateful hooks.\n\t\t\t// we store the next value in _nextValue[0] and keep doing that for all\n\t\t\t// state setters, if we have next states and\n\t\t\t// all next states within a component end up being equal to their original state\n\t\t\t// we are safe to bail out for this specific component.\n\t\t\t/**\n\t\t\t *\n\t\t\t * @type {import('./internal').Component[\"shouldComponentUpdate\"]}\n\t\t\t */\n\t\t\t// @ts-ignore - We don't use TS to downtranspile\n\t\t\t// eslint-disable-next-line no-inner-declarations\n\t\t\tfunction updateHookState(p, s, c) {\n\t\t\t\tif (!hookState._component.__hooks) return true;\n\n\t\t\t\t/** @type {(x: import('./internal').HookState) => x is import('./internal').ReducerHookState} */\n\t\t\t\tconst isStateHook = x => !!x._component;\n\t\t\t\tconst stateHooks =\n\t\t\t\t\thookState._component.__hooks._list.filter(isStateHook);\n\n\t\t\t\tconst allHooksEmpty = stateHooks.every(x => !x._nextValue);\n\t\t\t\t// When we have no updated hooks in the component we invoke the previous SCU or\n\t\t\t\t// traverse the VDOM tree further.\n\t\t\t\tif (allHooksEmpty) {\n\t\t\t\t\treturn prevScu ? prevScu.call(this, p, s, c) : true;\n\t\t\t\t}\n\n\t\t\t\t// We check whether we have components with a nextValue set that\n\t\t\t\t// have values that aren't equal to one another this pushes\n\t\t\t\t// us to update further down the tree\n\t\t\t\tlet shouldUpdate = false;\n\t\t\t\tstateHooks.forEach(hookItem => {\n\t\t\t\t\tif (hookItem._nextValue) {\n\t\t\t\t\t\tconst currentValue = hookItem._value[0];\n\t\t\t\t\t\thookItem._value = hookItem._nextValue;\n\t\t\t\t\t\thookItem._nextValue = undefined;\n\t\t\t\t\t\tif (currentValue !== hookItem._value[0]) shouldUpdate = true;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\treturn shouldUpdate || hookState._component.props !== p\n\t\t\t\t\t? prevScu\n\t\t\t\t\t\t? prevScu.call(this, p, s, c)\n\t\t\t\t\t\t: true\n\t\t\t\t\t: false;\n\t\t\t}\n\n\t\t\tcurrentComponent.shouldComponentUpdate = updateHookState;\n\t\t}\n\t}\n\n\treturn hookState._nextValue || hookState._value;\n}\n\n/**\n * @param {import('./internal').Effect} callback\n * @param {unknown[]} args\n * @returns {void}\n */\nexport function useEffect(callback, args) {\n\t/** @type {import('./internal').EffectHookState} */\n\tconst state = getHookState(currentIndex++, 3);\n\tif (!options._skipEffects && argsChanged(state._args, args)) {\n\t\tstate._value = callback;\n\t\tstate._pendingArgs = args;\n\n\t\tcurrentComponent.__hooks._pendingEffects.push(state);\n\t}\n}\n\n/**\n * @param {import('./internal').Effect} callback\n * @param {unknown[]} args\n * @returns {void}\n */\nexport function useLayoutEffect(callback, args) {\n\t/** @type {import('./internal').EffectHookState} */\n\tconst state = getHookState(currentIndex++, 4);\n\tif (!options._skipEffects && argsChanged(state._args, args)) {\n\t\tstate._value = callback;\n\t\tstate._pendingArgs = args;\n\n\t\tcurrentComponent._renderCallbacks.push(state);\n\t}\n}\n\n/** @type {(initialValue: unknown) => unknown} */\nexport function useRef(initialValue) {\n\tcurrentHook = 5;\n\treturn useMemo(() => ({ current: initialValue }), []);\n}\n\n/**\n * @param {object} ref\n * @param {() => object} createHandle\n * @param {unknown[]} args\n * @returns {void}\n */\nexport function useImperativeHandle(ref, createHandle, args) {\n\tcurrentHook = 6;\n\tuseLayoutEffect(\n\t\t() => {\n\t\t\tif (typeof ref == 'function') {\n\t\t\t\tref(createHandle());\n\t\t\t\treturn () => ref(null);\n\t\t\t} else if (ref) {\n\t\t\t\tref.current = createHandle();\n\t\t\t\treturn () => (ref.current = null);\n\t\t\t}\n\t\t},\n\t\targs == null ? args : args.concat(ref)\n\t);\n}\n\n/**\n * @template {unknown} T\n * @param {() => T} factory\n * @param {unknown[]} args\n * @returns {T}\n */\nexport function useMemo(factory, args) {\n\t/** @type {import('./internal').MemoHookState<T>} */\n\tconst state = getHookState(currentIndex++, 7);\n\tif (argsChanged(state._args, args)) {\n\t\tstate._value = factory();\n\t\tstate._args = args;\n\t\tstate._factory = factory;\n\t}\n\n\treturn state._value;\n}\n\n/**\n * @param {() => void} callback\n * @param {unknown[]} args\n * @returns {() => void}\n */\nexport function useCallback(callback, args) {\n\tcurrentHook = 8;\n\treturn useMemo(() => callback, args);\n}\n\n/**\n * @param {import('./internal').PreactContext} context\n */\nexport function useContext(context) {\n\tconst provider = currentComponent.context[context._id];\n\t// We could skip this call here, but than we'd not call\n\t// `options._hook`. We need to do that in order to make\n\t// the devtools aware of this hook.\n\t/** @type {import('./internal').ContextHookState} */\n\tconst state = getHookState(currentIndex++, 9);\n\t// The devtools needs access to the context object to\n\t// be able to pull of the default value when no provider\n\t// is present in the tree.\n\tstate._context = context;\n\tif (!provider) return context._defaultValue;\n\t// This is probably not safe to convert to \"!\"\n\tif (state._value == null) {\n\t\tstate._value = true;\n\t\tprovider.sub(currentComponent);\n\t}\n\treturn provider.props.value;\n}\n\n/**\n * Display a custom label for a custom hook for the devtools panel\n * @type {<T>(value: T, cb?: (value: T) => string | number) => void}\n */\nexport function useDebugValue(value, formatter) {\n\tif (options.useDebugValue) {\n\t\toptions.useDebugValue(\n\t\t\tformatter ? formatter(value) : /** @type {any}*/ (value)\n\t\t);\n\t}\n}\n\n/**\n * @param {(error: unknown, errorInfo: import('preact').ErrorInfo) => void} cb\n * @returns {[unknown, () => void]}\n */\nexport function useErrorBoundary(cb) {\n\t/** @type {import('./internal').ErrorBoundaryHookState} */\n\tconst state = getHookState(currentIndex++, 10);\n\tconst errState = useState();\n\tstate._value = cb;\n\tif (!currentComponent.componentDidCatch) {\n\t\tcurrentComponent.componentDidCatch = (err, errorInfo) => {\n\t\t\tif (state._value) state._value(err, errorInfo);\n\t\t\terrState[1](err);\n\t\t};\n\t}\n\treturn [\n\t\terrState[0],\n\t\t() => {\n\t\t\terrState[1](undefined);\n\t\t}\n\t];\n}\n\n/** @type {() => string} */\nexport function useId() {\n\t/** @type {import('./internal').IdHookState} */\n\tconst state = getHookState(currentIndex++, 11);\n\tif (!state._value) {\n\t\t// Grab either the root node or the nearest async boundary node.\n\t\t/** @type {import('./internal.d').VNode} */\n\t\tlet root = currentComponent._vnode;\n\t\twhile (root !== null && !root._mask && root._parent !== null) {\n\t\t\troot = root._parent;\n\t\t}\n\n\t\tlet mask = root._mask || (root._mask = [0, 0]);\n\t\tstate._value = 'P' + mask[0] + '-' + mask[1]++;\n\t}\n\n\treturn state._value;\n}\n\n/**\n * After paint effects consumer.\n */\nfunction flushAfterPaintEffects() {\n\tlet component;\n\twhile ((component = afterPaintEffects.shift())) {\n\t\tif (!component._parentDom || !component.__hooks) continue;\n\t\ttry {\n\t\t\tcomponent.__hooks._pendingEffects.forEach(invokeCleanup);\n\t\t\tcomponent.__hooks._pendingEffects.forEach(invokeEffect);\n\t\t\tcomponent.__hooks._pendingEffects = [];\n\t\t} catch (e) {\n\t\t\tcomponent.__hooks._pendingEffects = [];\n\t\t\toptions._catchError(e, component._vnode);\n\t\t}\n\t}\n}\n\nlet HAS_RAF = typeof requestAnimationFrame == 'function';\n\n/**\n * Schedule a callback to be invoked after the browser has a chance to paint a new frame.\n * Do this by combining requestAnimationFrame (rAF) + setTimeout to invoke a callback after\n * the next browser frame.\n *\n * Also, schedule a timeout in parallel to the the rAF to ensure the callback is invoked\n * even if RAF doesn't fire (for example if the browser tab is not visible)\n *\n * @param {() => void} callback\n */\nfunction afterNextFrame(callback) {\n\tconst done = () => {\n\t\tclearTimeout(timeout);\n\t\tif (HAS_RAF) cancelAnimationFrame(raf);\n\t\tsetTimeout(callback);\n\t};\n\tconst timeout = setTimeout(done, RAF_TIMEOUT);\n\n\tlet raf;\n\tif (HAS_RAF) {\n\t\traf = requestAnimationFrame(done);\n\t}\n}\n\n// Note: if someone used options.debounceRendering = requestAnimationFrame,\n// then effects will ALWAYS run on the NEXT frame instead of the current one, incurring a ~16ms delay.\n// Perhaps this is not such a big deal.\n/**\n * Schedule afterPaintEffects flush after the browser paints\n * @param {number} newQueueLength\n * @returns {void}\n */\nfunction afterPaint(newQueueLength) {\n\tif (newQueueLength === 1 || prevRaf !== options.requestAnimationFrame) {\n\t\tprevRaf = options.requestAnimationFrame;\n\t\t(prevRaf || afterNextFrame)(flushAfterPaintEffects);\n\t}\n}\n\n/**\n * @param {import('./internal').HookState} hook\n * @returns {void}\n */\nfunction invokeCleanup(hook) {\n\t// A hook cleanup can introduce a call to render which creates a new root, this will call options.vnode\n\t// and move the currentComponent away.\n\tconst comp = currentComponent;\n\tlet cleanup = hook._cleanup;\n\tif (typeof cleanup == 'function') {\n\t\thook._cleanup = undefined;\n\t\tcleanup();\n\t}\n\n\tcurrentComponent = comp;\n}\n\n/**\n * Invoke a Hook's effect\n * @param {import('./internal').EffectHookState} hook\n * @returns {void}\n */\nfunction invokeEffect(hook) {\n\t// A hook call can introduce a call to render which creates a new root, this will call options.vnode\n\t// and move the currentComponent away.\n\tconst comp = currentComponent;\n\thook._cleanup = hook._value();\n\tcurrentComponent = comp;\n}\n\n/**\n * @param {unknown[]} oldArgs\n * @param {unknown[]} newArgs\n * @returns {boolean}\n */\nfunction argsChanged(oldArgs, newArgs) {\n\treturn (\n\t\t!oldArgs ||\n\t\toldArgs.length !== newArgs.length ||\n\t\tnewArgs.some((arg, index) => arg !== oldArgs[index])\n\t);\n}\n\n/**\n * @template Arg\n * @param {Arg} arg\n * @param {(arg: Arg) => any} f\n * @returns {any}\n */\nfunction invokeOrReturn(arg, f) {\n\treturn typeof f == 'function' ? f(arg) : f;\n}\n", "import type { RefObject } from \"preact\";\nimport { type Dispatch, useEffect, useRef, useState } from \"preact/hooks\";\n\nexport abstract class Dispatchable<T> {\n  dispatcher?: Dispatch<this>;\n\n  constructor(protected data: T) {}\n\n  clone(): this {\n    const Ctor = this.constructor as new (data: T) => this;\n    const clone = new Ctor(this.data);\n    clone.dispatcher = this.dispatcher;\n    return clone;\n  }\n\n  dispatch(): this {\n    this.dispatcher?.(this.clone());\n    return this;\n  }\n}\n\n/**\n * Setup a {@link Dispatchable} instance with a {@link useState} dispatcher.\n */\n// biome-ignore lint/suspicious/noExplicitAny: accept any kind of Dispatchable.\nexport function useDispatchable<T extends Dispatchable<any>>(factory: () => T): T {\n  const [state, dispatcher] = useState(factory);\n  state.dispatcher = dispatcher;\n  return state;\n}\n\n/**\n * Saves the state of the component on the HTML wrapper element of a preact component.\n * Returns a ref that should be attached to the root element of the component.\n */\nexport function useRootState<Container extends HTMLElement, T>(state: T): RefObject<Container | undefined> {\n  const ref = useRef<Container | undefined>();\n  useEffect(() => {\n    const root = ref.current?.parentElement as Container & { state?: T };\n    if (root && state) root.state = state;\n  }, [state]);\n  return ref as RefObject<Container | undefined>;\n}\n", "const ENCODED_ENTITIES = /[\"&<]/;\n\n/** @param {string} str */\nexport function encodeEntities(str) {\n\t// Skip all work for strings with no entities needing encoding:\n\tif (str.length === 0 || ENCODED_ENTITIES.test(str) === false) return str;\n\n\tlet last = 0,\n\t\ti = 0,\n\t\tout = '',\n\t\tch = '';\n\n\t// Seek forward in str until the next entity char:\n\tfor (; i < str.length; i++) {\n\t\tswitch (str.charCodeAt(i)) {\n\t\t\tcase 34:\n\t\t\t\tch = '&quot;';\n\t\t\t\tbreak;\n\t\t\tcase 38:\n\t\t\t\tch = '&amp;';\n\t\t\t\tbreak;\n\t\t\tcase 60:\n\t\t\t\tch = '&lt;';\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tcontinue;\n\t\t}\n\t\t// Append skipped/buffered characters and the encoded entity:\n\t\tif (i !== last) out += str.slice(last, i);\n\t\tout += ch;\n\t\t// Start the next seek/buffer after the entity's offset:\n\t\tlast = i + 1;\n\t}\n\tif (i !== last) out += str.slice(last, i);\n\treturn out;\n}\n", "/** Normal hydration that attaches to a DOM tree but does not diff it. */\nexport const MODE_HYDRATE = 1 << 5;\n/** Signifies this VNode suspended on the previous render */\nexport const MODE_SUSPENDED = 1 << 7;\n/** Indicates that this node needs to be inserted while patching children */\nexport const INSERT_VNODE = 1 << 16;\n/** Indicates a VNode has been matched with another VNode in the diff */\nexport const MATCHED = 1 << 17;\n\n/** Reset all mode flags */\nexport const RESET_MODE = ~(MODE_HYDRATE | MODE_SUSPENDED);\n\nexport const EMPTY_OBJ = /** @type {any} */ ({});\nexport const EMPTY_ARR = [];\nexport const IS_NON_DIMENSIONAL =\n\t/acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i;\n", "import { options, Fragment } from 'preact';\nimport { encodeEntities } from './utils';\nimport { IS_NON_DIMENSIONAL } from '../../src/constants';\n\nlet vnodeId = 0;\n\nconst isArray = Array.isArray;\n\n/**\n * @fileoverview\n * This file exports various methods that implement Babel's \"automatic\" JSX runtime API:\n * - jsx(type, props, key)\n * - jsxs(type, props, key)\n * - jsxDEV(type, props, key, __source, __self)\n *\n * The implementation of createVNode here is optimized for performance.\n * Benchmarks: https://esbench.com/bench/5f6b54a0b4632100a7dcd2b3\n */\n\n/**\n * JSX.Element factory used by Babel's {runtime:\"automatic\"} JSX transform\n * @param {VNode['type']} type\n * @param {VNode['props']} props\n * @param {VNode['key']} [key]\n * @param {unknown} [isStaticChildren]\n * @param {unknown} [__source]\n * @param {unknown} [__self]\n */\nfunction createVNode(type, props, key, isStaticChildren, __source, __self) {\n\tif (!props) props = {};\n\t// We'll want to preserve `ref` in props to get rid of the need for\n\t// forwardRef components in the future, but that should happen via\n\t// a separate PR.\n\tlet normalizedProps = props,\n\t\tref,\n\t\ti;\n\n\tif ('ref' in normalizedProps) {\n\t\tnormalizedProps = {};\n\t\tfor (i in props) {\n\t\t\tif (i == 'ref') {\n\t\t\t\tref = props[i];\n\t\t\t} else {\n\t\t\t\tnormalizedProps[i] = props[i];\n\t\t\t}\n\t\t}\n\t}\n\n\t/** @type {VNode & { __source: any; __self: any }} */\n\tconst vnode = {\n\t\ttype,\n\t\tprops: normalizedProps,\n\t\tkey,\n\t\tref,\n\t\t_children: null,\n\t\t_parent: null,\n\t\t_depth: 0,\n\t\t_dom: null,\n\t\t_nextDom: undefined,\n\t\t_component: null,\n\t\tconstructor: undefined,\n\t\t_original: --vnodeId,\n\t\t_index: -1,\n\t\t_flags: 0,\n\t\t__source,\n\t\t__self\n\t};\n\n\t// If a Component VNode, check for and apply defaultProps.\n\t// Note: `type` is often a String, and can be `undefined` in development.\n\tif (typeof type === 'function' && (ref = type.defaultProps)) {\n\t\tfor (i in ref)\n\t\t\tif (typeof normalizedProps[i] === 'undefined') {\n\t\t\t\tnormalizedProps[i] = ref[i];\n\t\t\t}\n\t}\n\n\tif (options.vnode) options.vnode(vnode);\n\treturn vnode;\n}\n\n/**\n * Create a template vnode. This function is not expected to be\n * used directly, but rather through a precompile JSX transform\n * @param {string[]} templates\n * @param  {Array<string | null | VNode>} exprs\n * @returns {VNode}\n */\nfunction jsxTemplate(templates, ...exprs) {\n\tconst vnode = createVNode(Fragment, { tpl: templates, exprs });\n\t// Bypass render to string top level Fragment optimization\n\tvnode.key = vnode._vnode;\n\treturn vnode;\n}\n\nconst JS_TO_CSS = {};\nconst CSS_REGEX = /[A-Z]/g;\n\n/**\n * Serialize an HTML attribute to a string. This function is not\n * expected to be used directly, but rather through a precompile\n * JSX transform\n * @param {string} name The attribute name\n * @param {*} value The attribute value\n * @returns {string}\n */\nfunction jsxAttr(name, value) {\n\tif (options.attr) {\n\t\tconst result = options.attr(name, value);\n\t\tif (typeof result === 'string') return result;\n\t}\n\n\tif (name === 'ref' || name === 'key') return '';\n\tif (name === 'style' && typeof value === 'object') {\n\t\tlet str = '';\n\t\tfor (let prop in value) {\n\t\t\tlet val = value[prop];\n\t\t\tif (val != null && val !== '') {\n\t\t\t\tconst name =\n\t\t\t\t\tprop[0] == '-'\n\t\t\t\t\t\t? prop\n\t\t\t\t\t\t: JS_TO_CSS[prop] ||\n\t\t\t\t\t\t\t(JS_TO_CSS[prop] = prop.replace(CSS_REGEX, '-$&').toLowerCase());\n\n\t\t\t\tlet suffix = ';';\n\t\t\t\tif (\n\t\t\t\t\ttypeof val === 'number' &&\n\t\t\t\t\t// Exclude custom-attributes\n\t\t\t\t\t!name.startsWith('--') &&\n\t\t\t\t\t!IS_NON_DIMENSIONAL.test(name)\n\t\t\t\t) {\n\t\t\t\t\tsuffix = 'px;';\n\t\t\t\t}\n\t\t\t\tstr = str + name + ':' + val + suffix;\n\t\t\t}\n\t\t}\n\t\treturn name + '=\"' + str + '\"';\n\t}\n\n\tif (\n\t\tvalue == null ||\n\t\tvalue === false ||\n\t\ttypeof value === 'function' ||\n\t\ttypeof value === 'object'\n\t) {\n\t\treturn '';\n\t} else if (value === true) return name;\n\n\treturn name + '=\"' + encodeEntities(value) + '\"';\n}\n\n/**\n * Escape a dynamic child passed to `jsxTemplate`. This function\n * is not expected to be used directly, but rather through a\n * precompile JSX transform\n * @param {*} value\n * @returns {string | null | VNode | Array<string | null | VNode>}\n */\nfunction jsxEscape(value) {\n\tif (\n\t\tvalue == null ||\n\t\ttypeof value === 'boolean' ||\n\t\ttypeof value === 'function'\n\t) {\n\t\treturn null;\n\t}\n\n\tif (typeof value === 'object') {\n\t\t// Check for VNode\n\t\tif (value.constructor === undefined) return value;\n\n\t\tif (isArray(value)) {\n\t\t\tfor (let i = 0; i < value.length; i++) {\n\t\t\t\tvalue[i] = jsxEscape(value[i]);\n\t\t\t}\n\t\t\treturn value;\n\t\t}\n\t}\n\n\treturn encodeEntities('' + value);\n}\n\nexport {\n\tcreateVNode as jsx,\n\tcreateVNode as jsxs,\n\tcreateVNode as jsxDEV,\n\tFragment,\n\t// precompiled JSX transform\n\tjsxTemplate,\n\tjsxAttr,\n\tjsxEscape\n};\n", "// Thanks https://spectrum.adobe.com/page/icons/\n\nconst css = \"fill-current size-[1.5rem] sm:size-[1.75rem] lg:size-[2rem] xl:size-[2.25rem] 2xl:size-[2.5rem]\";\n\nexport const ABC = (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 18 18\" class={css}>\n    <title>Alphabetic</title>\n    <path\n      class=\"fill\"\n      d=\"M3.0805,8.3675,2.31,10.878c-.028.091-.0705.122-.154.122H.756c-.0845,0-.1125-.0455-.1-.15L3.5425,1.9285A2.51436,2.51436,0,0,0,3.669,1.107c0-.0615.028-.107.084-.107H5.7c.0705,0,.084.015.1.0915L9.0355,10.863c.0145.0915,0,.137-.084.137H7.381a.14051.14051,0,0,1-.1405-.0915L6.428,8.3675Zm2.9-1.6595c-.294-1.005-.9525-3.12-1.233-4.1855h-.014c-.224,1.02-.785,2.8-1.2045,4.1855Z\"\n    />\n    <path\n      class=\"fill\"\n      d=\"M9.613,17c-.0565,0-.1125-.015-.1125-.122v-1.02a.346.346,0,0,1,.042-.1825l4.861-7.032H9.711c-.0705,0-.1125-.0145-.1-.106l.21-1.4155C9.835,7.031,9.877,7,9.9465,7H16.463c.069,0,.084.031.084.0915v1.096a.3265.3265,0,0,1-.0705.213L11.7,15.3415h5.015c.069,0,.1.0455.069.137l-.2235,1.4c-.0135.091-.042.122-.126.122Z\"\n    />\n  </svg>\n);\n\nexport const RANKING = (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 18 18\" class={css}>\n    <title>Ranking</title>\n    <path\n      class=\"fill\"\n      d=\"M14.259,7.6a2.3635,2.3635,0,0,0,1.6805-2.2255c0-1.521-1.0885-2.625-3.0895-2.625a5.365,5.365,0,0,0-2.561.6245.13949.13949,0,0,0-.064.144V4.542c0,.064.0165.0795.0965.05A4.33146,4.33146,0,0,1,12.626,3.95c1.4085,0,2,.688,2,1.584,0,1.0245-.8645,1.569-2.273,1.569h-.591c-.08,0-.096.05-.096.112V8.223c0,.064.032.096.112.096h.672c1.5845,0,2.641.5765,2.641,1.857,0,1.009-.704,1.8725-2.4325,1.8725a7.11785,7.11785,0,0,1-2.497-.654,3.79252,3.79252,0,0,0,.3305-1.54,3.01569,3.01569,0,0,0-3.224-3.192A6.30249,6.30249,0,0,0,4.5,7.392V1.625a.375.375,0,0,0-.375-.375H3.379a.3735.3735,0,0,0-.3.15L1.65,2.545a.747.747,0,0,0-.15.45v.124a.375.375,0,0,0,.375.375H3v7.125a.375.375,0,0,0,.375.375h.75a.375.375,0,0,0,.375-.375V8.7775a5.26947,5.26947,0,0,1,2.516-.754c1.2735,0,2.05.6225,2.05,1.8765,0,.9625-.4695,1.8975-1.9,3.4775A24.53582,24.53582,0,0,1,4.6,15.897a.25.25,0,0,0-.0845.2095v.709c0,.161.106.1845.169.1845H10.575c.1185,0,.156-.0425.2-.15l.235-.9755a.135.135,0,0,0-.0175-.1215.17851.17851,0,0,0-.15-.05H8.669c-1.209,0-1.457,0-1.932.031a15.25015,15.25015,0,0,0,1.859-2.0125c.3735-.4585.6955-.874.9695-1.275a8.3231,8.3231,0,0,0,3.1085.805c2.161,0,3.7775-1.104,3.7775-3.073A2.611,2.611,0,0,0,14.259,7.6Z\"\n    />\n  </svg>\n);\n\nexport const FULLCIRCLE = (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 18 18\" class={css}>\n    <title>Circle</title>\n    <circle class=\"fill\" cx=\"9\" cy=\"9\" r=\"8\" />\n  </svg>\n);\n\nexport const SUN = (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 18 18\" class={css}>\n    <title>Sun</title>\n    <path d=\"m9,5.05c2.18152,0,3.95,1.76848,3.95,3.95s-1.76848,3.95-3.95,3.95-3.95-1.76848-3.95-3.95,1.76848-3.95,3.95-3.95Zm-.9-4.8v2.5c0,.13807.11193.25.25.25h1.3c.13807,0,.25-.11193.25-.25V.25c0-.13807-.11193-.25-.25-.25h-1.3c-.13807,0-.25.11193-.25.25Zm0,15v2.5c0,.13807.11193.25.25.25h1.3c.13807,0,.25-.11193.25-.25v-2.5c0-.13807-.11193-.25-.25-.25h-1.3c-.13807,0-.25.11193-.25.25ZM0,8.35v1.3c0,.13807.11193.25.25.25h2.5c.13807,0,.25-.11193.25-.25v-1.3c0-.13807-.11193-.25-.25-.25H.25c-.13807,0-.25.11193-.25.25Zm15,0v1.3c0,.13807.11193.25.25.25h2.5c.13807,0,.25-.11193.25-.25v-1.3c0-.13807-.11193-.25-.25-.25h-2.5c-.13807,0-.25.11193-.25.25Zm-2.01021-4.23913l.91924.91924c.09763.09763.25592.09763.35355,0l1.76777-1.76777c.09763-.09763.09763-.25592,0-.35355l-.91924-.91924c-.09763-.09763-.25592-.09763-.35355,0l-1.76777,1.76777c-.09763.09763-.09763.25592,0,.35355ZM1.98978,15.11121l.91924.91924c.09763.09763.25592.09763.35355,0l1.76777-1.76777c.09763-.09763.09763-.25592,0-.35355l-.91924-.91924c-.09763-.09763-.25592-.09763-.35355,0l-1.76777,1.76777c-.09763.09763-.09763.25592,0,.35355Zm-.01031-11.8587l1.76777,1.76777c.09763.09763.25592.09763.35355,0l.91924-.91924c.09763-.09763.09763-.25592,0-.35355l-1.76777-1.76777c-.09763-.09763-.25592-.09763-.35355,0l-.91924.91924c-.09763.09763-.09763.25592,0,.35355Zm10.9902,10.99001l1.76777,1.76777c.09763.09763.25592.09763.35355,0l.91924-.91924c.09763-.09763.09763-.25592,0-.35355l-1.76777-1.76777c-.09763-.09763-.25592-.09763-.35355,0l-.91924.91924c-.09763.09763-.09763.25592,0,.35355Z\" />\n  </svg>\n);\n\nexport const MOON = (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 18 18\" class={css}>\n    <title>Moon</title>\n    <path d=\"M9,1a8,8,0,1,0,8,8A8,8,0,0,0,9,1Zm.5,14.982c-.165.0115-.332.018-.5.018A7,7,0,0,1,9,2c.168,0,.335.0065.5.018A11,11,0,0,0,9.5,15.982Z\" />\n  </svg>\n);\n\nexport const MENU = (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 18 18\" class={css}>\n    <title>Menu</title>\n    <rect height=\"2\" rx=\"0.5\" width=\"14\" x=\"2\" y=\"8\" />\n    <rect height=\"2\" rx=\"0.5\" width=\"14\" x=\"2\" y=\"3\" />\n    <rect height=\"2\" rx=\"0.5\" width=\"14\" x=\"2\" y=\"13\" />\n  </svg>\n);\n\nexport const CLOSE = (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 18 18\" class={css}>\n    <title>Close</title>\n    <path d=\"M13.2425,3.343,9,7.586,4.7575,3.343a.5.5,0,0,0-.707,0L3.343,4.05a.5.5,0,0,0,0,.707L7.586,9,3.343,13.2425a.5.5,0,0,0,0,.707l.707.7075a.5.5,0,0,0,.707,0L9,10.414l4.2425,4.243a.5.5,0,0,0,.707,0l.7075-.707a.5.5,0,0,0,0-.707L10.414,9l4.243-4.2425a.5.5,0,0,0,0-.707L13.95,3.343a.5.5,0,0,0-.70711-.00039Z\" />\n  </svg>\n);\n\nexport const FILTER = (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 18 18\" class={css}>\n    <title>Filter</title>\n    <path d=\"M15.473,1H1.527a.5.5,0,0,0-.3935.8085L7,9.2945V16.95a.496.496,0,0,0,.84.412l1.9905-2.0765A.60949.60949,0,0,0,10,14.864V9.2945l5.8665-7.486A.5.5,0,0,0,15.473,1Z\" />\n  </svg>\n);\n\nexport const FILTER_EDIT = (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 18 18\" class={css}>\n    <title>Filter Edit</title>\n    <path d=\"M17.8925,10.8605,16.14,9.1075A.36952.36952,0,0,0,15.8765,9H15.865a.41651.41651,0,0,0-.282.1235l-5.411,5.411a.304.304,0,0,0-.0765.128l-1.0135,3c-.0345.1145.1395.2585.238.2585a.15858.15858,0,0,0,.0185,0c.084-.0195,2.5615-.882,3-1.014a.3.3,0,0,0,.126-.0755l5.412-5.4145A.41749.41749,0,0,0,18,11.15.37152.37152,0,0,0,17.8925,10.8605Zm-5.8,5.4815c-.657.1975-1.65.6145-2.215.784l.78-2.2155Z\" />\n    <path d=\"M15.473,1H1.527a.5.5,0,0,0-.3935.8085L7,9.2945V15a.496.496,0,0,0,.84.4125L9.83,13.336a.61.61,0,0,0,.17-.4225V9.2945l5.8665-7.486A.5.5,0,0,0,15.473,1Z\" />\n  </svg>\n);\n\nexport const FILTER_CLOSE = (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 18 18\" class={css}>\n    <title>Filter Close</title>\n    <path d=\"M13.5,9.05a4.45,4.45,0,1,0,4.45,4.45A4.45,4.45,0,0,0,13.5,9.05Zm2.913,6.1335a.25.25,0,0,1,0,.3535l-.876.876a.25.25,0,0,1-.3535,0L13.5,14.7295,11.8165,16.413a.25.25,0,0,1-.3535,0l-.876-.876a.25.25,0,0,1,0-.3535L12.2705,13.5,10.587,11.8165a.25.25,0,0,1,0-.3535l.876-.876a.25.25,0,0,1,.3535,0L13.5,12.2705l1.6835-1.6835a.25.25,0,0,1,.3535,0l.876.876a.25.25,0,0,1,0,.3535L14.7295,13.5Z\" />\n    <path d=\"M7.4,13.5A6.573,6.573,0,0,1,9,9.2945c1.0415-1.347,5.8665-7.486,5.8665-7.486A.5.5,0,0,0,14.473,1H.527a.5.5,0,0,0-.3935.8085L6,9.2945V16.95a.496.496,0,0,0,.84.4125L8.009,16.143A6.06548,6.06548,0,0,1,7.4,13.5Z\" />\n  </svg>\n);\n\nexport const BOOLEAN = (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 18 18\" class={css}>\n    <title>Boolean</title>\n    <path d=\"M12,4.25a4.75,4.75,0,0,1,0,9.5H6a4.75,4.75,0,0,1,0-9.5ZM12,3H6A6,6,0,0,0,6,15h6A6,6,0,0,0,12,3Zm0,3A3,3,0,1,1,9,9,3,3,0,0,1,12,6Z\" />\n  </svg>\n);\n\nexport const DELETE = (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 18 18\" class={css}>\n    <title>Delete</title>\n    <path d=\"M15.75,3H12V2a1,1,0,0,0-1-1H6A1,1,0,0,0,5,2V3H1.25A.25.25,0,0,0,1,3.25v.5A.25.25,0,0,0,1.25,4h1L3.4565,16.55a.5.5,0,0,0,.5.45H13.046a.5.5,0,0,0,.5-.45L14.75,4h1A.25.25,0,0,0,16,3.75v-.5A.25.25,0,0,0,15.75,3ZM5.5325,14.5a.5.5,0,0,1-.53245-.46529L5,14.034l-.5355-8a.50112.50112,0,0,1,1-.067l.5355,8a.5.5,0,0,1-.46486.53283ZM9,14a.5.5,0,0,1-1,0V6A.5.5,0,0,1,9,6ZM11,3H6V2h5Zm1,11.034a.50112.50112,0,0,1-1-.067l.5355-8a.50112.50112,0,1,1,1,.067Z\" />\n  </svg>\n);\n\nexport const DESELECT = (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 18 18\" class={css}>\n    <title>Deselect</title>\n    <path d=\"m2,9h1v3h-1v-3Zm1,6v-1h-1v1.5555c0,.24549.19901.4445.4445.4445h1.5555v-1h-1Zm3,1h3v-1h-3v1Zm9-7h1v-3h-1v3Zm.5555-7h-1.5555v1h1v1h1v-1.5555c0-.24549-.19901-.4445-.4445-.4445Zm-6.5555,1h3v-1h-3v1ZM1.10295,1.97065l14.92632,14.92632c.15973.15973.41869.15972.57841,0l.28956-.28956c.15972-.15972.15973-.41869,0-.57841L1.97092,1.10268c-.15972-.15972-.41869-.15972-.57841,0l-.28956.28956c-.15972.15972-.15972.41869,0,.57841Zm14.89705,11.74835v-2.719h-1v1.719l1,1Zm-3.282,1.281h-1.718v1h2.718l-1-1ZM2,4.281v2.719h1v-1.719l-1-1Zm3.281-1.281h1.719v-1h-2.719l1,1Z\" />\n  </svg>\n);\n\nexport const LINKOUT = (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 18 18\" class={css}>\n    <title>Link Out</title>\n    <path d=\"M11.77,1.4265l1.6945,1.695-4.773,4.773a.25.25,0,0,0,0,.3535L9.75,9.3085a.25.25,0,0,0,.3535,0l4.773-4.773L16.571,6.23A.25.25,0,0,0,17,6.0535V1H11.9465a.25.25,0,0,0-.1765.4265Z\" />\n  </svg>\n);\n\nexport const SORT_DOWN = (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 18 18\" class={css}>\n    <title>Sort Down</title>\n    <rect id=\"Canvas\" fill=\"#ff13dc\" opacity=\"0\" width=\"18\" height=\"18\" />\n    <rect class=\"fill\" height=\"2\" rx=\"0.5\" width=\"6\" x=\"1\" y=\"12\" />\n    <rect height=\"2\" rx=\"0.5\" width=\"8\" x=\"1\" y=\"8\" />\n    <rect height=\"2\" rx=\"0.5\" width=\"10\" x=\"1\" y=\"4\" />\n    <path d=\"M16,12H14.9965V4.5a.494.494,0,0,0-.488-.5L14.503,4h-.496a.5.5,0,0,0-.5.5L13.5035,12H12.5a.25.25,0,0,0-.25.25.245.245,0,0,0,.0735.175l1.7685,2.0165a.25.25,0,0,0,.316,0l1.7685-2.0165a.245.245,0,0,0,.0735-.175A.25.25,0,0,0,16,12Z\" />\n  </svg>\n);\n\nexport const SORT_UP = (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 18 18\" class={css}>\n    <title>Sort Up</title>\n    <rect height=\"2\" rx=\"0.5\" width=\"6\" x=\"1\" y=\"4\" />\n    <rect height=\"2\" rx=\"0.5\" width=\"8\" x=\"1\" y=\"8\" />\n    <rect height=\"2\" rx=\"0.5\" width=\"10\" x=\"1\" y=\"12\" />\n    <path d=\"M15.99951,6H14.99634v7.5a.49378.49378,0,0,1-.49317.5h-.49633a.5.5,0,0,1-.5-.49951L13.50366,6H12.50049A.24984.24984,0,0,1,12.25,5.74823a.24439.24439,0,0,1,.07373-.175L14.0918,3.5564a.25007.25007,0,0,1,.3164,0l1.76807,2.01684a.24439.24439,0,0,1,.07373.175A.24984.24984,0,0,1,15.99951,6Z\" />\n  </svg>\n);\n\nexport const EXTERNAL = (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 18 18\" class={css}>\n    <title>External</title>\n    <path\n      class=\"fill\"\n      d=\"M12.5,13h-1a.5.5,0,0,0-.5.5V15H3V3h8V4.5a.5.5,0,0,0,.5.5h1a.5.5,0,0,0,.5-.5v-3a.5.5,0,0,0-.5-.5H1.5a.5.5,0,0,0-.5.5v15a.5.5,0,0,0,.5.5h11a.5.5,0,0,0,.5-.5v-3A.5.5,0,0,0,12.5,13Z\"\n    />\n    <path\n      class=\"fill\"\n      d=\"M17.9255,8.8275,14.666,5.1a.39352.39352,0,0,0-.2635-.1.4.4,0,0,0-.4.4V8H8.5a.5.5,0,0,0-.5.5v1a.5.5,0,0,0,.5.5H14v2.6a.4.4,0,0,0,.4.4.39352.39352,0,0,0,.2635-.1l3.262-3.7225A.25.25,0,0,0,17.9255,8.8275Z\"\n    />\n  </svg>\n);\n\nexport const SEARCH = (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 18 18\" class={css}>\n    <title>Search</title>\n    <rect id=\"Canvas\" fill=\"#ff13dc\" opacity=\"0\" width=\"18\" height=\"18\" />\n    <path\n      class=\"fill\"\n      d=\"M16.5865,15.107,12.7,11.2215A6.413,6.413,0,1,0,11.2215,12.7l3.886,3.886a1.05,1.05,0,0,0,1.479-1.479ZM3,7.5A4.5,4.5,0,1,1,7.5,12,4.5,4.5,0,0,1,3,7.5Z\"\n    />\n  </svg>\n);\n", "import type { ComponentChild } from \"preact\";\n\nimport { Dispatchable, useDispatchable } from \"@plangs/frontend/auxiliar/dispatchable\";\nimport { data, elem, elems } from \"@plangs/frontend/auxiliar/dom\";\nimport { ABC, BOOLEAN, CLOSE, DESELECT, FILTER_EDIT, MENU, MOON, RANKING, SUN } from \"@plangs/frontend/auxiliar/icons\";\nimport { tw } from \"@plangs/frontend/auxiliar/styles\";\nimport type { FacetsMainElement } from \"@plangs/frontend/facets/main\";\n\nimport { dataKey } from \"@plangs/server/elements\";\nimport type { IconButtonProps } from \"./icon-button\";\n\nexport type IconButtonState = ToggleLights | ToggleHamburguer | ToggleFacetsMenu | ToggleAllAny | ToggleClearFacets | ToggleGridOrder | undefined;\n\nexport function useIconButtonState({ action, disabled, initial }: IconButtonProps): IconButtonState {\n  if (action === \"lights\") return useDispatchable(() => ToggleLights.initial(disabled));\n  if (action === \"hamburger\") return useDispatchable(() => ToggleHamburguer.initial(disabled));\n  if (action === \"facets\") return useDispatchable(() => ToggleFacetsMenu.initial(disabled));\n  if (action === \"allAny\") return useDispatchable(() => ToggleAllAny.initial(initial, disabled));\n  if (action === \"clearFacets\") return useDispatchable(() => ToggleClearFacets.initial(disabled));\n  if (action === \"gridOrder\") return useDispatchable(() => ToggleGridOrder.initial(disabled));\n  console.error(`Unknown action: ${action}`);\n}\n\nabstract class IconButtonBaseState<T> extends Dispatchable<T & { disabled: boolean }> {\n  abstract doAction(): void;\n\n  /** Side effects handler, if any. */\n  abstract runEffects(): void;\n\n  abstract get icon(): ComponentChild;\n\n  get disabled(): boolean {\n    return this.data.disabled;\n  }\n\n  set disabled(value: boolean) {\n    this.data.disabled = value;\n  }\n\n  get value() {\n    const { disabled, ...data } = this.data;\n    return data;\n  }\n}\n\n/** State for a dark/ligh mode button */\nexport class ToggleLights extends IconButtonBaseState<{ mode: \"dark\" | \"light\" }> {\n  static initial(disabled = false) {\n    return new ToggleLights({ mode: localStorage.getItem(\"lightMode\") === \"light\" ? \"light\" : \"dark\", disabled });\n  }\n\n  get isDark(): boolean {\n    return this.data.mode === \"dark\";\n  }\n\n  override get icon() {\n    return this.isDark ? SUN : MOON;\n  }\n\n  override doAction() {\n    this.data.mode = this.isDark ? \"light\" : \"dark\";\n  }\n\n  override runEffects() {\n    document.body.classList.toggle(\"dark\", this.isDark);\n    localStorage.setItem(\"lightMode\", this.data.mode);\n  }\n}\n\n/** State for a \"hamburguer\" menu. */\nexport class ToggleHamburguer extends IconButtonBaseState<{ mode: \"show\" | \"hide\" }> {\n  static initial(disabled = false) {\n    return new ToggleHamburguer({ mode: localStorage.getItem(\"hamburguer\") === \"show\" ? \"show\" : \"hide\", disabled });\n  }\n\n  get hide(): boolean {\n    return this.data.mode === \"hide\";\n  }\n\n  override get icon() {\n    return this.hide ? MENU : CLOSE;\n  }\n\n  override doAction() {\n    this.data.mode = this.hide ? \"show\" : \"hide\";\n  }\n\n  override runEffects() {\n    elem(\"mainNav\")?.classList.toggle(\"hidden\", this.hide);\n    localStorage.setItem(\"hamburguer\", this.data.mode);\n  }\n}\n\n/** State for the facets menu. */\nexport class ToggleFacetsMenu extends IconButtonBaseState<{ mode: \"show\" | \"hide\" }> {\n  static initial(disabled = false) {\n    return new ToggleFacetsMenu({ mode: localStorage.getItem(\"facets\") === \"show\" ? \"show\" : \"hide\", disabled });\n  }\n\n  get show(): boolean {\n    return this.data.mode === \"show\";\n  }\n\n  override get icon() {\n    return (\n      <span\n        class={tw(\n          \"inline-block\",\n          \"mt-[6px] scale-85\",\n          this.show && \"stroke-[1px] stroke-foreground/50\",\n          this.show ? \"text-hiliteb\" : \"text-primary\",\n          // fmt.\n        )}>\n        {FILTER_EDIT}\n      </span>\n    );\n  }\n\n  override doAction() {\n    this.data.mode = this.show ? \"hide\" : \"show\";\n  }\n\n  override runEffects() {\n    const fm = elems(\"facetsMain\");\n    if (fm.length > 0) fm[0].classList.toggle(\"hidden\", !this.show);\n    localStorage.setItem(\"facets\", this.data.mode);\n  }\n}\n\n/** State for toggling between \"and\" and \"all\" modes. */\nexport class ToggleAllAny extends IconButtonBaseState<{ mode: \"all\" | \"any\" }> {\n  static initial(initial: string | undefined, disabled = false) {\n    return new ToggleAllAny({ mode: initial === \"all\" ? \"all\" : \"any\", disabled });\n  }\n\n  get mode(): \"all\" | \"any\" {\n    return this.data.mode;\n  }\n\n  override get icon() {\n    const disabled = this.data.disabled;\n\n    const shadeAll = disabled || this.mode === \"any\";\n    const shadeAny = disabled || this.mode === \"all\";\n\n    return (\n      <span class={tw(\"flex flex-row gap-1\", \"items-center\")}>\n        <span class={tw(shadeAll && \"opacity-50\", !disabled && \"group-hover:text-hiliteb\")}>All of</span>\n        <span class={tw(\"inline-block\", \"mt-[1px]\", \"scale-85\", this.mode === \"all\" && \"rotate-180\")}>{BOOLEAN}</span>\n        <span class={tw(shadeAny && \"opacity-50\", !disabled && \"group-hover:text-hiliteb\")}>Any of</span>\n      </span>\n    );\n  }\n\n  override doAction() {\n    this.data.mode = this.mode === \"all\" ? \"any\" : \"all\";\n  }\n\n  override runEffects() {\n    // nada.\n  }\n}\n\n/** State for clearing any selection from the facets menu. */\nexport class ToggleClearFacets extends IconButtonBaseState<{ mode: \"clearFacets\" | \"\" }> {\n  static initial(disabled = false) {\n    return new ToggleClearFacets({ disabled, mode: \"\" });\n  }\n\n  override get icon() {\n    return this.data.mode === \"clearFacets\" ? DESELECT : null;\n  }\n\n  override doAction() {\n    this.data.mode = \"\";\n  }\n\n  doToggleMode(mode: \"clearFacets\" | \"\") {\n    this.data.mode = mode;\n    this.dispatch();\n  }\n\n  override runEffects() {\n    for (const el of elems<FacetsMainElement>(\"facetsMain\")) el.state?.doResetAll();\n  }\n}\n\n/** State for toggling order of thumbnails between ranking and alphabetical. */\nexport class ToggleGridOrder extends IconButtonBaseState<{ mode: \"alpha\" | \"ranking\" }> {\n  static initial(disabled = false) {\n    return new ToggleGridOrder({ disabled, mode: \"alpha\" });\n  }\n\n  get mode(): \"alpha\" | \"ranking\" {\n    return this.data.mode;\n  }\n\n  override get icon() {\n    return this.mode === \"alpha\" ? ABC : RANKING;\n  }\n\n  override doAction() {\n    this.data.mode = this.mode === \"alpha\" ? \"ranking\" : \"alpha\";\n  }\n\n  /** Reorder the grid on dispatch. */\n  override runEffects() {\n    const grid = elem(\"vertexGrid\");\n    if (!grid) return;\n    const thumbns = [...elems(\"vertexThumbn\")].sort(CMP[this.mode]);\n    // If they are already in the parent element, re-appending just reorders the element.\n    for (const thumb of thumbns) {\n      // Don't hide for now.\n      // thumb.dataset.hideRanking = this.mode === \"ranking\" ? \"0\" : \"1\";\n      grid.appendChild(thumb);\n    }\n  }\n}\n\n// Ensure languages without a ranking are placed last.\nconst RANKED_LAST = Number.MAX_SAFE_INTEGER;\n\nconst getRank = (el: HTMLElement) => {\n  const ranking = data(el, \"vertex-ranking\");\n  console.log(ranking);\n  return ranking ? Number.parseInt(ranking) : RANKED_LAST;\n};\n\nconst getKey = (el: HTMLElement) => el.dataset.vertexKey ?? \"\";\n\n// Ordering criteria for the sort function.\nconst CMP = {\n  ranking: (elA: HTMLElement, elB: HTMLElement) => getRank(elA) - getRank(elB),\n  alpha: (elA: HTMLElement, elB: HTMLElement) => getKey(elA).localeCompare(getKey(elB)),\n} as const;\n", "import type { Ref } from \"preact\";\nimport { useEffect, useRef } from \"preact/hooks\";\n\nimport { onClickOnEnter } from \"@plangs/frontend/auxiliar/dom\";\nimport { customEvent, send } from \"@plangs/frontend/auxiliar/events\";\nimport { HOVER_SVG, tw } from \"@plangs/frontend/auxiliar/styles\";\n\nimport { useRootState } from \"@plangs/frontend/auxiliar/dispatchable\";\nimport { useIconButtonState } from \"./state\";\n\nexport type IconButtonProps = {\n  action: \"facets\" | \"clearFacets\" | \"hamburger\" | \"lights\" | \"allAny\" | \"gridOrder\";\n  class?: string;\n  disabled?: boolean;\n  initial?: string;\n};\n\nexport function IconButton({ action, disabled, initial, class: cssClass }: IconButtonProps) {\n  const state = useIconButtonState({ action, disabled, initial });\n  const self = useRootState(state);\n\n  // biome-ignore lint/correctness/useExhaustiveDependencies: state is not a dependency since it is a dispatchable.\n  useEffect(() => {\n    if (!state) return;\n\n    const newval = disabled === undefined ? false : disabled;\n    if (newval !== state.disabled) {\n      state.disabled = newval;\n      state.dispatch();\n    }\n  }, [disabled]);\n\n  const toggle = () => {\n    if (!state) return;\n\n    state.doAction();\n    state.runEffects();\n    state.dispatch();\n\n    send(self.current, customEvent(\"icon-button\", state.value));\n  };\n\n  return (\n    <div\n      ref={self as Ref<HTMLDivElement>}\n      tabIndex={disabled ? undefined : 0}\n      {...onClickOnEnter(toggle)}\n      class={tw(\"group\", \"cursor-pointer\", !disabled && HOVER_SVG, cssClass)}>\n      {state?.icon}\n    </div>\n  );\n}\n", "import { render } from \"preact\";\n\nimport { elems } from \"@plangs/frontend/auxiliar/dom\";\nimport { classesExcept, tw } from \"@plangs/frontend/auxiliar/styles\";\nimport { type CLKey, cssClass } from \"@plangs/server/elements\";\n\nimport { IconButton, type IconButtonProps } from \"./icon-button\";\n\nconst CL: CLKey = \"iconButton\";\n\n/** Server side container for the Component. */\nexport function iconButton(action: IconButtonProps[\"action\"]) {\n  return <div id={`icon-button-${action}`} data-action={action} class={tw(cssClass(CL), \"text-primary\")} />;\n}\n\n/** Find all component containers and render them. */\nexport function activateIconButtons() {\n  for (const elem of elems(\"iconButton\")) {\n    if (elem.dataset.action) {\n      const props: IconButtonProps = {\n        action: elem.dataset.action as IconButtonProps[\"action\"],\n        class: classesExcept(elem, cssClass(\"iconButton\")),\n      };\n      render(<IconButton {...props} />, elem);\n    } else {\n      console.error(\"Missing prop for IconButton component.\");\n    }\n  }\n}\n", "import { ret } from \"@plangs/auxiliar/misc\";\nimport { BORDER, tw } from \"@plangs/frontend/auxiliar/styles\";\nimport type { VPlang } from \"@plangs/plangs/graph\";\nimport type { TAB } from \"@plangs/server/components/layout\";\nimport type { ComponentChildren } from \"preact\";\n\nexport type VertexInfoProps = {\n  vertex?: VPlang;\n  open?: boolean;\n  tab?: TAB;\n};\n\n/** Display Vertex. */\nexport function VertexInfo({ vertex, open, tab }: VertexInfoProps) {\n  const forGrid = tab === \"plangs\";\n  return (\n    <div\n      class={tw(\n        \"w-full overflow-y-scroll\",\n        \"px-2 pt-2 sm:p-4\",\n        !forGrid && \"-mx-4\", // Compensate for padding so it aligns with the rest of the content.\n        \"prose prose-green dark:prose-invert\",\n        \"max-w-[unset]\",\n        forGrid && \"bg-linear-to-b to-secondary/50\",\n        tw(BORDER, forGrid && \"border-b-1\"),\n      )}>\n      <h2 class={tw(forGrid && \"inline sm:block\")}>\n        <a class=\"text-foreground decoration-1 decoration-dotted\" href={`/${vertex?.plainKey}`}>\n          {vertex?.name ?? \"\"}\n        </a>\n      </h2>\n      {vertex && (\n        <>\n          <span class={tw(forGrid ? \"dash mx-2 inline-block sm:hidden\" : \"hidden\")}>&#8212;</span>\n          <div class={tw(forGrid && \"hidden sm:block\")}>\n            {vertex.created.value && <Pill children={`Appeared ${vertex.created.year}`} />}\n            {ret(vertex.releases.last, rel => rel && <Pill children={`Last Rel ${rel.date ?? rel.version}`} />)}\n            {vertex.isTranspiler && <Pill children=\"Transpiler\" />}\n            {vertex.isPopular && <Pill children=\"Popular\" />}\n          </div>\n          <p class={tw(forGrid && \"inline sm:block\")}>{vertex.description || \"...\"}</p>\n          <details class={tw(forGrid && \"hidden sm:block\", \"pb-4\")} open={open}>\n            <summary class=\"cursor-pointer text-xl\">Details</summary>\n            {relations(vertex).map(([title, vertices]) => (\n              <div key={title}>\n                <h3 class=\"mt-4 text-xl\">{title}</h3>\n                {vertices.map(({ name, key }) => (\n                  <Pill key={key} children={name} />\n                ))}\n              </div>\n            ))}\n          </details>\n        </>\n      )}\n    </div>\n  );\n}\n\nfunction Pill({ children }: { children: ComponentChildren }) {\n  return <span class={tw(\"inline-block\", \"mr-2 mb-2 px-1\", \"border-2 border-secondary\", \"bg-secondary/50\")}>{children}</span>;\n}\n\nfunction relations(pl: VPlang) {\n  const all = [\n    [\"Type Systems\", pl.relTypeSystems.values],\n    [\"Platforms\", pl.relPlatforms.values],\n\n    [\"Influenced By\", pl.relInfluencedBy.values],\n    [\"Influenced\", pl.relInfluenced.values],\n    [\"Dialect Of\", pl.relDialectOf.values],\n    [\"Implements\", pl.relImplements.values],\n    [\"Compiles To\", pl.relCompilesTo.values],\n\n    [\"Licenses\", pl.relLicenses.values],\n\n    [\"Tags\", pl.relTags.values],\n    [\"Extensions\", pl.extensions.map(name => ({ key: name, name, kind: \"ext\" })).existing],\n  ] as const;\n\n  return all.filter(([_, vertices]) => vertices.length > 0);\n}\n\nexport const EVENTS = {} as const;\n", "import { render } from \"preact\";\n\nimport { elems } from \"@plangs/frontend/auxiliar/dom\";\nimport type { TAB } from \"@plangs/server/components/layout\";\nimport { cssClass } from \"@plangs/server/elements\";\n\nimport { VertexInfo, type VertexInfoProps } from \"./vertex-info\";\n\nexport function vertexInfo({ tab, open }: { tab: TAB; open: boolean }) {\n  return <div class={cssClass(\"vertexInfo\")} data-tab={tab} data-open={open} />;\n}\n\nexport function renderVertexInfo({ vertex, tab, open }: VertexInfoProps) {\n  if (!vertex || !tab) {\n    console.log(\"Missing props to render vertexInfo.\", { vertex, tab });\n    return;\n  }\n  for (const elem of elems<HTMLDivElement>(\"vertexInfo\")) {\n    render(<VertexInfo vertex={vertex} tab={tab} open={open} />, elem);\n  }\n}\n", "import type { Value } from \"./value\";\n\nexport type Predicate<T> = (v: T) => boolean;\n\nexport type EncodedFilter<T> = { mode: \"all\" | \"any\"; values: T[] };\n\n/**\n * A filter that can match any or all of the elements against a predicate.\n */\nexport class Filter<T> implements Value<Filter<T>> {\n  constructor(\n    public mode: \"all\" | \"any\" = \"any\",\n    public readonly values: Set<T> = new Set(),\n  ) {}\n\n  get isEmpty(): boolean {\n    return this.values.size === 0;\n  }\n\n  add(...values: T[]): this {\n    for (const val of values) this.values.add(val);\n    return this;\n  }\n\n  delete(value: T): boolean {\n    return this.values.delete(value);\n  }\n\n  has(value: T): boolean {\n    return this.values.has(value);\n  }\n\n  clear() {\n    this.values.clear();\n  }\n\n  get size(): number {\n    return this.values.size;\n  }\n\n  matches(predicate: Predicate<T>): boolean {\n    return this.mode === \"all\" ? this.all(predicate) : this.any(predicate);\n  }\n\n  all(predicate: Predicate<T>): boolean {\n    for (const v of this.values) if (!predicate(v)) return false;\n    return true;\n  }\n\n  any(predicate: Predicate<T>): boolean {\n    for (const v of this.values) if (predicate(v)) return true;\n    return false;\n  }\n\n  get value() {\n    return this;\n  }\n\n  get isPresent(): boolean {\n    return !this.isEmpty;\n  }\n\n  equalTo(other?: Filter<T>): boolean {\n    if (!other) return false;\n\n    if (!(other instanceof Filter)) return false;\n    if (this.mode !== other.mode) return false;\n    if (this.values.size !== other.values.size) return false;\n    for (const v of this.values) if (!other.values.has(v)) return false;\n    return true;\n  }\n\n  clone(): this {\n    return new Filter(this.mode, new Set(this.values)) as this;\n  }\n\n  toJSON(): EncodedFilter<T> {\n    return { mode: this.mode, values: [...this.values] };\n  }\n\n  serializable() {\n    return this.isEmpty ? undefined : this.toJSON();\n  }\n\n  // biome-ignore lint/suspicious/noExplicitAny: we can't know for sure the type of the values here.\n  static isSerialized(val: unknown): val is { mode: \"all\" | \"any\"; values: any[] } {\n    return (\n      !!val && typeof val === \"object\" && \"mode\" in val && (val.mode === \"all\" || val.mode === \"any\") && \"values\" in val && Array.isArray(val.values)\n    );\n  }\n}\n\n// biome-ignore lint/suspicious/noExplicitAny: there's no _precise_ way to know the type of the values here.\nexport function isEncodedFilter(value: unknown): value is EncodedFilter<any> {\n  return typeof value === \"object\" && value !== null && value !== undefined && \"mode\" in value && \"values\" in value && Array.isArray(value.values);\n}\n", "import { Filter } from \"./filters\";\n\n/**\n * The objective of this interface is to simplify checking if a value is present (aka \"non blank\").\n * This avoids the need to sprinkle runtime type checks all over the place.\n *\n * This is useful in places were we don't want to serialize empty values,\n * if we want to check there are any present values on a form, etc.\n *\n * Also we want to avoid serializing values that are not \"present\".\n * This is because for things like URL encoding, we don't want to have a lot of keys pointing to blank values.\n */\nexport interface Value<T> {\n  // biome-ignore lint/suspicious/noExplicitAny: without a generic value type the wrappers are useless.\n  readonly value: any;\n\n  /**\n   * \"Presence\" implies that the value is not blank or empty:\n   * * null, undefined or empty string are considered \"blank\", and hence not present.\n   * * 0 is present, even though JavaScript considers it falsy.\n   * * Containers of any kind (Set, Map, Array) are present if they have at least one element.\n   */\n  get isPresent(): boolean;\n\n  /** Compare values. */\n  equalTo(other?: AnyValue): boolean;\n\n  /**\n   * This is meant to return something that can be easilty serialized.\n   * For instance if the value is a Set, it should return an array (since JSON doesn't support Sets).\n   * * The result should contain enough information to reconstruct the value.\n   * * Blank / non present values should be omitted.\n   */\n  // biome-ignore lint/suspicious/noExplicitAny: we want to be flexible here.\n  serializable(): any;\n}\n\n// biome-ignore lint/suspicious/noExplicitAny: Allow for flexibility in the type of the value.\nexport type AnyValue = Value<any>;\n\nexport abstract class ValBase<T> implements Value<T> {\n  constructor(readonly value: T) {}\n\n  get isNil(): boolean {\n    return this.value === undefined || this.value === null;\n  }\n\n  get isPresent(): boolean {\n    return !this.isNil;\n  }\n\n  abstract equalTo(other?: AnyValue): boolean;\n\n  // biome-ignore lint/suspicious/noExplicitAny: We can't be more specific here.\n  serializable(): any {\n    return this.isPresent ? this.value : undefined;\n  }\n}\n\nexport class ValNil extends ValBase<null | undefined> {\n  constructor(value: null | undefined = undefined) {\n    super(value);\n  }\n\n  equalTo(other?: AnyValue): boolean {\n    return other instanceof ValNil;\n  }\n}\n\nexport class ValNumber extends ValBase<number> {\n  equalTo(other?: AnyValue): boolean {\n    return other instanceof ValNumber && this.value === other.value;\n  }\n}\n\nexport class ValBool extends ValBase<boolean> {\n  override get isPresent(): boolean {\n    return !this.isNil && this.value === true;\n  }\n\n  equalTo(other?: AnyValue): boolean {\n    return other instanceof ValBool && this.value === other.value;\n  }\n}\n\nexport class ValString extends ValBase<string> {\n  override get isPresent(): boolean {\n    return !this.isNil && this.value.length > 0 && !/^\\s*$/.test(this.value);\n  }\n\n  equalTo(other?: AnyValue): boolean {\n    return other instanceof ValString && this.value === other.value;\n  }\n}\n\nexport class ValSet<T> extends ValBase<Set<T>> {\n  override get isPresent(): boolean {\n    return !this.isNil && this.value.size > 0;\n  }\n\n  equalTo(other?: AnyValue): boolean {\n    if (!(other instanceof ValSet)) return false;\n    if (this.value === other.value) return true;\n    if (this.value.size !== other.value.size) return false;\n    for (const v of this.value) if (!other.value.has(v)) return false;\n    return true;\n  }\n\n  override serializable() {\n    return this.isPresent ? [\"Set\", [...this.value]] : undefined;\n  }\n\n  // biome-ignore lint/suspicious/noExplicitAny: we cannot know for sure the type of the values.\n  static isSerialized(val: unknown): val is [string, any[]] {\n    return Array.isArray(val) && val[0] === \"Set\" && Array.isArray(val[1]);\n  }\n}\n\nconst EMPTY_REGEX = /(?:)/;\n\nexport class ValRegExp extends ValBase<RegExp> {\n  override get isPresent(): boolean {\n    return !this.isNil && this.value.source !== EMPTY_REGEX.source;\n  }\n\n  equalTo(other?: AnyValue): boolean {\n    return other instanceof ValRegExp && this.value.source === other.value.source;\n  }\n\n  override serializable() {\n    const { value } = this;\n    return this.isPresent ? (value.flags ? [\"RegExp\", value.source, value.flags] : [\"RegExp\", value.source]) : undefined;\n  }\n\n  static isSerialized(val: unknown): val is [string, string, string?] {\n    return Array.isArray(val) && val[0] === \"RegExp\" && typeof val[1] === \"string\" && (val[2] === undefined || typeof val[2] === \"string\");\n  }\n}\n\n/** Matches the serialized \"shape\" and returns a deserialized value, or undefined if it can't recognize the shape. */\nexport function deserializeValue(val: unknown): AnyValue | undefined {\n  if (val === undefined || val === null) return new ValNil(val);\n\n  switch (typeof val) {\n    case \"number\":\n      return new ValNumber(val);\n    case \"boolean\":\n      return new ValBool(val);\n    case \"string\":\n      return new ValString(val);\n  }\n\n  if (ValRegExp.isSerialized(val)) return new ValRegExp(new RegExp(val[1], val[2]));\n  if (ValSet.isSerialized(val)) return new ValSet(new Set(val[1]));\n  if (Filter.isSerialized(val)) return new Filter(val.mode, new Set(val.values));\n\n  console.log(\"Attempt to deserialize an unrecognized value shape:\", val);\n}\n", "import type { TAB } from \"@plangs/server/components/layout\";\n\nexport const storageKey = (tab: TAB, key: \"inputs\" | \"lastGroup\") => `${tab}-${key}`;\n\n// biome-ignore lint/suspicious/noExplicitAny: JSON can serialize any data.\nexport function updateLocalStorage(tab: TAB, key: \"inputs\" | \"lastGroup\", data: any): void {\n  localStorage.setItem(storageKey(tab, key), JSON.stringify(data));\n}\n\n// biome-ignore lint/suspicious/noExplicitAny: JSON can deserialize any data.\nexport function loadLocalStorage(tab: TAB, key: \"inputs\" | \"lastGroup\"): any {\n  const json = localStorage.getItem(storageKey(tab, key));\n  if (!json) return undefined;\n  try {\n    return JSON.parse(json);\n  } catch (e) {\n    console.warn(\"Failed to parse localStorage filters.\", json);\n    localStorage.removeItem(storageKey(tab, key));\n  }\n}\n", "/** Two dimensional Map. */\nexport class Map2<K1, K2, V> {\n  #map = new Map<K1, Map<K2, V>>();\n\n  has(k1: K1, k2: K2): boolean {\n    return this.#map.get(k1)?.has(k2) ?? false;\n  }\n\n  set(k1: K1, k2: K2, v: V): this {\n    let m2 = this.#map.get(k1);\n    if (!m2) {\n      m2 = new Map();\n      this.#map.set(k1, m2);\n    }\n    m2.set(k2, v);\n    return this;\n  }\n\n  getOrSet(k1: K1, k2: K2, whenMissing: () => V): V {\n    let v = this.get(k1, k2);\n    if (v === undefined) this.set(k1, k2, (v = whenMissing()));\n    return v;\n  }\n\n  delete(k1: K1, k2: K2): boolean {\n    return this.#map.get(k1)?.delete(k2) ?? false;\n  }\n\n  // Delete all keys [k1, *] from the map.\n  delete1(k1: K1): boolean {\n    const map = this.#map.get(k1);\n    if (map) {\n      this.#map.delete(k1);\n      return map.size > 0;\n    }\n    return false;\n  }\n\n  clear() {\n    this.#map.clear();\n  }\n\n  get(k1: K1, k2: K2): V | undefined {\n    return this.#map.get(k1)?.get(k2);\n  }\n\n  getMap(k1: K1): Map<K2, V> | undefined {\n    return this.#map.get(k1);\n  }\n\n  /** Get a consolidated map of all keys in the second dimension. */\n  getMap2(): Map<K2, V> {\n    const res = new Map<K2, V>();\n    for (const [_k1, map2] of this.#map) {\n      for (const [k2, v] of map2) res.set(k2, v);\n    }\n    return res;\n  }\n\n  get size(): number {\n    let size = 0;\n    for (const map of this.#map.values()) size += map.size;\n    return size;\n  }\n\n  get isEmpty(): boolean {\n    for (const map of this.#map.values()) if (map.size > 0) return false;\n    return true;\n  }\n\n  /** Returns the size of the second dimension for a given key in the first dimension. */\n  size2(k1: K1): number {\n    return this.#map.get(k1)?.size ?? 0;\n  }\n\n  /** Returns the keys in the first dimension. */\n  keys(): K1[] {\n    return [...this.#map.keys()].filter(k1 => (this.#map.get(k1)?.size ?? 0) > 0);\n  }\n\n  /** Return all the keys from a first dimension. */\n  keys2(k1: K1): K2[] {\n    const res: K2[] = [];\n    const m = this.#map.get(k1);\n    if (m) for (const k2 of m.keys()) res.push(k2);\n    return res;\n  }\n\n  entries(): [K1, Map<K2, V>][] {\n    return [...this.#map.entries()].filter(([_k1, map2]) => map2.size > 0);\n  }\n\n  flatEntries(): [K1, K2, V][] {\n    const results: [K1, K2, V][] = [];\n    for (const [k1, map2] of this.#map) {\n      for (const [k2, v] of map2) results.push([k1, k2, v]);\n    }\n    return results;\n  }\n\n  values(): V[] {\n    return [...this.#map.values()].flatMap(map => [...map.values()]);\n  }\n\n  values2(k1: K1): V[] {\n    const m = this.#map.get(k1);\n    return m ? [...m.values()] : [];\n  }\n\n  /** Get all values going from first dimension, them map them and return the non-falsey values. */\n  values2Mapped<T>(k1: K1, mapper: (val: V) => T): T[] {\n    return this.values2(k1)\n      .map(mapper)\n      .filter(v => v);\n  }\n\n  toString(): string {\n    const entries = [...this.flatEntries()].map(([k1, k2, v]) => `(${k1}, ${k2}) => ${v}`);\n    return `Map2(size: ${this.size})${entries.length > 0 ? ` { ${entries.join(\", \")} }` : \"\"}`;\n  }\n}\n\n// biome-ignore lint/suspicious/noExplicitAny: Any object key is valid.\ntype AnyKey = keyof any;\n", "// biome-ignore lint/suspicious/noExplicitAny: We want to debounce any function.\ntype AnyFunc = (...args: any[]) => any;\n\nexport function debounce<T extends AnyFunc>(callback: T, millies: number): (...args: Parameters<T>) => void {\n  let timeout: Timer | undefined;\n  return (...args: Parameters<AnyFunc>) => {\n    if (timeout) clearTimeout(timeout);\n    timeout = setTimeout(() => callback(...args), millies);\n  };\n}\n", "import { debounce } from \"@plangs/auxiliar/debounce\";\nimport { elems, minWidthBP } from \"@plangs/frontend/auxiliar/dom\";\nimport type { VPlangKey } from \"@plangs/plangs/graph/generated\";\n\n/** A static thumbnail grid will be render server side, we just need to show or hide each element.  */\nexport function doUpdateThumbns(vertexKeys: Set<string>) {\n  for (const div of elems(\"vertexThumbn\")) {\n    const plKey = div.dataset.vertexKey as VPlangKey;\n    const visible = vertexKeys.has(plKey);\n    div.classList.toggle(\"hidden\", !visible);\n  }\n  adjustGrid();\n}\n\nexport const updateThumbns = debounce(doUpdateThumbns, 30);\n\nconst CSS_COLS_KEY = \"grid-template-columns\";\n\n/** Adjusts the number of columns in the grid to stop the gap from growing too large. */\nfunction doAdjustGrid() {\n  // const grid = ... // TODO: query the grid container.\n  const widthRow = 0; // size(grid).width;\n  const widthThumb = 0; // TODO: query the first visible thumbnail's width.\n  const visibleThumbs = 0; // TODO: query the number of visible thumbnails.\n  const numCols = Math.min(Math.floor(widthRow / widthThumb), visibleThumbs);\n  const maxCols = Math.floor(widthRow / (5 * 16));\n\n  if (numCols < maxCols && visibleThumbs < maxCols && minWidthBP(\"48rem\")) {\n    // grid.style.setProperty(CSS_COLS_KEY, `repeat(${maxCols}, minmax(8rem, 0fr))`);\n  } else {\n    // grid.style.removeProperty(CSS_COLS_KEY);\n  }\n}\n\n// TODO: register this on start.\n// window.addEventListener(\"resize\", debouncedUpdatePlangs);\nexport const adjustGrid = debounce(doAdjustGrid, 30);\n", "import type { FunctionComponent } from \"preact\";\n\nimport { Map2 } from \"@plangs/auxiliar/map2\";\nimport { type AnyValue, deserializeValue } from \"@plangs/auxiliar/value\";\nimport { Dispatchable } from \"@plangs/frontend/auxiliar/dispatchable\";\nimport { $ } from \"@plangs/frontend/auxiliar/dom\";\nimport { FragmentTracker } from \"@plangs/frontend/auxiliar/fragment\";\nimport { updateLocalStorage } from \"@plangs/frontend/auxiliar/storage\";\nimport type { ToggleClearFacets } from \"@plangs/frontend/components/icon-button/state\";\nimport type { PlangsGraph } from \"@plangs/plangs/graph\";\nimport type { TAB } from \"@plangs/server/components/layout\";\n\nimport { debounce } from \"@plangs/auxiliar/debounce\";\nimport { updateThumbns } from \"./grid_util\";\n\nexport type SerializedFacets<FacetKey extends string> = Partial<Record<FacetKey, ReturnType<AnyValue[\"serializable\"]>>>;\n\n/** State for the facets browser, extended by each specific Facet Browser for each Vertex. */\nexport abstract class FacetsMainState<GroupKey extends string, FacetKey extends string> extends Dispatchable<{\n  pg: PlangsGraph;\n  currentGroupKey: GroupKey;\n  values: Map2<GroupKey, FacetKey, AnyValue>;\n}> {\n  /** Attempt to reconstruct the state from a serialized value (ex: a value coming from the URL fragment). */\n  // biome-ignore lint/suspicious/noExplicitAny: this data is the result of a de/serialization process and is not typed.\n  static deserialize<GK extends string, FK extends string>(groupsByFacetKey: Map<FK, GK>, genericData: any): Map2<GK, FK, AnyValue> {\n    const result = new Map2<GK, FK, AnyValue>();\n    if (!genericData) return result;\n    for (const [facetKey, rawValue] of Object.entries(genericData)) {\n      const groupKey = groupsByFacetKey.get(facetKey as FK);\n      if (!groupKey) {\n        console.error(\"missing group for facet\", facetKey);\n        continue;\n      }\n      const value = deserializeValue(rawValue);\n      if (value?.isPresent) {\n        result.set(groupKey, facetKey as FK, value);\n      } else {\n        console.error(\"failed to deserialize value\", facetKey, rawValue);\n      }\n    }\n    return result;\n  }\n\n  doSetCurrentGroup(groupKey: GroupKey): void {\n    this.data.currentGroupKey = groupKey;\n    updateLocalStorage(this.tab, \"lastGroup\", groupKey);\n    this.dispatch();\n  }\n\n  /** Removes any and all values for the given group.  */\n  doResetGroup(groupKey: GroupKey): void {\n    this.values.delete1(groupKey);\n    this.dispatch();\n  }\n\n  /** Removes any and all values for the given group.  */\n  // biome-ignore lint/suspicious/noExplicitAny: coming from deserialize we'll have to deal with it.\n  doResetAll(values?: any): void {\n    if (values) {\n      this.data.values = FacetsMainState.deserialize<GroupKey, FacetKey>(this.gkByFk, values);\n    } else {\n      this.values.clear();\n    }\n    this.doSetCurrentGroup(this.nav.default);\n  }\n\n  /** This dispatches since we want to change the indicator of active state. */\n  doSetValue(groupKey: GroupKey, facetKey: FacetKey, value: AnyValue): \"changed\" | \"unchanged\" {\n    const { values } = this.data;\n    let result: \"changed\" | \"unchanged\";\n    if (value.isPresent) {\n      if (!value.equalTo(values.get(groupKey, facetKey))) {\n        values.set(groupKey, facetKey, value);\n        result = \"changed\";\n      } else {\n        result = \"unchanged\";\n      }\n    } else {\n      result = values.delete(groupKey, facetKey) ? \"changed\" : \"unchanged\";\n    }\n    this.dispatch();\n    return result;\n  }\n\n  /** Queries */\n\n  get pg(): PlangsGraph {\n    return this.data.pg;\n  }\n\n  get values() {\n    return this.data.values;\n  }\n\n  get serialized(): SerializedFacets<FacetKey> {\n    const data: SerializedFacets<FacetKey> = {};\n    for (const [_, facetKey, value] of this.values.flatEntries()) {\n      if (value.isPresent) data[facetKey] = value.serializable();\n    }\n    return data;\n  }\n\n  get currentGroupKey(): GroupKey {\n    return this.data.currentGroupKey;\n  }\n\n  groupHasValues(groupKey: GroupKey): boolean {\n    for (const v of this.values.getMap(groupKey)?.values() ?? []) {\n      if (v.isPresent) return true;\n    }\n    return false;\n  }\n\n  groupTitle(key: GroupKey) {\n    return this.groupsConfig.get(key)?.title ?? key;\n  }\n\n  /** Helpers */\n\n  /**\n   * Run any side effects without dispatching.\n   * Useful for instance on start, for instance: where we don't want to dispatch\n   * (hence render twice) but we do want to setup a clean state.\n   */\n  runEffects(persist: \"persist\" | \"\" = \"\"): this {\n    if (persist === \"persist\") {\n      const data = this.serialized;\n      this.pushState(data);\n      updateLocalStorage(this.tab, \"inputs\", data);\n    }\n    updateThumbns(this.results);\n    this.updateClearFacets();\n    return this;\n  }\n\n  /** Update the clear facets button on the toolbar. */\n  private updateClearFacets(): this {\n    const clearAll = $<HTMLElement & { state?: ToggleClearFacets }>(\"#icon-button-clearFacets\");\n    if (!clearAll?.state) return this;\n    clearAll.state.doToggleMode(this.values.isEmpty ? \"\" : \"clearFacets\");\n    return this;\n  }\n\n  /** Push state to the history, but debounced. */\n  private pushState = debounce(\n    ((data: typeof this.serialized) => {\n      window.fragment.pushState(FragmentTracker.serialize(data));\n    }).bind(this),\n    50,\n  );\n\n  override dispatch(): this {\n    try {\n      super.dispatch();\n      this.runEffects(\"persist\");\n    } catch (err) {\n      console.error(err);\n    }\n    return this;\n  }\n\n  /** Abstract Methods. */\n\n  /** Tab displaying the filters. */\n  abstract readonly tab: TAB;\n\n  /** Navigation configuration. */\n  abstract readonly nav: { groupKeys: GroupKey[][]; default: GroupKey };\n\n  /** Which group a facet key belongs to. */\n  abstract readonly gkByFk: Map<FacetKey, GroupKey>;\n\n  /** Configuration of the groups. */\n  abstract readonly groupsConfig: Map<GroupKey, { title: string }>;\n\n  /** The component that defines the content of a facet group. */\n  abstract readonly groupsComponent: FunctionComponent<{ currentFacetGroup: string }>;\n\n  /** A set of vertex keys that are the result of applying the filters. */\n  abstract get results(): Set<string>;\n}\n", "import type { Ref } from \"preact\";\nimport { useContext, useRef } from \"preact/hooks\";\n\nimport { type AnyValue, ValBool } from \"@plangs/auxiliar/value\";\nimport { onClickOnEnter } from \"@plangs/frontend/auxiliar/dom\";\nimport { handler } from \"@plangs/frontend/auxiliar/events\";\nimport { tw } from \"@plangs/frontend/auxiliar/styles\";\nimport { type AnyFacetsMainState, FacetsMainContext } from \"@plangs/frontend/facets/main/use_state\";\n\nexport type FacetBoolMapper = (checked: boolean) => AnyValue;\n\nexport type FacetBoolProps<GroupKey, FacetKey> = {\n  groupKey: GroupKey;\n  facetKey: FacetKey;\n  label: string;\n  valueMapper?: FacetBoolMapper;\n};\n\nexport function FacetBool<GroupKey extends string, FacetKey extends string>({\n  groupKey,\n  facetKey,\n  label,\n  valueMapper = (checked: boolean) => new ValBool(checked),\n}: FacetBoolProps<GroupKey, FacetKey>) {\n  const input = useRef<HTMLInputElement>();\n  const main = useContext(FacetsMainContext) as AnyFacetsMainState; // It exists, since it spawned this component.\n\n  const toggle = handler((checkbox: HTMLInputElement) => {\n    main.doSetValue(groupKey, facetKey, valueMapper(checkbox.checked));\n  });\n\n  return (\n    <label for={facetKey} class={tw(\"block\", \"px-2\")}>\n      <input\n        id={facetKey}\n        name={facetKey}\n        type=\"checkbox\"\n        class={tw(\"-mt-1\")}\n        placeholder={label}\n        {...onClickOnEnter(toggle)}\n        checked={!!main.values.get(groupKey, facetKey)?.isPresent}\n        ref={input as Ref<HTMLInputElement>}\n      />\n      <span class=\"ml-2\">{label}</span>\n    </label>\n  );\n}\n", "import { useContext } from \"preact/hooks\";\n\nimport { debounce } from \"@plangs/auxiliar/debounce\";\nimport { ValString } from \"@plangs/auxiliar/value\";\nimport { handler } from \"@plangs/frontend/auxiliar/events\";\nimport { INPUT, tw } from \"@plangs/frontend/auxiliar/styles\";\nimport { type AnyFacetsMainState, FacetsMainContext } from \"@plangs/frontend/facets/main/use_state\";\n\nexport function FacetText<GroupKey extends string, FacetKey extends string>({\n  groupKey,\n  facetKey,\n  label,\n}: { groupKey: GroupKey; facetKey: FacetKey; label: string }) {\n  const main = useContext(FacetsMainContext) as AnyFacetsMainState; // It exists, since it spawned this component.\n  const onInput = debounce(\n    handler((input: HTMLInputElement) => {\n      main.doSetValue(groupKey, facetKey, new ValString(input.value.toLowerCase()));\n    }),\n    50,\n  );\n  const current = main.values.get(groupKey, facetKey)?.value ?? \"\";\n  return <input type=\"search\" onInput={onInput} placeholder={label} class={tw(\"w-full\", INPUT)} value={current} />;\n}\n", "import { Filter } from \"@plangs/auxiliar/filters\";\nimport { Dispatchable } from \"@plangs/frontend/auxiliar/dispatchable\";\nimport type { AnyFacetsMainState } from \"@plangs/frontend/facets/main/use_state\";\n\ntype Val = string | number | boolean;\n\n/** NOTE: we don't need to dispatch when calling actions of the main state. */\nexport class FacetMultiState<GroupKey extends string, FacetKey extends string> extends Dispatchable<{\n  groupKey: GroupKey;\n  facetKey: FacetKey;\n  main: AnyFacetsMainState;\n}> {\n  /** Actions */\n\n  doSetValue(val: Filter<Val>): \"changed\" | \"unchanged\" {\n    const { main, data } = this;\n    return main.doSetValue(data.groupKey, data.facetKey, val);\n  }\n\n  doAdd(val: Val): boolean {\n    if (!val) return false;\n    const { value } = this;\n    if (value.has(val)) return false;\n    value.add(val);\n    return this.doSetValue(value) === \"changed\";\n  }\n\n  doRemove(val: string | undefined): boolean {\n    if (!val) return false;\n    const { value } = this;\n    if (!value.has(val)) return false;\n    value.delete(val);\n    return this.doSetValue(value) === \"changed\";\n  }\n\n  doSetMode(mode: \"all\" | \"any\"): void {\n    const { value } = this;\n    if (value.mode === mode) return;\n    this.value.mode = mode === \"all\" ? \"all\" : \"any\";\n    this.doSetValue(value);\n  }\n\n  /** Queries */\n\n  get main() {\n    return this.data.main;\n  }\n\n  get value() {\n    const { main, groupKey, facetKey } = this.data;\n    return main.values.getOrSet(groupKey, facetKey, () => new Filter(\"any\")) as Filter<Val>;\n  }\n}\n", "import type { Ref } from \"preact\";\nimport { useContext, useEffect, useRef } from \"preact/hooks\";\n\nimport { debounce } from \"@plangs/auxiliar/debounce\";\nimport { useDispatchable } from \"@plangs/frontend/auxiliar/dispatchable\";\nimport { onClickOnEnter } from \"@plangs/frontend/auxiliar/dom\";\nimport { handler, on } from \"@plangs/frontend/auxiliar/events\";\nimport { CLOSE } from \"@plangs/frontend/auxiliar/icons\";\nimport { HOVER, INPUT, tw } from \"@plangs/frontend/auxiliar/styles\";\nimport { IconButton } from \"@plangs/frontend/components/icon-button/icon-button\";\nimport { type AnyFacetsMainState, FacetsMainContext } from \"@plangs/frontend/facets/main/use_state\";\n\nimport { FacetMultiState } from \"./state\";\n\nexport function FacetMulti<GroupKey extends string, FacetKey extends string>({\n  active,\n  facetKey,\n  groupKey,\n  label,\n}: { active: boolean; facetKey: FacetKey; groupKey: GroupKey; label: string }) {\n  const self = useRef<HTMLDivElement>(); // We perform various queries on the root element.\n  const input = useRef<HTMLInputElement>(); // Used to focus on the input after adding a value.\n  const main = useContext(FacetsMainContext) as AnyFacetsMainState; // It exists, since it spawned this component.\n  const state = useDispatchable(() => new FacetMultiState<GroupKey, FacetKey>({ main, groupKey, facetKey }));\n\n  useEffect(() => {\n    return on(self?.current, \"icon-button\", (ev: CustomEvent) => {\n      ev.stopPropagation();\n      state.doSetMode(ev.detail.mode);\n    });\n  });\n\n  /** Scroll the selection so we can see what's been added. */\n  const maybeScroll = (value: string) =>\n    self.current?.querySelector(`button[data-value=\"${value}\"]`)?.scrollIntoView({ behavior: \"smooth\", block: \"nearest\" });\n\n  const add = handler((input: HTMLInputElement, ev: KeyboardEvent) => {\n    ev.stopPropagation();\n    if (ev.key !== \"Enter\") return;\n\n    // NOTE: if we use facet-multi for anything other than extensions, we should make value transform configurable.\n    const val = input.value.startsWith(\".\") ? input.value : `.${input.value}`;\n    if (state.doAdd(val)) setTimeout(() => maybeScroll(val), 100);\n    input.value = \"\";\n  });\n\n  /** Remove all instances of the pulse animation. */\n  const removePulse = debounce(() => {\n    for (const li of self.current?.querySelectorAll(\".quick-pulse\") ?? []) li.classList.remove(\"quick-pulse\");\n  }, 150);\n\n  const nthButton = (n: number) => self.current?.querySelector<HTMLButtonElement>(`li:nth-child(${n})>button`);\n\n  const remover = (idx: number) =>\n    handler((b: HTMLButtonElement, ev) => {\n      ev.stopPropagation();\n      if (state.doRemove(b.dataset.value)) {\n        // Determine next focus an add a lil animation. Timeout: wait till next render.\n        setTimeout(() => {\n          const nb = nthButton(idx + 1) ?? nthButton(idx);\n          (nb ?? input.current)?.focus();\n          if (!nb) return;\n          nb.classList.add(\"quick-pulse\"); // Add a pulsing animation to show what's being focused next.\n          setTimeout(() => removePulse(), 150);\n        }, 10);\n      }\n    });\n\n  // Helper to enumerate the entries, map them, then return an array (instead of an iterator).\n  function mapEntries<T>(mapper: (entry: [number, string | number | boolean]) => T): T[] {\n    return Array.from([...state.value.values].entries()).map(mapper);\n  }\n\n  const body = () => (\n    <>\n      <input\n        type=\"search\"\n        name={facetKey as string}\n        ref={input as Ref<HTMLInputElement>}\n        placeholder={label}\n        class={tw(INPUT, \"w-full\")}\n        onKeyDown={add}\n      />\n\n      <span class={tw(state.value.size === 0 && \"hidden\", state.value.size < 2 ? \"text-foreground/50\" : \"text-foreground\", \"pl-2\")}>\n        <IconButton action=\"allAny\" disabled={state.value.size < 2} initial={\"any\"} />\n      </span>\n\n      <ul>\n        {mapEntries(([idx, value]) => (\n          <li key={value}>\n            <button\n              type=\"button\"\n              data-value={value}\n              class={tw(\"inline-flex flex-row\", \"p-2\", \"w-full text-left\", \"cursor-pointer\", HOVER)}\n              {...onClickOnEnter(remover(idx))}>\n              <div class=\"-mt-[2px] inline-block scale-75 text-red-500\">{CLOSE}</div>\n              {value}\n            </button>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n\n  return (\n    <div ref={self as Ref<HTMLDivElement>} class={tw(\"flex flex-col\")}>\n      {active ? body() : null}\n    </div>\n  );\n}\n", "import type { JSX } from \"preact/jsx-runtime\";\n\nimport { SORT_DOWN, SORT_UP } from \"@plangs/frontend/auxiliar/icons\";\nimport type { PlangsGraph } from \"@plangs/plangs/graph\";\nimport type { TPlangsEdgeName, TPlangsVertexName } from \"@plangs/plangs/graph/generated\";\nimport type { StrDate } from \"@plangs/plangs/graph/vertex_data_schemas\";\n\nexport type Val = string | number | boolean;\nexport type Entry = { value: Val; label: string; count: number };\nexport type FacetTableConfig =\n  | { kind: \"rel\"; edgeName: TPlangsEdgeName; direction: \"direct\" | \"inverse\"; minEntries?: number }\n  | { kind: \"prop\"; vertexName: TPlangsVertexName; vertexProp: string };\n\nexport function generateEntries(pg: PlangsGraph, config: FacetTableConfig): Entry[] {\n  if (config.kind === \"rel\") {\n    const { edgeName, direction, minEntries } = config;\n\n    const edges = pg.edges[edgeName as TPlangsEdgeName];\n    if (!edges) {\n      console.error(\"No edges found for:\", edgeName, direction);\n      return [];\n    }\n\n    const relations = direction === \"direct\" ? edges.entriesBackward : edges.entriesForward;\n    const source = direction === \"direct\" ? edges.toSource : edges.fromSource;\n\n    const entries = [...relations].map(([key, toKeys]) => {\n      const name = source.get(key as any)?.name ?? key;\n      return { value: key, label: name, count: toKeys.size };\n    });\n\n    if (typeof minEntries === \"number\") return entries.filter(entry => entry.count >= minEntries);\n\n    return entries;\n  }\n\n  if (config.kind === \"prop\") {\n    // TODO: actually use the property. The code below assumes the property is 'created'.\n\n    const years: Map<StrDate, number> = new Map(); // year -> count\n    for (const { created } of pg.plang.values) {\n      if (!created.value) continue;\n      years.set(created.value, (years.get(created.value) ?? 0) + 1);\n    }\n    return [...years.entries()].map(([year, count]) => {\n      const strYear = `${year}`;\n      return { value: year, label: strYear, count };\n    });\n  }\n\n  console.error(\"Unknown config kind\", config);\n  return [];\n}\n\nexport type Column = \"facet\" | \"count\" | \"sel\";\nexport type Order = \"facet-asc\" | \"facet-desc\" | \"count-asc\" | \"count-desc\" | \"sel-asc\" | \"sel-desc\";\n\nexport function label(col: Column, config: FacetTableConfig): string {\n  if (col === \"facet\" && config.kind === \"rel\") return config.edgeName;\n  if (col === \"facet\" && config.kind === \"prop\") return `${config.vertexName} year`;\n  return col;\n}\n\nexport function icon(col: Column, order: Order): JSX.Element | false {\n  if (col === \"facet\") return (order === \"facet-asc\" && SORT_UP) || (order === \"facet-desc\" && SORT_DOWN);\n  if (col === \"count\") return (order === \"count-asc\" && SORT_UP) || (order === \"count-desc\" && SORT_DOWN);\n  return (order === \"sel-asc\" && SORT_UP) || (order === \"sel-desc\" && SORT_DOWN);\n}\n\nexport function opposite(col: Column, order: string): Order {\n  if (col === \"facet\") return order === \"facet-asc\" ? \"facet-desc\" : \"facet-asc\";\n  if (col === \"count\") return order === \"count-desc\" ? \"count-asc\" : \"count-desc\";\n  return order === \"sel-desc\" ? \"sel-asc\" : \"sel-desc\";\n}\n\nexport type IsSel = (entry: Entry) => boolean;\nexport type Cmp = (a: Entry, b: Entry, isSel?: IsSel) => number;\n\nexport const CMP: Record<Order, Cmp> = {\n  \"facet-asc\": (a, b) => a.label.localeCompare(b.label),\n  \"facet-desc\": (a, b) => b.label.localeCompare(a.label),\n  \"count-asc\": (a, b) => a.count - b.count,\n  \"count-desc\": (a, b) => b.count - a.count,\n  \"sel-asc\": (a, b, isSel) => (isSel ? Number(isSel(a)) - Number(isSel(b)) : 0),\n  \"sel-desc\": (a, b, isSel) => (isSel ? Number(isSel(b)) - Number(isSel(a)) : 0),\n} as const;\n\nexport function sortEntries(entries: Entry[], order: Order, isSel?: IsSel): Entry[] {\n  const less = CMP[order];\n  return entries.sort((a, b) => less(a, b, isSel));\n}\n", "import { onClickOnEnter } from \"@plangs/frontend/auxiliar/dom\";\nimport { HOVER, tw } from \"@plangs/frontend/auxiliar/styles\";\n\nimport { type Column, type FacetTableConfig, type Order, icon, label } from \"./entries\";\n\nexport function Header({\n  action,\n  class: cssClass,\n  col,\n  config,\n  order,\n}: { action: () => void; class?: string; col: Column; config: FacetTableConfig; order: Order }) {\n  return (\n    <button\n      type=\"button\"\n      class={tw(\"p-1\", \"italic\", \"underline decoration-1 decoration-dotted\", \"cursor-pointer\", cssClass)}\n      {...onClickOnEnter(action)}>\n      <div class={tw(HOVER, \"inline-flex w-full\", \"p-1\", \"items-center justify-between\", \"gap-1\")}>\n        <span>{label(col, config)}</span>\n        <span class={tw(\"scale-75\", \"mt-1\")}>{icon(col, order)}</span>\n        <span class=\"flex-1\" />\n      </div>\n    </button>\n  );\n}\n", "import { Filter } from \"@plangs/auxiliar/filters\";\nimport { Dispatchable } from \"@plangs/frontend/auxiliar/dispatchable\";\nimport type { AnyFacetsMainState } from \"@plangs/frontend/facets/main/use_state\";\n\nimport { type Column, type Entry, type Order, type Val, opposite, sortEntries } from \"./entries\";\nimport type { FacetTableProps } from \"./facet-table\";\n\ntype StateData<GroupKey extends string, FacetKey extends string> = Pick<FacetTableProps<GroupKey, FacetKey>, \"config\" | \"facetKey\" | \"groupKey\"> & {\n  main: AnyFacetsMainState;\n  entries: Entry[];\n  order: Order;\n};\n\nexport class FacetTableState<GroupKey extends string, FacetKey extends string> extends Dispatchable<StateData<GroupKey, FacetKey>> {\n  /** Actions */\n\n  doSetValue(val: Filter<Val>): \"changed\" | \"unchanged\" {\n    const { main, data } = this;\n    return main.doSetValue(data.groupKey, data.facetKey, val);\n  }\n\n  doToggle(val: Val) {\n    const { value } = this;\n    value.has(val) ? value.delete(val) : value.add(val);\n    this.doSetValue(value);\n  }\n\n  doSetMode(mode: \"all\" | \"any\"): void {\n    const { value } = this;\n    if (value.mode === mode) return;\n    this.value.mode = mode === \"all\" ? \"all\" : \"any\";\n    this.doSetValue(value);\n  }\n\n  // Note that this is the only place where we dispatch locally instead of through the main state.\n  doToggleOrder(col: Column) {\n    const { order } = this.data;\n    this.data.order = opposite(col, order);\n    sortEntries(this.data.entries, this.data.order, entry => this.value.has(entry.value));\n    this.dispatch();\n  }\n\n  doResetSelection() {\n    this.value.clear();\n    this.doSetValue(this.value);\n  }\n\n  /** Queries */\n\n  get main() {\n    return this.data.main;\n  }\n\n  /** Selected values. */\n  get value() {\n    const { main, groupKey, facetKey } = this.data;\n    return main.values.getOrSet(groupKey, facetKey, () => new Filter(\"any\")) as Filter<Val>;\n  }\n\n  /** All entries. */\n  get entries() {\n    return this.data.entries;\n  }\n\n  get order() {\n    return this.data.order;\n  }\n}\n", "import type { Ref } from \"preact\";\nimport { useContext, useEffect, useRef } from \"preact/hooks\";\n\nimport { ret } from \"@plangs/auxiliar/misc\";\nimport { useDispatchable } from \"@plangs/frontend/auxiliar/dispatchable\";\nimport { onClickOnEnter } from \"@plangs/frontend/auxiliar/dom\";\nimport { on } from \"@plangs/frontend/auxiliar/events\";\nimport { BORDER, HOVER, tw } from \"@plangs/frontend/auxiliar/styles\";\nimport { IconButton } from \"@plangs/frontend/components/icon-button/icon-button\";\nimport { type AnyFacetsMainState, FacetsMainContext } from \"@plangs/frontend/facets/main/use_state\";\n\nimport { type FacetTableConfig, generateEntries, sortEntries } from \"./entries\";\nimport { Header } from \"./header\";\nimport { FacetTableState } from \"./state\";\n\nexport type FacetTableProps<GroupKey extends string, FacetKey extends string> = {\n  groupKey: GroupKey;\n  facetKey: FacetKey;\n  config: FacetTableConfig;\n  active: boolean;\n};\n\nexport function FacetTable<GroupKey extends string, FacetKey extends string>({\n  groupKey,\n  facetKey,\n  config,\n  active,\n}: FacetTableProps<GroupKey, FacetKey>) {\n  const self = useRef<HTMLDivElement>();\n  const main = useContext(FacetsMainContext) as AnyFacetsMainState; // It exists, since it spawned this component.\n\n  const state = useDispatchable(() => {\n    const order = config.kind === \"prop\" ? \"facet-desc\" : \"facet-asc\";\n    const entries = sortEntries(generateEntries(main.pg, config), order);\n    return new FacetTableState({ config, entries, facetKey, groupKey, main, order });\n  });\n\n  useEffect(() =>\n    on(self?.current, \"icon-button\", (ev: CustomEvent) => {\n      ev.stopPropagation();\n      state.doSetMode(ev.detail.mode === \"all\" ? \"all\" : \"any\");\n    }),\n  );\n\n  const SUBGRID = tw(\"col-span-3\", \"grid grid-cols-subgrid\", \"items-center\");\n  const ROW = tw(SUBGRID, tw(\"border-b-1\", BORDER));\n  const CENTER_ROW = tw(\"items-center justify-between\");\n\n  const body = () => (\n    <div class={tw(\"grid grid-cols-[1fr_auto_auto]\", \"overflow-y-auto\", \"relative\")}>\n      <div class={tw(ROW, \"sticky top-0 cursor-pointer\", tw(BORDER, \"border-b-1\"))}>\n        <div class={tw(\"col-span-3\", \"py-1\", \"flex shrink-0 flex-row\", \"bg-background\", CENTER_ROW, tw(BORDER, \"border-t-1\"))}>\n          <span class={tw(\"pl-2\", CENTER_ROW, state.value.size < 2 ? \"text-foreground/50\" : \"text-foreground\")}>\n            <IconButton action=\"allAny\" disabled={state.value.size < 2} initial={state.value.mode} class={tw(config.kind === \"prop\" && \"hidden\")} />\n          </span>\n        </div>\n\n        <div class={tw(ROW, \"col-span-3\", \"bg-primary text-background/80\")}>\n          <Header class={\"text-left\"} action={() => state.doToggleOrder(\"facet\")} col=\"facet\" config={config} order={state.order} />\n          <Header class={\"text-center\"} action={() => state.doToggleOrder(\"count\")} col=\"count\" config={config} order={state.order} />\n          <Header class={\"text-right\"} action={() => state.doToggleOrder(\"sel\")} col=\"sel\" config={config} order={state.order} />\n        </div>\n      </div>\n\n      {state.entries.map(entry =>\n        ret(\n          onClickOnEnter(() => state.doToggle(entry.value)),\n          clickOrEnter => (\n            <div key={entry.value} class={tw(ROW, HOVER, state.value.has(entry.value) && \"bg-primary/20\")} {...clickOrEnter}>\n              <div class={tw(\"p-2\", \"text-left\", \"overflow-hidden text-ellipsis\", \"line-clamp-3\")}>{entry.label}</div>\n              <div class={tw(\"p-2\", \"text-center\")}>{entry.count}</div>\n              <div class={tw(\"p-2\", \"text-right\")}>\n                <input type=\"checkbox\" checked={state.value.has(entry.value)} {...clickOrEnter} />\n              </div>\n            </div>\n          ),\n        ),\n      )}\n    </div>\n  );\n\n  return (\n    <div ref={self as Ref<HTMLDivElement>} class={tw(\"flex flex-col\")}>\n      {active ? body() : null}\n    </div>\n  );\n}\n", "import type { ComponentChildren, FunctionComponent } from \"preact\";\nimport { useContext } from \"preact/hooks\";\n\nimport { onClickOnEnter } from \"@plangs/frontend/auxiliar/dom\";\nimport { DESELECT } from \"@plangs/frontend/auxiliar/icons\";\nimport { BAR, BORDER, HOVER_SVG_GROUP, tw } from \"@plangs/frontend/auxiliar/styles\";\nimport type { FacetConfig } from \"@plangs/frontend/facets/main/types\";\nimport { type AnyFacetsMainState, FacetsMainContext } from \"@plangs/frontend/facets/main/use_state\";\nimport { FacetBool } from \"@plangs/frontend/facets/misc/facet-bool\";\nimport { FacetText } from \"@plangs/frontend/facets/misc/facet-text\";\nimport { FacetMulti } from \"@plangs/frontend/facets/multisel/facet-multi\";\nimport { FacetTable } from \"@plangs/frontend/facets/table/facet-table\";\n\n/** Higher order component: Return a component wrapping several FacetGroup components. */\nexport function createFacetGroupsComponent<GK extends string, FK extends string>(\n  groups: Map<GK, { title: string; facets: FacetConfig<FK>[] }>,\n): FunctionComponent<{ currentFacetGroup: GK }> {\n  return ({ currentFacetGroup }) => (\n    <>\n      {[...groups.entries()].map(([groupKey, { title, facets }]) => (\n        <FacetGroup<GK> key={groupKey} groupKey={groupKey} label={title} active={currentFacetGroup === groupKey}>\n          {facets.map(facet => {\n            const { kind, label, facetKey } = facet;\n            const props = { groupKey, facetKey, label, active: currentFacetGroup === groupKey };\n            switch (kind) {\n              case \"bool\":\n                return <FacetBool {...props} valueMapper={facet.valueMapper} />;\n              case \"multi\":\n                return <FacetMulti {...props} />;\n              case \"table\":\n                return <FacetTable {...props} config={facet.config} />;\n              case \"text\":\n                return <FacetText {...props} />;\n              default:\n                console.error(\"Facet not found\", facetKey);\n            }\n          })}\n        </FacetGroup>\n      ))}\n    </>\n  );\n}\n\nexport function FacetGroup<GroupKey extends string>({\n  label,\n  groupKey,\n  active,\n  children,\n}: { label: string; groupKey: GroupKey; active: boolean; children: ComponentChildren }) {\n  const main = useContext(FacetsMainContext) as AnyFacetsMainState; // It exists, since it spawned this component.\n  const hasValues = main.groupHasValues(groupKey);\n  return (\n    <div class={tw(\"flex-1\", \"flex flex-col\", \"overflow-hidden\", !active && \"hidden\")}>\n      <header\n        class={tw(\n          \"sticky top-0 z-10\",\n          \"shrink-0\",\n          \"p-2\",\n          \"flex flex-row\",\n          \"items-center justify-between\",\n          \"truncate\",\n          \"text-primary\",\n          tw(BORDER, \"border-b-1\"),\n          BAR,\n        )}>\n        <span class=\"inline-block\">{label}</span>\n\n        <span\n          // biome-ignore lint/a11y/noNoninteractiveTabindex: we make it interactive.\n          tabIndex={0}\n          class={tw(\"group\", \"cursor-pointer\", hasValues ? \"text-foreground\" : \"text-foreground/50\")}\n          {...onClickOnEnter(() => {\n            main.doResetGroup(groupKey);\n          })}>\n          <div class=\"inline-flex flex-row items-center\">\n            <span class={tw(hasValues && \"group-hover:text-hiliteb\")}>Reset</span>\n            <span class={tw(hasValues && HOVER_SVG_GROUP, \"scale-50\")}>{DESELECT}</span>\n          </div>\n        </span>\n      </header>\n\n      <div class={tw(\"flex-1\", \"flex flex-col\", \"gap-4\", \"overflow-y-scroll\", \"relative\")}>{children}</div>\n    </div>\n  );\n}\n", "import type { FunctionComponent } from \"preact\";\n\nimport type { AnyValue } from \"@plangs/auxiliar/value\";\nimport type { FacetBoolMapper } from \"@plangs/frontend/facets/misc/facet-bool\";\nimport { createFacetGroupsComponent } from \"@plangs/frontend/facets/misc/facet-group\";\nimport type { FacetTableConfig } from \"@plangs/frontend/facets/table/entries\";\n\n////////////////////////////////////////////////////////////////////////////////\n/// Facet Input Configuration\n////////////////////////////////////////////////////////////////////////////////\n\nexport type FacetConfigBase<Kind extends string, FK> = { kind: Kind; label: string; facetKey: FK };\n\nexport type FacetConfigBool<FK> = FacetConfigBase<\"bool\", FK> & { valueMapper?: (checked: boolean) => AnyValue };\nexport type FacetConfigMulti<FK> = FacetConfigBase<\"multi\", FK>;\nexport type FacetConfigTable<FK> = FacetConfigBase<\"table\", FK> & { config: FacetTableConfig };\nexport type FacetConfigText<FK> = FacetConfigBase<\"text\", FK>;\n\n/** Type for the input for a facet. */\nexport type FacetConfig<FK> = FacetConfigBool<FK> | FacetConfigMulti<FK> | FacetConfigTable<FK> | FacetConfigText<FK>;\n\n/** A Map from the facet key to the facet configuration. */\nexport type FacetsMap<FK> = Map<FK, FacetConfig<FK>>;\n\nexport function bool<FK>(facetKey: FK, label: string, valueMapper?: FacetBoolMapper): FacetConfigBool<FK> {\n  return { kind: \"bool\", facetKey, label, valueMapper };\n}\n\nexport function multi<FK>(facetKey: FK, label: string): FacetConfigMulti<FK> {\n  return { kind: \"multi\", facetKey, label };\n}\n\nexport function table<FK>(facetKey: FK, label: string, config: FacetTableConfig): FacetConfigTable<FK> {\n  return { kind: \"table\", facetKey, label, config };\n}\n\nexport function text<FK>(facetKey: FK, label: string): FacetConfigText<FK> {\n  return { kind: \"text\", facetKey, label };\n}\n\n////////////////////////////////////////////////////////////////////////////////\n/// Facet Groups Configuration helper.\n////////////////////////////////////////////////////////////////////////////////\n\n/** Returns a map of group config, a map of group key by facet key, and a preact componetn to render the group. */\nexport function defineFacetGroups<GK extends string, FK extends string>(\n  groups: Record<GK, { title: string; facets: FacetConfig<FK>[] }>,\n): [Map<GK, { title: string; facets: FacetConfig<FK>[] }>, Map<FK, GK>, FunctionComponent<{ currentFacetGroup: string }>] {\n  const groupsMap = new Map(Object.entries(groups) as [GK, { title: string; facets: FacetConfig<FK>[] }][]);\n  const gkByFk = new Map<FK, GK>();\n  type GEntry = { title: string; facets: FacetConfig<FK>[] };\n  for (const [groupKey, { facets }] of Object.entries(groups) as [GK, GEntry][]) {\n    for (const facet of facets) gkByFk.set(facet.facetKey, groupKey);\n  }\n  const component = createFacetGroupsComponent(groupsMap);\n\n  return [groupsMap, gkByFk, component as FunctionComponent<{ currentFacetGroup: string }>];\n}\n", "import type { Filter } from \"@plangs/auxiliar/filters\";\nimport { ret } from \"@plangs/auxiliar/misc\";\nimport type { AnyValue, ValNumber, ValString, Value } from \"@plangs/auxiliar/value\";\nimport type { VApp } from \"@plangs/plangs/graph\";\nimport type { VLicenseKey, VPlangKey, VPlatformKey, VTagKey } from \"@plangs/plangs/graph/generated\";\nimport type { StrDate } from \"@plangs/plangs/graph/vertex_data_schemas\";\n\ntype Pred<T extends Value<AnyValue>> = (app: VApp, value: T) => boolean;\n\n/** Predicates to filter Apps. */\nexport const APP_FACET_PREDICATES = {\n  createdRecently: ((app, date) => app.created.isRecent(date.value as StrDate)) as Pred<ValString>,\n  creationYear: ((app, flt) => ret(app.created.strYear, appYear => flt.matches(year => appYear === year))) as Pred<Filter<string>>,\n  ghStars: ((app, num) => app.github.stars > num.value) as Pred<ValNumber>,\n  licenses: ((app, flt) => flt.matches(key => app.relLicenses.has(key))) as Pred<Filter<VLicenseKey>>,\n  name: ((app, str) => app.lcName.includes(str.value)) as Pred<ValString>,\n  platforms: ((app, flt) => flt.matches(key => app.relPlatforms.has(key))) as Pred<Filter<VPlatformKey>>,\n  releasedRecently: ((app, date) => ret(app.releases.last, lastRel => lastRel?.isRecent(date.value as StrDate))) as Pred<ValString>,\n  tags: ((app, flt) => flt.matches(key => app.relTags.has(key))) as Pred<Filter<VTagKey>>,\n  writtenWith: ((app, flt) => flt.matches(key => app.relWrittenWith.has(key))) as Pred<Filter<VPlangKey>>,\n} as const;\n\nexport type AppFacetKey = keyof typeof APP_FACET_PREDICATES;\n", "import type { Filter } from \"@plangs/auxiliar/filters\";\nimport { ret } from \"@plangs/auxiliar/misc\";\nimport type { AnyValue, ValString, Value } from \"@plangs/auxiliar/value\";\nimport type { VCommunity } from \"@plangs/plangs/graph\";\nimport type { VAppKey, VLibraryKey, VPlangKey, VTagKey, VToolKey } from \"@plangs/plangs/graph/generated\";\nimport type { StrDate } from \"@plangs/plangs/graph/vertex_data_schemas\";\n\ntype Pred<T extends Value<AnyValue>> = (community: VCommunity, value: T) => boolean;\n\n/** Predicates to filter Communities. */\nexport const COMMUNITY_FACET_PREDICATES = {\n  apps: ((comm, flt) => flt.matches(key => comm.relApps.has(key))) as Pred<Filter<VAppKey>>,\n  createdRecently: ((comm, date) => comm.created.isRecent(date.value as StrDate)) as Pred<ValString>,\n  creationYear: ((comm, flt) => ret(comm.created.strYear, communityYear => flt.matches(year => communityYear === year))) as Pred<Filter<string>>,\n  libraries: ((comm, flt) => flt.matches(key => comm.relLibraries.has(key))) as Pred<Filter<VLibraryKey>>,\n  name: ((comm, str) => comm.lcName.includes(str.value)) as Pred<ValString>,\n  plangs: ((com, flt) => flt.matches(key => com.relPlangs.has(key))) as Pred<Filter<VPlangKey>>,\n  tags: ((comm, flt) => flt.matches(key => comm.relTags.has(key))) as Pred<Filter<VTagKey>>,\n  tools: ((comm, flt) => flt.matches(key => comm.relTools.has(key))) as Pred<Filter<VToolKey>>,\n} as const;\n\nexport type CommunityFacetKey = keyof typeof COMMUNITY_FACET_PREDICATES;\n", "import type { Filter } from \"@plangs/auxiliar/filters\";\nimport { ret } from \"@plangs/auxiliar/misc\";\nimport type { AnyValue, ValString, Value } from \"@plangs/auxiliar/value\";\nimport type { VLearning } from \"@plangs/plangs/graph\";\nimport type { VAppKey, VLibraryKey, VPlangKey, VTagKey, VToolKey } from \"@plangs/plangs/graph/generated\";\nimport type { StrDate } from \"@plangs/plangs/graph/vertex_data_schemas\";\n\ntype Pred<T extends Value<AnyValue>> = (learning: VLearning, value: T) => boolean;\n\n/** Predicates to filter Learning Resources. */\nexport const LEARNING_FACET_PREDICATES = {\n  apps: ((learn, flt) => flt.matches(key => learn.relApps.has(key))) as Pred<Filter<VAppKey>>,\n  createdRecently: ((learn, date) => learn.created.isRecent(date.value as StrDate)) as Pred<ValString>,\n  creationYear: ((learn, flt) => ret(learn.created.strYear, learningYear => flt.matches(year => learningYear === year))) as Pred<Filter<string>>,\n  libraries: ((learn, flt) => flt.matches(key => learn.relLibraries.has(key))) as Pred<Filter<VLibraryKey>>,\n  name: ((learn, str) => learn.lcName.includes(str.value)) as Pred<ValString>,\n  plangs: ((learn, flt) => flt.matches(key => learn.relPlangs.has(key))) as Pred<Filter<VPlangKey>>,\n  tags: ((learn, flt) => flt.matches(key => learn.relTags.has(key))) as Pred<Filter<VTagKey>>,\n  tools: ((learn, flt) => flt.matches(key => learn.relTools.has(key))) as Pred<Filter<VToolKey>>,\n} as const;\n\nexport type LearningFacetKey = keyof typeof LEARNING_FACET_PREDICATES;\n", "import type { Filter } from \"@plangs/auxiliar/filters\";\nimport { ret } from \"@plangs/auxiliar/misc\";\nimport type { AnyValue, ValNumber, ValString, Value } from \"@plangs/auxiliar/value\";\nimport type { VLibrary } from \"@plangs/plangs/graph\";\nimport type { VLicenseKey, VPlangKey, VPlatformKey, VTagKey } from \"@plangs/plangs/graph/generated\";\nimport type { StrDate } from \"@plangs/plangs/graph/vertex_data_schemas\";\n\ntype Pred<T extends Value<AnyValue>> = (library: VLibrary, value: T) => boolean;\n\n/** Predicates to filter Libraries. */\nexport const LIBRARY_FACET_PREDICATES = {\n  createdRecently: ((lib, date) => lib.created.isRecent(date.value as StrDate)) as Pred<ValString>,\n  creationYear: ((lib, flt) => ret(lib.created.strYear, libraryYear => flt.matches(year => libraryYear === year))) as Pred<Filter<string>>,\n  ghStars: ((lib, num) => lib.github.stars > num.value) as Pred<ValNumber>,\n  licenses: ((lib, flt) => flt.matches(key => lib.relLicenses.has(key))) as Pred<Filter<VLicenseKey>>,\n  name: ((lib, str) => lib.lcName.includes(str.value)) as Pred<ValString>,\n  platforms: ((lib, flt) => flt.matches(key => lib.relPlatforms.has(key))) as Pred<Filter<VPlatformKey>>,\n  releasedRecently: ((lib, date) => ret(lib.releases.last, lastRel => lastRel?.isRecent(date.value as StrDate))) as Pred<ValString>,\n  tags: ((lib, flt) => flt.matches(key => lib.relTags.has(key))) as Pred<Filter<VTagKey>>,\n  writtenFor: ((lib, flt) => flt.matches(key => lib.relPlangs.has(key))) as Pred<Filter<VPlangKey>>,\n  writtenWith: ((lib, flt) => flt.matches(key => lib.relWrittenWith.has(key))) as Pred<Filter<VPlangKey>>,\n} as const;\n\nexport type LibraryFacetKey = keyof typeof LIBRARY_FACET_PREDICATES;\n", "import type { Filter } from \"@plangs/auxiliar/filters\";\nimport { ret } from \"@plangs/auxiliar/misc\";\nimport type { AnyValue, ValBool, ValString, Value } from \"@plangs/auxiliar/value\";\nimport type { VPlang } from \"@plangs/plangs/graph\";\nimport type { VLicenseKey, VParadigmKey, VPlangKey, VPlatformKey, VTagKey, VTypeSystemKey } from \"@plangs/plangs/graph/generated\";\nimport type { StrDate } from \"@plangs/plangs/graph/vertex_data_schemas\";\n\ntype Pred<T extends Value<AnyValue>> = (pl: VPlang, value: T) => boolean;\n\n/** Predicates to filter Plangs. */\nexport const PLANG_FACET_PREDICATES = {\n  compilesTo: ((pl, flt) => flt.matches(key => pl.relCompilesTo.has(key))) as Pred<Filter<VPlangKey>>,\n  createdRecently: ((pl, date) => pl.created.isRecent(date.value as StrDate)) as Pred<ValString>,\n  creationYear: ((pl, flt) => ret(pl.created.strYear, plYear => flt.matches(year => plYear === year))) as Pred<Filter<string>>,\n  dialectOf: ((pl, flt) => flt.matches(key => pl.relDialectOf.has(key))) as Pred<Filter<VPlangKey>>,\n  extensions: ((pl, flt) => flt.matches(key => pl.extensions.includes(key))) as Pred<Filter<string>>,\n  hasLogo: ((pl, val) => val.value === pl.images.some(img => img.kind === \"logo\")) as Pred<ValBool>,\n  hasWikipedia: ((pl, val) => val.value === !!pl.data.extWikipediaPath) as Pred<ValBool>,\n  implements: ((pl, flt) => flt.matches(key => pl.relImplements.has(key))) as Pred<Filter<VPlangKey>>,\n  influenced: ((pl, flt) => flt.matches(key => pl.relInfluenced.has(key))) as Pred<Filter<VPlangKey>>,\n  influencedBy: ((pl, flt) => flt.matches(key => pl.relInfluencedBy.has(key))) as Pred<Filter<VPlangKey>>,\n  isPopular: ((pl, val) => val.value === pl.isPopular) as Pred<ValBool>,\n  isTranspiler: ((pl, val) => val.value === pl.isTranspiler) as Pred<ValBool>,\n  licenses: ((pl, flt) => flt.matches(key => pl.relLicenses.has(key))) as Pred<Filter<VLicenseKey>>,\n  paradigms: ((pl, flt) => flt.matches(key => pl.relParadigms.has(key))) as Pred<Filter<VParadigmKey>>,\n  plangName: ((pl, str) => pl.lcName.includes(str.value)) as Pred<ValString>,\n  platforms: ((pl, flt) => flt.matches(key => pl.relPlatforms.has(key))) as Pred<Filter<VPlatformKey>>,\n  releasedRecently: ((pl, date) => ret(pl.releases.last, lastRel => lastRel?.isRecent(date.value as StrDate))) as Pred<ValString>,\n  tags: ((pl, flt) => flt.matches(key => pl.relTags.has(key))) as Pred<Filter<VTagKey>>,\n  typeSystems: ((pl, flt) => flt.matches(key => pl.relTypeSystems.has(key))) as Pred<Filter<VTypeSystemKey>>,\n  writtenWith: ((pl, flt) => flt.matches(key => pl.relWrittenWith.has(key))) as Pred<Filter<VPlangKey>>,\n\n  // These relationships are probably less useful for filtering.\n  // dialects: // \"Dialects\", rel(\"plang\", \"relDialects\")). Ex. Pick \"VisualBasic\" and see \"Basic\".\n  // implementedBy: // \"Implemented By\", rel(\"plang\", \"relImplementedBy\")). Ex. Pick \"CPython\" and see \"Python\".\n  // targetOf: // \"Target of\", rel(\"plang\", \"relTargetOf\")). Ex. Pick \"Haxe\" and see what languages it targets.\n  // usedToWrite: //  \"Used to Write\", rel(\"plang\", \"relUsedToWrite\")). Ex Pick \"C++\" and see \"C\".\n} as const;\n\nexport type PlangFacetKey = keyof typeof PLANG_FACET_PREDICATES;\n", "import type { Filter } from \"@plangs/auxiliar/filters\";\nimport { ret } from \"@plangs/auxiliar/misc\";\nimport type { AnyValue, ValNumber, ValString, Value } from \"@plangs/auxiliar/value\";\nimport type { VTool } from \"@plangs/plangs/graph\";\nimport type { VLicenseKey, VPlangKey, VPlatformKey, VTagKey } from \"@plangs/plangs/graph/generated\";\nimport type { StrDate } from \"@plangs/plangs/graph/vertex_data_schemas\";\n\ntype Pred<T extends Value<AnyValue>> = (tool: VTool, value: T) => boolean;\n\n/** Predicates to filter Tools.*/\nexport const TOOL_FACET_PREDICATES = {\n  createdRecently: ((tool, date) => tool.created.isRecent(date.value as StrDate)) as Pred<ValString>,\n  creationYear: ((tool, flt) => ret(tool.created.strYear, toolYear => flt.matches(year => toolYear === year))) as Pred<Filter<string>>,\n  ghStars: ((tool, num) => tool.github.stars > num.value) as Pred<ValNumber>,\n  licenses: ((tool, flt) => flt.matches(key => tool.relLicenses.has(key))) as Pred<Filter<VLicenseKey>>,\n  name: ((tool, str) => tool.lcName.includes(str.value)) as Pred<ValString>,\n  platforms: ((tool, flt) => flt.matches(key => tool.relPlatforms.has(key))) as Pred<Filter<VPlatformKey>>,\n  releasedRecently: ((tool, date) => ret(tool.releases.last, lastRel => lastRel?.isRecent(date.value as StrDate))) as Pred<ValString>,\n  tags: ((tool, flt) => flt.matches(key => tool.relTags.has(key))) as Pred<Filter<VTagKey>>,\n  writtenFor: ((tool, flt) => flt.matches(key => tool.relPlangs.has(key))) as Pred<Filter<VPlangKey>>,\n  writtenWith: ((tool, flt) => flt.matches(key => tool.relWrittenWith.has(key))) as Pred<Filter<VPlangKey>>,\n} as const;\n\nexport type ToolFacetKey = keyof typeof TOOL_FACET_PREDICATES;\n", "import type { AnyValue } from \"@plangs/auxiliar/value\";\nimport type { Vertices } from \"@plangs/graphgen/library\";\nimport type { TPlangsVertexClass, TPlangsVertexName } from \"@plangs/plangs/graph/generated\";\n\nimport { APP_FACET_PREDICATES } from \"./apps\";\nimport { COMMUNITY_FACET_PREDICATES } from \"./communities\";\nimport { LEARNING_FACET_PREDICATES } from \"./learning\";\nimport { LIBRARY_FACET_PREDICATES } from \"./libraries\";\nimport { PLANG_FACET_PREDICATES } from \"./plangs\";\nimport { TOOL_FACET_PREDICATES } from \"./tools\";\n\n/** A Map of predicates from an arbitrary name to a predicate function. */\nexport type Predicates<PredKey extends string> = Record<PredKey, (vertex: TPlangsVertexClass, value: AnyValue) => boolean>;\n\n/** Match a single Vertex against several predicates. */\nexport function matchVertex<PredKey extends string>(\n  vertex: TPlangsVertexClass,\n  predicates: Predicates<PredKey>,\n  facetValues: Map<PredKey, AnyValue>,\n): boolean {\n  for (const [key, value] of facetValues) {\n    const pred = predicates[key];\n    if (!pred) console.error(`No predicate found for key: ${key}`);\n    if (pred && value.isPresent && !pred(vertex, value)) return false;\n  }\n  return true;\n}\n\n/** Match all vertices of a container against several predicates. */\nexport function matchVertices<T extends TPlangsVertexClass, PredKey extends string>(\n  vertices: Vertices<T>,\n  facetValues: Map<PredKey, AnyValue>,\n  limit = -1,\n): Set<T[\"key\"]> {\n  const predicates = vertexPredicates(vertices.name as TPlangsVertexName) as Predicates<string> | undefined;\n  const result = new Set<T[\"key\"]>();\n\n  if (!predicates) {\n    console.warn(`No predicates found for vertex name: ${vertices.name}`);\n    return result;\n  }\n\n  for (const vertex of vertices.values) {\n    if (limit >= 0 && result.size >= limit) break;\n    if (matchVertex(vertex, predicates, facetValues)) result.add(vertex.key);\n  }\n  return result;\n}\n\n/** Return the available facet predicates for the given Vertex name. */\nexport function vertexPredicates(name: TPlangsVertexName) {\n  switch (name) {\n    case \"app\":\n      return APP_FACET_PREDICATES;\n    case \"community\":\n      return COMMUNITY_FACET_PREDICATES;\n    case \"learning\":\n      return LEARNING_FACET_PREDICATES;\n    case \"library\":\n      return LIBRARY_FACET_PREDICATES;\n    case \"plang\":\n      return PLANG_FACET_PREDICATES;\n    case \"tool\":\n      return TOOL_FACET_PREDICATES;\n  }\n}\n", "/** Insert elements in the array if they are not already present. */\nexport function arrayMerge<T>(\n  target: T[],\n  newData: T[],\n  similar: (l1: T, l2: T) => boolean = (l1, l2) => l1 === l2,\n  onDuplicate?: (prevElem: T, newElem: T) => void,\n) {\n  for (const newElem of newData) {\n    const prevElem = target.find((elem: T) => similar(elem, newElem));\n    if (prevElem) {\n      onDuplicate?.(prevElem, newElem);\n    } else {\n      target.push(newElem);\n    }\n  }\n}\n\n/** Delete in-place the given indexes of an array. Sorts the array in descending order to delete the proper elements. */\nexport function arrayDelete<T>(array: T[], indexes: Set<number>) {\n  // Delete indexes starting with the last one to avoid shifting elements.\n  for (const idx of [...indexes].sort((a, b) => b - a)) array.splice(idx, 1);\n}\n\n/** In place removal of array elements. */\nexport function removeIf<T>(array: T[], predicate: (value: T) => boolean, onRemove?: (value: T) => void): T[] {\n  for (let i = array.length - 1; i >= 0; i--) {\n    if (predicate(array[i])) {\n      onRemove?.(array[i]);\n      array.splice(i, 1);\n    }\n  }\n  return array;\n}\n", "/**\n * Wrapper to work with potentially empty or undefined iterables.\n */\nexport class IterTap<T> implements Iterable<T> {\n  readonly array: T[] | undefined;\n\n  constructor(iterable: Iterable<T> | undefined) {\n    this.array = Array.isArray(iterable) ? iterable : iterable ? [...iterable] : undefined;\n  }\n\n  filter(callback: (value: T, index: number, array: T[]) => boolean) {\n    return this.array ? this.array.filter(callback) : [];\n  }\n\n  map<R>(callback: (value: T, index: number, array: T[]) => R): IterTap<R> {\n    return new IterTap(this.array ? this.array.map(callback) : []);\n  }\n\n  reduce<R>(callback: (previousValue: R, currentValue: T, currentIndex: number, array: T[]) => R, init: R) {\n    return this.array ? this.array.reduce<R>(callback, init) : init;\n  }\n\n  sort(cmp?: (a: T, b: T) => number): T[] {\n    return this.array ? [...this.array].sort(cmp) : [];\n  }\n\n  join(str: string): string {\n    return this.array ? this.array.join(str) : \"\";\n  }\n\n  includes(val: T): boolean {\n    return this.array ? this.array.includes(val) : false;\n  }\n\n  some(predicate: (value: T, index: number, array: T[]) => boolean): boolean {\n    return this.array ? this.array.some(predicate) : false;\n  }\n\n  find(predicate: (value: T, index?: number, obj?: T[]) => boolean): T | undefined {\n    return this.array?.find(predicate);\n  }\n\n  tap<R>(callback: (array: T[]) => R): R | undefined {\n    if (this.array && this.array.length > 0) return callback(this.array);\n  }\n\n  get(index: number): T | undefined {\n    return this.array ? this.array[index] : undefined;\n  }\n\n  get isEmpty(): boolean {\n    return this.array ? this.array.length === 0 : true;\n  }\n\n  get size(): number {\n    return this.array ? this.array.length : 0;\n  }\n\n  get length(): number {\n    return this.size;\n  }\n\n  /** Return all non-null and non-undefined values (if strings, returns the ones with length > 0). */\n  get existing(): NonNullable<T>[] {\n    return this.filter(v => v !== undefined && v !== null && (typeof v !== \"string\" || v.length > 0)) as NonNullable<T>[];\n  }\n\n  get reverse(): IterTap<T> {\n    return new IterTap(this.array ? [...this.array].reverse() : undefined);\n  }\n\n  get first(): T | undefined {\n    return this.array && this.array.length > 0 ? this.array[0] : undefined;\n  }\n\n  get last(): T | undefined {\n    return this.array && this.array.length > 0 ? this.array[this.array.length - 1] : undefined;\n  }\n\n  [Symbol.iterator](): Iterator<T> {\n    return this.array ? this.array[Symbol.iterator]() : [].values();\n  }\n}\n", "export type VKey<Prefix extends string> = `${Prefix}+${string}`;\n\n/**\n * Vertex object:\n *\n * The string keys use a prefix go help differentiate vertices:\n * \"key+1\", \"another+2\", etc.\n *\n * Serializes to the plain data object without the key.\n */\nexport abstract class Vertex<KeyPrefix extends string, Data> {\n  /** Serializable data. */\n  data: Partial<Data> = {};\n\n  constructor(readonly key: VKey<KeyPrefix>) {}\n\n  /** Shallow merge data. */\n  merge(data: Partial<Data>): this {\n    Object.assign(this.data, data);\n    return this;\n  }\n\n  /** The key without the `${kind}+` prefix. */\n  get plainKey(): string {\n    return this.key.replace(/^[a-z]+\\+/, \"\");\n  }\n\n  /**\n   * Lower-case first letter of the {@link plainKey}, or {@link NON_AZ} if it starts with a non-letter.\n   * Useful when doing things like organizing the data in a folder structure.\n   */\n  get classifier(): string {\n    const pk = this.plainKey;\n    return /^[a-z]/i.test(pk) ? pk[0].toLowerCase() : NON_AZ;\n  }\n\n  /** {@link merge} can be used to load serialized data into an instance. */\n  toJSON() {\n    return this.data;\n  }\n\n  toString() {\n    return this.key;\n  }\n}\n\n/** Type of a Vertex with any key and data, useful for generic containers. */\n// biome-ignore lint/suspicious/noExplicitAny: we want to keep track of vertices with any key and data.\nexport type AnyVertex = Vertex<any, any>;\n\n/* Used to classify vertices whose plain key don't start with a letter. */\nexport const NON_AZ = \"-\";\n\n/**\n * A container for vertices and identity map:\n *\n * - Maintains a map of Vertices by Vertex key.\n * - Creates Vertices as needed using the factory function.\n */\nexport class Vertices<V extends AnyVertex> {\n  readonly map = new Map<V[\"key\"], V>();\n\n  constructor(\n    /** Name of the kind of Vertices. */\n    readonly name: string,\n    /** Kind of Vertices, used as prefix of the Key. */\n    readonly kind: string,\n    private factory: (key: V[\"key\"]) => V,\n  ) {}\n\n  set(key: V[\"key\"], data: V[\"data\"] = {}): V {\n    const vertex = this.factory(key).merge(data);\n    this.map.set(key, vertex);\n    return vertex;\n  }\n\n  get(key: V[\"key\"]): V | undefined {\n    return this.map.get(key);\n  }\n\n  has(key: V[\"key\"]): boolean {\n    return this.map.has(key);\n  }\n\n  delete(key: V[\"key\"]): boolean {\n    return this.map.delete(key);\n  }\n\n  clear(): void {\n    this.map.clear();\n  }\n\n  get keys(): MapIterator<V[\"key\"]> {\n    return this.map.keys();\n  }\n\n  get values(): MapIterator<V> {\n    return this.map.values();\n  }\n\n  get entries(): MapIterator<[V[\"key\"], V]> {\n    return this.map.entries();\n  }\n\n  toJSON(): Record<V[\"key\"], V[\"data\"]> {\n    return Object.fromEntries([...this.map].map(([key, vertex]) => [key, vertex.toJSON()])) as Record<V[\"key\"], V[\"data\"]>;\n  }\n}\n\n/**\n * Keep track of forward and backward edges between vertices.\n *\n * - Only allows a single edge between vertices.\n * - Tracks vertices keys only. The actual vertices live in the {@link Vertices} containers.\n * - Doesn't keep track of any edge data for now.\n */\nexport class Edges<From extends AnyVertex, To extends AnyVertex> {\n  readonly #forward = new Map<From[\"key\"], Set<To[\"key\"]>>();\n  readonly #backward = new Map<To[\"key\"], Set<From[\"key\"]>>();\n\n  /**\n   * We keep track of the from and to sources {@link Vertices} containers,\n   * so we can easily retrieve the actual vertex from its key when needed.\n   */\n  constructor(\n    readonly fromSource: Vertices<From>,\n    readonly toSource: Vertices<To>,\n    /** Description of the direct relationship from -> to. */\n    readonly descDirect: string,\n    /** Description of the inverse relationship to -> from. */\n    readonly descInverse: string,\n  ) {}\n\n  /**\n   * Track a relationship between two vertices.\n   * **Note**: the user is responsible of ensuring the vertices exist.\n   */\n  add(fromKey: From[\"key\"], ...toKeys: To[\"key\"][]): this {\n    let forward = this.#forward.get(fromKey);\n    if (!forward) this.#forward.set(fromKey, (forward = new Set()));\n\n    for (const toKey of toKeys) {\n      forward.add(toKey);\n\n      let backward = this.#backward.get(toKey);\n      if (!backward) this.#backward.set(toKey, (backward = new Set()));\n\n      backward.add(fromKey);\n    }\n\n    return this;\n  }\n\n  /** Get the vertices from the keys. */\n  get(fromKey: From[\"key\"], toKey: To[\"key\"]): [From | undefined, To | undefined] {\n    return [this.fromSource.get(fromKey), this.toSource.get(toKey)];\n  }\n\n  /** Shortcut: add a relationship and return the target vertices. */\n  addGet(fromKey: From[\"key\"], toKey: To[\"key\"]): [From | undefined, To | undefined] {\n    return this.add(fromKey, toKey).get(fromKey, toKey);\n  }\n\n  delete(fromKey: From[\"key\"], toKey: To[\"key\"]): boolean {\n    const f = this.#forward.get(fromKey)?.delete(toKey) ?? false;\n    const b = this.#backward.get(toKey)?.delete(fromKey) ?? false;\n    return f || b;\n  }\n\n  forward(fromKey: From[\"key\"]): Set<To[\"key\"]> {\n    return this.#forward.get(fromKey) ?? new Set();\n  }\n\n  backward(toKey: To[\"key\"]): Set<From[\"key\"]> {\n    return this.#backward.get(toKey) ?? new Set();\n  }\n\n  has(fromKey: From[\"key\"], toKey: To[\"key\"]): boolean {\n    return this.#forward.get(fromKey)?.has(toKey) ?? false;\n  }\n\n  /** Return all keys `[fromKey, Set<toKey>]`. */\n  get entriesForward(): [From[\"key\"], Set<To[\"key\"]>][] {\n    return [...this.#forward].map(([key, set]) => [key, set]);\n  }\n\n  /** Return all keys `[toKey, Set<fromKey>]`. */\n  get entriesBackward(): [From[\"key\"], Set<To[\"key\"]>][] {\n    return [...this.#backward].map(([key, set]) => [key, set]);\n  }\n\n  /** Map all Vertex keys to their respective Vertices or undefined if missing. */\n  get vertices(): [From[\"key\"], From | undefined, To[\"key\"], To | undefined][] {\n    const result: [From[\"key\"], From | undefined, To[\"key\"], To | undefined][] = [];\n    for (const [fromKey, toKeys] of this.entriesForward) {\n      const from = this.fromSource.get(fromKey);\n      for (const toKey of toKeys) result.push([fromKey, from, toKey, this.toSource.get(toKey)]);\n    }\n    return result;\n  }\n\n  /* Number of relationships. */\n  get size() {\n    // Both #forward and #backward should have the same size.\n    return this.#forward.values().reduce((acc, set) => acc + set.size, 0);\n  }\n\n  /* {@link addMany} can be used to load back the result of the serialization. */\n  toJSON(): Record<From[\"key\"], To[\"key\"][]> {\n    return Object.fromEntries(this.entriesForward.map(([fromKey, setToKeys]) => [fromKey, [...setToKeys]])) as Record<From[\"key\"], To[\"key\"][]>;\n  }\n}\n\nexport type SerializedGraph = {\n  vertices: Record<string, Record<string, AnyVertex[\"data\"]>>;\n  edges: Record<string, Record<string, string[]>>;\n};\n\n/** This class provides shrotcuts to work with relationship between vertices directly **from** the vertex. */\nexport class RelFrom<FromVertex extends AnyVertex, ToVertex extends AnyVertex> {\n  constructor(\n    readonly from: FromVertex,\n    readonly edges: Edges<FromVertex, ToVertex>,\n  ) {}\n\n  add(...toKeys: ToVertex[\"key\"][]): FromVertex {\n    this.edges.add(this.from.key, ...toKeys);\n    return this.from;\n  }\n\n  remove(...toKeys: ToVertex[\"key\"][]): FromVertex {\n    for (const toKey of toKeys) this.edges.delete(this.from.key, toKey);\n    return this.from;\n  }\n\n  has(toKey: ToVertex[\"key\"]): boolean {\n    return this.edges.has(this.from.key, toKey);\n  }\n\n  get keys(): Set<ToVertex[\"key\"]> {\n    return this.edges.forward(this.from.key);\n  }\n\n  get values(): ToVertex[] {\n    return [...this.keys].map(k => this.edges.toSource.get(k)).filter(v => v) as ToVertex[];\n  }\n\n  get size() {\n    return this.keys.size;\n  }\n}\n\n/** This class provides shrotcuts to work with relationship between vertices directly **to** the vertex. */\nexport class RelTo<FromVertex extends AnyVertex, ToVertex extends AnyVertex> {\n  constructor(\n    readonly to: ToVertex,\n    readonly edges: Edges<FromVertex, ToVertex>,\n  ) {}\n\n  add(...fromKeys: FromVertex[\"key\"][]): ToVertex {\n    for (const fromKey of fromKeys) this.edges.add(fromKey, this.to.key);\n    return this.to;\n  }\n\n  remove(...fromKeys: FromVertex[\"key\"][]): ToVertex {\n    for (const fromKey of fromKeys) this.edges.delete(fromKey, this.to.key);\n    return this.to;\n  }\n\n  has(fromKey: FromVertex[\"key\"]): boolean {\n    return this.edges.has(fromKey, this.to.key);\n  }\n\n  get keys(): Set<FromVertex[\"key\"]> {\n    return this.edges.backward(this.to.key);\n  }\n\n  get values(): FromVertex[] {\n    return [...this.keys].map(k => this.edges.fromSource.get(k)).filter(v => v) as FromVertex[];\n  }\n\n  get size() {\n    return this.keys.size;\n  }\n}\n", "import type { StrDate } from \"../graph/vertex_data_schemas\";\n\n// Arbitrary \"valid\" year range.\nexport const validYear = (year: number): boolean => year >= 1940 && year <= 2100;\nexport const validMonth = (month: number): boolean => month >= 1 && month <= 12;\nexport const validDay = (day: number): boolean => day >= 1 && day <= 31;\n\n/** If the string complies with StrDate, returns it formatted and type checked. */\nexport function parseDate(val: string): StrDate | undefined {\n  if (!val || val.length < 4 || val.length > 10) return;\n  const [year, month, day] = val.split(/\\D/, 3);\n  const [y, m, d] = [Number.parseInt(year), Number.parseInt(month), Number.parseInt(day)];\n\n  if (validYear(y)) {\n    if (validMonth(m)) {\n      if (validDay(d)) return `${y}-${`${m}`.padStart(2, \"0\")}-${`${d}`.padStart(2, \"0\")}`;\n      return `${y}-${`${m}`.padStart(2, \"0\")}`;\n    }\n    return `${y}`;\n  }\n}\n\n/** Extract the year from a StrDate. */\nexport function parseYear(val?: StrDate): number | undefined {\n  if (!val || val.length < 4 || val.length > 10) return;\n  const year = Number.parseInt(val.split(/\\D/, 3)[0], 10);\n  if (validYear(year)) return year;\n}\n\nexport function parseMonth(val?: StrDate): number | undefined {\n  if (!val || val.length < 4 || val.length > 10) return;\n  const month = Number.parseInt(val.split(/\\D/, 3)[1], 10);\n  if (validMonth(month)) return month;\n}\n\nexport function strDateCompare(a: StrDate | undefined, b: StrDate | undefined): number {\n  if (a === b) return 0;\n  if (!a) return -1;\n  if (!b) return 1;\n  return a.localeCompare(b);\n}\n\nexport function isRecent(date: StrDate | undefined, referenceDate: StrDate): boolean {\n  if (!date) return false;\n  return date >= referenceDate; // StrDate is a string, so this comparison works.\n}\n", "/**\n * Methods to work with vertex data fields.\n *\n * - Having these wrappers helps avoid duplication of methods that do the same thing accross different vertices.\n * - Wrappers are passed the vertex object instead of the data directly since eventually we will have setters that should modify the data in the vertex.\n */\n\nimport { IterTap } from \"@plangs/auxiliar/iter_tap\";\nimport { isRecent, parseMonth, parseYear, strDateCompare } from \"@plangs/plangs/auxiliar/str_date\";\n\nimport type { GithubRepo, Release, StrDate } from \"./vertex_data_schemas\";\n\n/** Wraps a single release. */\nexport class ReleaseWrapper {\n  constructor(private readonly release: Release) {}\n\n  get version(): string | undefined {\n    return this.release.version;\n  }\n\n  get date(): StrDate | undefined {\n    return this.release.date;\n  }\n\n  get year(): number | undefined {\n    return parseYear(this.release.date);\n  }\n\n  get month(): number | undefined {\n    return parseMonth(this.release.date);\n  }\n\n  isRecent(referenceDate: StrDate): boolean {\n    return isRecent(this.date, referenceDate);\n  }\n\n  compareDate(other: ReleaseWrapper): number {\n    return strDateCompare(this.date, other.date);\n  }\n}\n\n/** Wraps a list of releases. */\nexport class FieldReleases {\n  constructor(private readonly vertex: { data: { releases?: Release[] } }) {}\n\n  get all(): IterTap<ReleaseWrapper> {\n    return new IterTap(this.vertex.data.releases).map(rel => new ReleaseWrapper(rel));\n  }\n\n  get last(): ReleaseWrapper | undefined {\n    const all = this.all;\n    if (all.size === 0) return undefined;\n    if (all.size === 1) return all.get(0);\n    return all.sort((r1, r2) => r1.compareDate(r2))[0];\n  }\n}\n\n/** Wraps a StrDate field. */\nexport class FieldStrDate<Key extends string> {\n  constructor(\n    private readonly key: Key,\n    private readonly vertex: { data: Partial<Record<Key, StrDate | undefined>> },\n  ) {}\n\n  get value(): StrDate | undefined {\n    return this.vertex.data[this.key];\n  }\n\n  get year(): number | undefined {\n    return parseYear(this.value);\n  }\n\n  get strYear(): string | undefined {\n    return this.value?.slice(0, 4);\n  }\n\n  get month(): number | undefined {\n    return parseMonth(this.value);\n  }\n\n  isRecent(referenceDate: StrDate): boolean {\n    return isRecent(this.value, referenceDate);\n  }\n}\n\n/**\n * Wraps Github fields: repo stars and repo path\n * The releases field is present in Github but wrapped by FieldReleases.\n */\nexport class FieldGithub {\n  constructor(private readonly vertex: { data: Partial<GithubRepo> }) {}\n\n  /** Returns -1 if the number of stars is unknown. */\n  get stars(): number {\n    return this.vertex.data.githubStars ?? -1;\n  }\n\n  get path(): string | undefined {\n    return this.vertex.data.extGithubPath;\n  }\n\n  get url(): string | undefined {\n    return this.path ? `https://github.com/${this.path}` : undefined;\n  }\n}\n", "import { arrayMerge } from \"@plangs/auxiliar/array\";\nimport { IterTap } from \"@plangs/auxiliar/iter_tap\";\nimport { Vertex } from \"@plangs/graphgen/library\";\n\nimport type { PlangsGraphBase } from \"./generated\";\nimport { FieldStrDate } from \"./vertex_data_fields\";\nimport type { Image, Link, VertexBaseData } from \"./vertex_data_schemas\";\n\nexport abstract class PlangsVertex<KeyPrefix extends string, Data extends VertexBaseData> extends Vertex<KeyPrefix, Data> {\n  constructor(\n    public readonly graph: PlangsGraphBase,\n    key: `${KeyPrefix}+${string}`,\n  ) {\n    super(key);\n  }\n\n  get name(): string {\n    return this.data.name ? this.data.name : this.plainKey;\n  }\n\n  #lcName: string | undefined;\n\n  /** Lower case Name, used to compare agasint user search string. */\n  get lcName(): string {\n    if (!this.#lcName) this.#lcName = this.name.toLowerCase();\n    return this.#lcName;\n  }\n\n  get created(): FieldStrDate<\"created\"> {\n    return new FieldStrDate(\"created\", this);\n  }\n\n  get description(): string {\n    return this.data.description || this.name;\n  }\n\n  get urlHome(): string | undefined {\n    return this.data.extHomeURL;\n  }\n\n  get links(): IterTap<Link> {\n    return new IterTap(this.data.links);\n  }\n\n  get images() {\n    return new IterTap(this.data.images);\n  }\n\n  get keywords(): IterTap<string> {\n    return new IterTap(this.data.keywords);\n  }\n\n  get keywordsRegexp(): RegExp | undefined {\n    const { keywords } = this.data;\n    if (!keywords) return undefined;\n    const lenient = keywords.map(k => k.replaceAll(/[- ]/g, \"\\\\s*.?\\\\s*\"));\n    return new RegExp(`\\\\b(${lenient.join(\"|\")})\\\\b`, \"i\");\n  }\n\n  get thumbUrl(): string | undefined {\n    return (this.images.find(({ kind }) => kind === \"logo\") ?? this.images.first)?.url;\n  }\n\n  addImages(images: Image[]): this {\n    arrayMerge((this.data.images ??= []), images, (i1, i2) => i1.url === i2.url);\n    return this;\n  }\n\n  addLinks(links: Link[]): this {\n    arrayMerge((this.data.links ??= []), links, (l1, l2) => l1.url === l2.url);\n    return this;\n  }\n}\n", "/**  Do not modify manually! Generated by graphgen on 2024-12-02T00:11:04.797Z. */\n\nimport { Edges, RelFrom, RelTo, type SerializedGraph, Vertices } from \"@plangs/graphgen/library\";\n\n/** Import user defined classes and types. */\nimport { VApp, VBundle, VCommunity, VLearning, VLibrary, VLicense, VParadigm, VPlang, VPlatform, VPost, VTag, VTool, VTypeSystem } from \".\";\nimport { PlangsVertex } from \"./vertex_base\";\nimport type {\n  VAppData,\n  VBundleData,\n  VCommunityData,\n  VLearningData,\n  VLibraryData,\n  VLicenseData,\n  VParadigmData,\n  VPlangData,\n  VPlatformData,\n  VPostData,\n  VTagData,\n  VToolData,\n  VTypeSystemData,\n} from \"./vertex_data_schemas\";\n\nexport type TPlangsVertexName =\n  | \"app\"\n  | \"bundle\"\n  | \"community\"\n  | \"learning\"\n  | \"library\"\n  | \"license\"\n  | \"paradigm\"\n  | \"plang\"\n  | \"platform\"\n  | \"post\"\n  | \"tag\"\n  | \"tool\"\n  | \"typeSystem\";\n\n/** Supported relations of each class. */\nexport type TPlangsRelations = {\n  app: \"relCommunities\" | \"relLearning\" | \"relLicenses\" | \"relPlatforms\" | \"relTags\" | \"relWrittenWith\";\n  bundle: \"relPlangs\" | \"relTools\";\n  community: \"relApps\" | \"relLearning\" | \"relLibraries\" | \"relPlangs\" | \"relTags\" | \"relTools\";\n  learning: \"relApps\" | \"relCommunities\" | \"relLibraries\" | \"relPlangs\" | \"relTags\" | \"relTools\";\n  library: \"relCommunities\" | \"relLearning\" | \"relLicenses\" | \"relPlangs\" | \"relPlatforms\" | \"relTags\" | \"relWrittenWith\";\n  license: \"relApps\" | \"relLibraries\" | \"relPlangs\" | \"relTools\";\n  paradigm: \"relPlangs\";\n  plang:\n    | \"relApps\"\n    | \"relBundles\"\n    | \"relCommunities\"\n    | \"relCompilesTo\"\n    | \"relDialectOf\"\n    | \"relDialects\"\n    | \"relImplementedBy\"\n    | \"relImplements\"\n    | \"relInfluenced\"\n    | \"relInfluencedBy\"\n    | \"relLearning\"\n    | \"relLibraries\"\n    | \"relLicenses\"\n    | \"relParadigms\"\n    | \"relPlatforms\"\n    | \"relPosts\"\n    | \"relTags\"\n    | \"relTargetOf\"\n    | \"relTools\"\n    | \"relToolsUsing\"\n    | \"relTypeSystems\"\n    | \"relUsedInLibrary\"\n    | \"relUsedToWrite\"\n    | \"relWrittenWith\";\n  platform: \"relApps\" | \"relLibraries\" | \"relPlangs\" | \"relTools\";\n  post: \"relPlangs\";\n  tag: \"relApps\" | \"relCommunities\" | \"relLearning\" | \"relLibraries\" | \"relPlangs\" | \"relTools\";\n  tool: \"relBundles\" | \"relCommunities\" | \"relLearning\" | \"relLicenses\" | \"relPlangs\" | \"relPlatforms\" | \"relTags\" | \"relWrittenWith\";\n  typeSystem: \"relPlangs\";\n};\n\n/** Every Generated Vertex Class. */\nexport type TPlangsVertexClass =\n  | VApp\n  | VBundle\n  | VCommunity\n  | VLearning\n  | VLibrary\n  | VLicense\n  | VParadigm\n  | VPlang\n  | VPlatform\n  | VPost\n  | VTag\n  | VTool\n  | VTypeSystem;\n\n/** Used for better autocomplete. */\nexport type TPlangsVClassByName = {\n  app: VApp;\n  bundle: VBundle;\n  community: VCommunity;\n  learning: VLearning;\n  library: VLibrary;\n  license: VLicense;\n  paradigm: VParadigm;\n  plang: VPlang;\n  platform: VPlatform;\n  post: VPost;\n  tag: VTag;\n  tool: VTool;\n  typeSystem: VTypeSystem;\n};\n\n/** Supported edges of the graph. */\nexport type TPlangsEdgeName = keyof PlangsGraphBase[\"edges\"];\n\n/** Base class for the Plangs graph, generated from its specification. */\nexport class PlangsGraphBase {\n  /** Return a type checked object identifying a relationship of a specific kind of Vertex. */\n  static relConfig<T extends TPlangsVertexName>(vertexName: T, vertexRel: TPlangsRelations[T]) {\n    const klass = PlangsGraphBase.vertexClass(vertexName);\n    // @ts-ignore correct by construction.\n    const rel = klass.relations[vertexRel];\n    return { kind: \"rel\", edgeName: rel.edgeName as TPlangsEdgeName, direction: rel.direction as \"direct\" | \"inverse\" } as const;\n  }\n\n  /** Return a type checked object identifying a property of the class that is \"readable\" (a prop returning a String, Boolean or Nunber). */\n  static propConfig<T extends TPlangsVertexName>(vertexName: T, vertexProp: keyof TPlangsVClassByName[T]) {\n    return { kind: \"prop\", vertexName: vertexName as TPlangsVertexName, vertexProp: vertexProp as string } as const;\n  }\n\n  /** Get a Vertex class by its Vertex name. */\n  static vertexClass<T extends TPlangsVertexName>(vertexName: T) {\n    // We cannot use a Map here because each of the classes will not be initialized yet.\n    if (vertexName === \"app\") return VApp;\n    if (vertexName === \"bundle\") return VBundle;\n    if (vertexName === \"community\") return VCommunity;\n    if (vertexName === \"learning\") return VLearning;\n    if (vertexName === \"library\") return VLibrary;\n    if (vertexName === \"license\") return VLicense;\n    if (vertexName === \"paradigm\") return VParadigm;\n    if (vertexName === \"plang\") return VPlang;\n    if (vertexName === \"platform\") return VPlatform;\n    if (vertexName === \"post\") return VPost;\n    if (vertexName === \"tag\") return VTag;\n    if (vertexName === \"tool\") return VTool;\n    if (vertexName === \"typeSystem\") return VTypeSystem;\n  }\n\n  // Create a Vertices instances for each vertex.\n\n  readonly app = new Vertices<VApp>(\"app\", \"app\", key => new VApp(this, key));\n  readonly bundle = new Vertices<VBundle>(\"bundle\", \"bun\", key => new VBundle(this, key));\n  readonly community = new Vertices<VCommunity>(\"community\", \"comm\", key => new VCommunity(this, key));\n  readonly learning = new Vertices<VLearning>(\"learning\", \"learn\", key => new VLearning(this, key));\n  readonly library = new Vertices<VLibrary>(\"library\", \"lib\", key => new VLibrary(this, key));\n  readonly license = new Vertices<VLicense>(\"license\", \"lic\", key => new VLicense(this, key));\n  readonly paradigm = new Vertices<VParadigm>(\"paradigm\", \"para\", key => new VParadigm(this, key));\n  readonly plang = new Vertices<VPlang>(\"plang\", \"pl\", key => new VPlang(this, key));\n  readonly platform = new Vertices<VPlatform>(\"platform\", \"plat\", key => new VPlatform(this, key));\n  readonly post = new Vertices<VPost>(\"post\", \"post\", key => new VPost(this, key));\n  readonly tag = new Vertices<VTag>(\"tag\", \"tag\", key => new VTag(this, key));\n  readonly tool = new Vertices<VTool>(\"tool\", \"tool\", key => new VTool(this, key));\n  readonly typeSystem = new Vertices<VTypeSystem>(\"typeSystem\", \"tsys\", key => new VTypeSystem(this, key));\n\n  /** All vertex collections. */\n  readonly vertices = {\n    app: this.app,\n    bundle: this.bundle,\n    community: this.community,\n    learning: this.learning,\n    library: this.library,\n    license: this.license,\n    paradigm: this.paradigm,\n    plang: this.plang,\n    platform: this.platform,\n    post: this.post,\n    tag: this.tag,\n    tool: this.tool,\n    typeSystem: this.typeSystem,\n  } as const;\n\n  /** All edge collections. */\n  readonly edges = {\n    appRelPlatforms: new Edges(this.app, this.platform, \"Platforms supported\", \"Apps supporting this\"),\n    appRelWrittenWith: new Edges(this.app, this.plang, \"Plangs used to implement this\", \"Apps implemented with this\"),\n    bundleRelPlangs: new Edges(this.bundle, this.plang, \"Plangs this Bundle is for\", \"Bundles of Tools for this\"),\n    bundleRelTools: new Edges(this.bundle, this.tool, \"Tools in this\", \"Bundles including this\"),\n    communityRelApps: new Edges(this.community, this.app, \"Apps supported\", \"Communities suporting this\"),\n    communityRelLibraries: new Edges(this.community, this.library, \"Libraries supported\", \"Communities suporting this\"),\n    communityRelPlangs: new Edges(this.community, this.plang, \"Plangs supported\", \"Communities suporting this\"),\n    communityRelTools: new Edges(this.community, this.tool, \"Tools supported\", \"Communities suporting this\"),\n    learningRelApps: new Edges(this.learning, this.app, \"Apps supported\", \"Learning resources\"),\n    learningRelCommunities: new Edges(this.learning, this.community, \"Communities supporting this\", \"Learning resources\"),\n    learningRelLibraries: new Edges(this.learning, this.library, \"Libraries supported\", \"Learning resources\"),\n    learningRelPlangs: new Edges(this.learning, this.plang, \"Plangs covered\", \"Learning resources\"),\n    learningRelTools: new Edges(this.learning, this.tool, \"Tools supported\", \"Learning resources\"),\n    libraryRelPlangs: new Edges(this.library, this.plang, \"Plangs supported\", \"Software Libraries\"),\n    libraryRelPlatforms: new Edges(this.library, this.platform, \"Platforms supported\", \"Libraries supporting this\"),\n    libraryRelWrittenWith: new Edges(this.library, this.plang, \"Plangs used\", \"Libraries made with this\"),\n    licenseRelApps: new Edges(this.license, this.app, \"Apps using this\", \"Licenses\"),\n    licenseRelLibraries: new Edges(this.license, this.library, \"Libraries using this\", \"Licenses\"),\n    licenseRelPlangs: new Edges(this.license, this.plang, \"Plangs using this\", \"Licenses\"),\n    licenseRelTools: new Edges(this.license, this.tool, \"Tools using this\", \"Licenses\"),\n    plangRelCompilesTo: new Edges(this.plang, this.plang, \"Transpiling targets\", \"Plangs compiling to this\"),\n    plangRelDialectOf: new Edges(this.plang, this.plang, \"Plangs this is a Dialect of\", \"Dialects\"),\n    plangRelImplements: new Edges(this.plang, this.plang, \"Plangs this Implements\", \"Plangs implementing this\"),\n    plangRelInfluencedBy: new Edges(this.plang, this.plang, \"Plangs that influenced this\", \"Plangs this influenced\"),\n    plangRelParadigms: new Edges(this.plang, this.paradigm, \"Paradigms implemented\", \"Plangs implementing this\"),\n    plangRelPlatforms: new Edges(this.plang, this.platform, \"Platforms supported\", \"Plangs supporting this\"),\n    plangRelTools: new Edges(this.plang, this.tool, \"Tools for this\", \"Plangs supported\"),\n    plangRelTypeSystems: new Edges(this.plang, this.typeSystem, \"Type Systems implemented\", \"Plangs implementing this\"),\n    plangRelWrittenWith: new Edges(this.plang, this.plang, \"Plangs used to implement this\", \"Plangs implemented with this\"),\n    postRelPlangs: new Edges(this.post, this.plang, \"Plangs covered\", \"Posts talking about this\"),\n    tagRelApps: new Edges(this.tag, this.app, \"Apps tagged\", \"Tags\"),\n    tagRelCommunities: new Edges(this.tag, this.community, \"Communities tagged\", \"Tags\"),\n    tagRelLearning: new Edges(this.tag, this.learning, \"Learning resources tagged\", \"Tags\"),\n    tagRelLibraries: new Edges(this.tag, this.library, \"Libraries tagged\", \"Tags\"),\n    tagRelPlangs: new Edges(this.tag, this.plang, \"Plangs tagged\", \"Tags\"),\n    tagRelTools: new Edges(this.tag, this.tool, \"Tools tagged\", \"Tags\"),\n    toolRelPlatforms: new Edges(this.tool, this.platform, \"Platforms supported\", \"Tools supporting this\"),\n    toolRelWrittenWith: new Edges(this.tool, this.plang, \"Plangs used to implement this\", \"Tools implemented with this\"),\n  } as const;\n\n  toJSON(): SerializedGraph {\n    return {\n      vertices: Object.fromEntries(Object.entries(this.vertices).map(([k, v]) => [k, v.toJSON()])),\n      edges: Object.fromEntries(Object.entries(this.edges).map(([k, e]) => [k, e.toJSON()])),\n    };\n  }\n\n  loadJSON(data: SerializedGraph): this {\n    for (const [vertexName, vertices] of Object.entries(data.vertices)) {\n      const map = this.vertices[vertexName as TPlangsVertexName];\n      for (const [vertexKey, vertexData] of Object.entries(vertices)) {\n        map.set(vertexKey as any, vertexData as any);\n      }\n    }\n    for (const [edgeName, edges] of Object.entries(data.edges)) {\n      const map = this.edges[edgeName as keyof typeof this.edges];\n      for (const [fromKey, toKeys] of Object.entries(edges)) {\n        map.add(fromKey as any, ...(toKeys as any[]));\n      }\n    }\n    return this;\n  }\n}\n\n/** Type of the key of an instance of {@link VApp}. */\nexport type VAppKey = `app+${string}`;\n\n/** Software Application */\nexport abstract class VAppBase extends PlangsVertex<\"app\", VAppData> {\n  static readonly keyPrefix = \"app\";\n  static readonly vertexName = \"app\";\n  static readonly vertexDesc = \"Software Application\";\n\n  /** Describes the edges and direction used for every relationship in this Vertex. */\n  static readonly relations = {\n    relCommunities: { edgeName: \"communityRelApps\", direction: \"inverse\" },\n    relLearning: { edgeName: \"learningRelApps\", direction: \"inverse\" },\n    relLicenses: { edgeName: \"licenseRelApps\", direction: \"inverse\" },\n    relPlatforms: { edgeName: \"appRelPlatforms\", direction: \"direct\" },\n    relTags: { edgeName: \"tagRelApps\", direction: \"inverse\" },\n    relWrittenWith: { edgeName: \"appRelWrittenWith\", direction: \"direct\" },\n  } as const;\n\n  readonly vertexDesc = VAppBase.vertexDesc;\n\n  /** Communities suporting this `VCommunity-[relApps]->(this:VApp)`. Inverse: {@link VCommunity.relApps}. */\n  get relCommunities() {\n    return new RelTo(this as unknown as VApp, this.graph.edges.communityRelApps);\n  }\n\n  /** Learning resources `VLearning-[relApps]->(this:VApp)`. Inverse: {@link VLearning.relApps}. */\n  get relLearning() {\n    return new RelTo(this as unknown as VApp, this.graph.edges.learningRelApps);\n  }\n\n  /** Licenses `VLicense-[relApps]->(this:VApp)`. Inverse: {@link VLicense.relApps}. */\n  get relLicenses() {\n    return new RelTo(this as unknown as VApp, this.graph.edges.licenseRelApps);\n  }\n\n  /** Platforms supported `(this:VApp)-[relPlatforms]->VPlatform`. Inverse: {@link VPlatform.relApps}. */\n  get relPlatforms() {\n    return new RelFrom(this as unknown as VApp, this.graph.edges.appRelPlatforms);\n  }\n\n  /** Tags `VTag-[relApps]->(this:VApp)`. Inverse: {@link VTag.relApps}. */\n  get relTags() {\n    return new RelTo(this as unknown as VApp, this.graph.edges.tagRelApps);\n  }\n\n  /** Plangs used to implement this `(this:VApp)-[relWrittenWith]->VPlang`. Inverse: {@link VPlang.relApps}. */\n  get relWrittenWith() {\n    return new RelFrom(this as unknown as VApp, this.graph.edges.appRelWrittenWith);\n  }\n}\n\n/** Type of the key of an instance of {@link VBundle}. */\nexport type VBundleKey = `bun+${string}`;\n\n/** Bundle of Tools */\nexport abstract class VBundleBase extends PlangsVertex<\"bun\", VBundleData> {\n  static readonly keyPrefix = \"bun\";\n  static readonly vertexName = \"bundle\";\n  static readonly vertexDesc = \"Bundle of Tools\";\n\n  /** Describes the edges and direction used for every relationship in this Vertex. */\n  static readonly relations = {\n    relPlangs: { edgeName: \"bundleRelPlangs\", direction: \"direct\" },\n    relTools: { edgeName: \"bundleRelTools\", direction: \"direct\" },\n  } as const;\n\n  readonly vertexDesc = VBundleBase.vertexDesc;\n\n  /** Plangs this Bundle is for `(this:VBundle)-[relPlangs]->VPlang`. Inverse: {@link VPlang.relBundles}. */\n  get relPlangs() {\n    return new RelFrom(this as unknown as VBundle, this.graph.edges.bundleRelPlangs);\n  }\n\n  /** Tools in this `(this:VBundle)-[relTools]->VTool`. Inverse: {@link VTool.relBundles}. */\n  get relTools() {\n    return new RelFrom(this as unknown as VBundle, this.graph.edges.bundleRelTools);\n  }\n}\n\n/** Type of the key of an instance of {@link VCommunity}. */\nexport type VCommunityKey = `comm+${string}`;\n\n/** Community */\nexport abstract class VCommunityBase extends PlangsVertex<\"comm\", VCommunityData> {\n  static readonly keyPrefix = \"comm\";\n  static readonly vertexName = \"community\";\n  static readonly vertexDesc = \"Community\";\n\n  /** Describes the edges and direction used for every relationship in this Vertex. */\n  static readonly relations = {\n    relApps: { edgeName: \"communityRelApps\", direction: \"direct\" },\n    relLearning: { edgeName: \"learningRelCommunities\", direction: \"inverse\" },\n    relLibraries: { edgeName: \"communityRelLibraries\", direction: \"direct\" },\n    relPlangs: { edgeName: \"communityRelPlangs\", direction: \"direct\" },\n    relTags: { edgeName: \"tagRelCommunities\", direction: \"inverse\" },\n    relTools: { edgeName: \"communityRelTools\", direction: \"direct\" },\n  } as const;\n\n  readonly vertexDesc = VCommunityBase.vertexDesc;\n\n  /** Apps supported `(this:VCommunity)-[relApps]->VApp`. Inverse: {@link VApp.relCommunities}. */\n  get relApps() {\n    return new RelFrom(this as unknown as VCommunity, this.graph.edges.communityRelApps);\n  }\n\n  /** Learning resources `VLearning-[relCommunities]->(this:VCommunity)`. Inverse: {@link VLearning.relCommunities}. */\n  get relLearning() {\n    return new RelTo(this as unknown as VCommunity, this.graph.edges.learningRelCommunities);\n  }\n\n  /** Libraries supported `(this:VCommunity)-[relLibraries]->VLibrary`. Inverse: {@link VLibrary.relCommunities}. */\n  get relLibraries() {\n    return new RelFrom(this as unknown as VCommunity, this.graph.edges.communityRelLibraries);\n  }\n\n  /** Plangs supported `(this:VCommunity)-[relPlangs]->VPlang`. Inverse: {@link VPlang.relCommunities}. */\n  get relPlangs() {\n    return new RelFrom(this as unknown as VCommunity, this.graph.edges.communityRelPlangs);\n  }\n\n  /** Tags `VTag-[relCommunities]->(this:VCommunity)`. Inverse: {@link VTag.relCommunities}. */\n  get relTags() {\n    return new RelTo(this as unknown as VCommunity, this.graph.edges.tagRelCommunities);\n  }\n\n  /** Tools supported `(this:VCommunity)-[relTools]->VTool`. Inverse: {@link VTool.relCommunities}. */\n  get relTools() {\n    return new RelFrom(this as unknown as VCommunity, this.graph.edges.communityRelTools);\n  }\n}\n\n/** Type of the key of an instance of {@link VLearning}. */\nexport type VLearningKey = `learn+${string}`;\n\n/** Learning Resource */\nexport abstract class VLearningBase extends PlangsVertex<\"learn\", VLearningData> {\n  static readonly keyPrefix = \"learn\";\n  static readonly vertexName = \"learning\";\n  static readonly vertexDesc = \"Learning Resource\";\n\n  /** Describes the edges and direction used for every relationship in this Vertex. */\n  static readonly relations = {\n    relApps: { edgeName: \"learningRelApps\", direction: \"direct\" },\n    relCommunities: { edgeName: \"learningRelCommunities\", direction: \"direct\" },\n    relLibraries: { edgeName: \"learningRelLibraries\", direction: \"direct\" },\n    relPlangs: { edgeName: \"learningRelPlangs\", direction: \"direct\" },\n    relTags: { edgeName: \"tagRelLearning\", direction: \"inverse\" },\n    relTools: { edgeName: \"learningRelTools\", direction: \"direct\" },\n  } as const;\n\n  readonly vertexDesc = VLearningBase.vertexDesc;\n\n  /** Apps supported `(this:VLearning)-[relApps]->VApp`. Inverse: {@link VApp.relLearning}. */\n  get relApps() {\n    return new RelFrom(this as unknown as VLearning, this.graph.edges.learningRelApps);\n  }\n\n  /** Communities supporting this `(this:VLearning)-[relCommunities]->VCommunity`. Inverse: {@link VCommunity.relLearning}. */\n  get relCommunities() {\n    return new RelFrom(this as unknown as VLearning, this.graph.edges.learningRelCommunities);\n  }\n\n  /** Libraries supported `(this:VLearning)-[relLibraries]->VLibrary`. Inverse: {@link VLibrary.relLearning}. */\n  get relLibraries() {\n    return new RelFrom(this as unknown as VLearning, this.graph.edges.learningRelLibraries);\n  }\n\n  /** Plangs covered `(this:VLearning)-[relPlangs]->VPlang`. Inverse: {@link VPlang.relLearning}. */\n  get relPlangs() {\n    return new RelFrom(this as unknown as VLearning, this.graph.edges.learningRelPlangs);\n  }\n\n  /** Tags `VTag-[relLearning]->(this:VLearning)`. Inverse: {@link VTag.relLearning}. */\n  get relTags() {\n    return new RelTo(this as unknown as VLearning, this.graph.edges.tagRelLearning);\n  }\n\n  /** Tools supported `(this:VLearning)-[relTools]->VTool`. Inverse: {@link VTool.relLearning}. */\n  get relTools() {\n    return new RelFrom(this as unknown as VLearning, this.graph.edges.learningRelTools);\n  }\n}\n\n/** Type of the key of an instance of {@link VLibrary}. */\nexport type VLibraryKey = `lib+${string}`;\n\n/** Software Library */\nexport abstract class VLibraryBase extends PlangsVertex<\"lib\", VLibraryData> {\n  static readonly keyPrefix = \"lib\";\n  static readonly vertexName = \"library\";\n  static readonly vertexDesc = \"Software Library\";\n\n  /** Describes the edges and direction used for every relationship in this Vertex. */\n  static readonly relations = {\n    relCommunities: { edgeName: \"communityRelLibraries\", direction: \"inverse\" },\n    relLearning: { edgeName: \"learningRelLibraries\", direction: \"inverse\" },\n    relLicenses: { edgeName: \"licenseRelLibraries\", direction: \"inverse\" },\n    relPlangs: { edgeName: \"libraryRelPlangs\", direction: \"direct\" },\n    relPlatforms: { edgeName: \"libraryRelPlatforms\", direction: \"direct\" },\n    relTags: { edgeName: \"tagRelLibraries\", direction: \"inverse\" },\n    relWrittenWith: { edgeName: \"libraryRelWrittenWith\", direction: \"direct\" },\n  } as const;\n\n  readonly vertexDesc = VLibraryBase.vertexDesc;\n\n  /** Communities suporting this `VCommunity-[relLibraries]->(this:VLibrary)`. Inverse: {@link VCommunity.relLibraries}. */\n  get relCommunities() {\n    return new RelTo(this as unknown as VLibrary, this.graph.edges.communityRelLibraries);\n  }\n\n  /** Learning resources `VLearning-[relLibraries]->(this:VLibrary)`. Inverse: {@link VLearning.relLibraries}. */\n  get relLearning() {\n    return new RelTo(this as unknown as VLibrary, this.graph.edges.learningRelLibraries);\n  }\n\n  /** Licenses `VLicense-[relLibraries]->(this:VLibrary)`. Inverse: {@link VLicense.relLibraries}. */\n  get relLicenses() {\n    return new RelTo(this as unknown as VLibrary, this.graph.edges.licenseRelLibraries);\n  }\n\n  /** Plangs supported `(this:VLibrary)-[relPlangs]->VPlang`. Inverse: {@link VPlang.relLibraries}. */\n  get relPlangs() {\n    return new RelFrom(this as unknown as VLibrary, this.graph.edges.libraryRelPlangs);\n  }\n\n  /** Platforms supported `(this:VLibrary)-[relPlatforms]->VPlatform`. Inverse: {@link VPlatform.relLibraries}. */\n  get relPlatforms() {\n    return new RelFrom(this as unknown as VLibrary, this.graph.edges.libraryRelPlatforms);\n  }\n\n  /** Tags `VTag-[relLibraries]->(this:VLibrary)`. Inverse: {@link VTag.relLibraries}. */\n  get relTags() {\n    return new RelTo(this as unknown as VLibrary, this.graph.edges.tagRelLibraries);\n  }\n\n  /** Plangs used `(this:VLibrary)-[relWrittenWith]->VPlang`. Inverse: {@link VPlang.relUsedInLibrary}. */\n  get relWrittenWith() {\n    return new RelFrom(this as unknown as VLibrary, this.graph.edges.libraryRelWrittenWith);\n  }\n}\n\n/** Type of the key of an instance of {@link VLicense}. */\nexport type VLicenseKey = `lic+${string}`;\n\n/** Software License */\nexport abstract class VLicenseBase extends PlangsVertex<\"lic\", VLicenseData> {\n  static readonly keyPrefix = \"lic\";\n  static readonly vertexName = \"license\";\n  static readonly vertexDesc = \"Software License\";\n\n  /** Describes the edges and direction used for every relationship in this Vertex. */\n  static readonly relations = {\n    relApps: { edgeName: \"licenseRelApps\", direction: \"direct\" },\n    relLibraries: { edgeName: \"licenseRelLibraries\", direction: \"direct\" },\n    relPlangs: { edgeName: \"licenseRelPlangs\", direction: \"direct\" },\n    relTools: { edgeName: \"licenseRelTools\", direction: \"direct\" },\n  } as const;\n\n  readonly vertexDesc = VLicenseBase.vertexDesc;\n\n  /** Apps using this `(this:VLicense)-[relApps]->VApp`. Inverse: {@link VApp.relLicenses}. */\n  get relApps() {\n    return new RelFrom(this as unknown as VLicense, this.graph.edges.licenseRelApps);\n  }\n\n  /** Libraries using this `(this:VLicense)-[relLibraries]->VLibrary`. Inverse: {@link VLibrary.relLicenses}. */\n  get relLibraries() {\n    return new RelFrom(this as unknown as VLicense, this.graph.edges.licenseRelLibraries);\n  }\n\n  /** Plangs using this `(this:VLicense)-[relPlangs]->VPlang`. Inverse: {@link VPlang.relLicenses}. */\n  get relPlangs() {\n    return new RelFrom(this as unknown as VLicense, this.graph.edges.licenseRelPlangs);\n  }\n\n  /** Tools using this `(this:VLicense)-[relTools]->VTool`. Inverse: {@link VTool.relLicenses}. */\n  get relTools() {\n    return new RelFrom(this as unknown as VLicense, this.graph.edges.licenseRelTools);\n  }\n}\n\n/** Type of the key of an instance of {@link VParadigm}. */\nexport type VParadigmKey = `para+${string}`;\n\n/** Programming Language Paradigm */\nexport abstract class VParadigmBase extends PlangsVertex<\"para\", VParadigmData> {\n  static readonly keyPrefix = \"para\";\n  static readonly vertexName = \"paradigm\";\n  static readonly vertexDesc = \"Programming Language Paradigm\";\n\n  /** Describes the edges and direction used for every relationship in this Vertex. */\n  static readonly relations = { relPlangs: { edgeName: \"plangRelParadigms\", direction: \"inverse\" } } as const;\n\n  readonly vertexDesc = VParadigmBase.vertexDesc;\n\n  /** Plangs implementing this `VPlang-[relParadigms]->(this:VParadigm)`. Inverse: {@link VPlang.relParadigms}. */\n  get relPlangs() {\n    return new RelTo(this as unknown as VParadigm, this.graph.edges.plangRelParadigms);\n  }\n}\n\n/** Type of the key of an instance of {@link VPlang}. */\nexport type VPlangKey = `pl+${string}`;\n\n/** Programming Language */\nexport abstract class VPlangBase extends PlangsVertex<\"pl\", VPlangData> {\n  static readonly keyPrefix = \"pl\";\n  static readonly vertexName = \"plang\";\n  static readonly vertexDesc = \"Programming Language\";\n\n  /** Describes the edges and direction used for every relationship in this Vertex. */\n  static readonly relations = {\n    relApps: { edgeName: \"appRelWrittenWith\", direction: \"inverse\" },\n    relBundles: { edgeName: \"bundleRelPlangs\", direction: \"inverse\" },\n    relCommunities: { edgeName: \"communityRelPlangs\", direction: \"inverse\" },\n    relCompilesTo: { edgeName: \"plangRelCompilesTo\", direction: \"direct\" },\n    relDialectOf: { edgeName: \"plangRelDialectOf\", direction: \"direct\" },\n    relDialects: { edgeName: \"plangRelDialectOf\", direction: \"inverse\" },\n    relImplementedBy: { edgeName: \"plangRelImplements\", direction: \"inverse\" },\n    relImplements: { edgeName: \"plangRelImplements\", direction: \"direct\" },\n    relInfluenced: { edgeName: \"plangRelInfluencedBy\", direction: \"inverse\" },\n    relInfluencedBy: { edgeName: \"plangRelInfluencedBy\", direction: \"direct\" },\n    relLearning: { edgeName: \"learningRelPlangs\", direction: \"inverse\" },\n    relLibraries: { edgeName: \"libraryRelPlangs\", direction: \"inverse\" },\n    relLicenses: { edgeName: \"licenseRelPlangs\", direction: \"inverse\" },\n    relParadigms: { edgeName: \"plangRelParadigms\", direction: \"direct\" },\n    relPlatforms: { edgeName: \"plangRelPlatforms\", direction: \"direct\" },\n    relPosts: { edgeName: \"postRelPlangs\", direction: \"inverse\" },\n    relTags: { edgeName: \"tagRelPlangs\", direction: \"inverse\" },\n    relTargetOf: { edgeName: \"plangRelCompilesTo\", direction: \"inverse\" },\n    relTools: { edgeName: \"plangRelTools\", direction: \"direct\" },\n    relToolsUsing: { edgeName: \"toolRelWrittenWith\", direction: \"inverse\" },\n    relTypeSystems: { edgeName: \"plangRelTypeSystems\", direction: \"direct\" },\n    relUsedInLibrary: { edgeName: \"libraryRelWrittenWith\", direction: \"inverse\" },\n    relUsedToWrite: { edgeName: \"plangRelWrittenWith\", direction: \"inverse\" },\n    relWrittenWith: { edgeName: \"plangRelWrittenWith\", direction: \"direct\" },\n  } as const;\n\n  readonly vertexDesc = VPlangBase.vertexDesc;\n\n  /** Apps implemented with this `VApp-[relWrittenWith]->(this:VPlang)`. Inverse: {@link VApp.relWrittenWith}. */\n  get relApps() {\n    return new RelTo(this as unknown as VPlang, this.graph.edges.appRelWrittenWith);\n  }\n\n  /** Bundles of Tools for this `VBundle-[relPlangs]->(this:VPlang)`. Inverse: {@link VBundle.relPlangs}. */\n  get relBundles() {\n    return new RelTo(this as unknown as VPlang, this.graph.edges.bundleRelPlangs);\n  }\n\n  /** Communities suporting this `VCommunity-[relPlangs]->(this:VPlang)`. Inverse: {@link VCommunity.relPlangs}. */\n  get relCommunities() {\n    return new RelTo(this as unknown as VPlang, this.graph.edges.communityRelPlangs);\n  }\n\n  /** Transpiling targets `(this:VPlang)-[relCompilesTo]->VPlang`. Inverse: {@link VPlang.relTargetOf}. */\n  get relCompilesTo() {\n    return new RelFrom(this as unknown as VPlang, this.graph.edges.plangRelCompilesTo);\n  }\n\n  /** Plangs this is a Dialect of `(this:VPlang)-[relDialectOf]->VPlang`. Inverse: {@link VPlang.relDialects}. */\n  get relDialectOf() {\n    return new RelFrom(this as unknown as VPlang, this.graph.edges.plangRelDialectOf);\n  }\n\n  /** Dialects `VPlang-[relDialectOf]->(this:VPlang)`. Inverse: {@link VPlang.relDialectOf}. */\n  get relDialects() {\n    return new RelTo(this as unknown as VPlang, this.graph.edges.plangRelDialectOf);\n  }\n\n  /** Plangs implementing this `VPlang-[relImplements]->(this:VPlang)`. Inverse: {@link VPlang.relImplements}. */\n  get relImplementedBy() {\n    return new RelTo(this as unknown as VPlang, this.graph.edges.plangRelImplements);\n  }\n\n  /** Plangs this Implements `(this:VPlang)-[relImplements]->VPlang`. Inverse: {@link VPlang.relImplementedBy}. */\n  get relImplements() {\n    return new RelFrom(this as unknown as VPlang, this.graph.edges.plangRelImplements);\n  }\n\n  /** Plangs this influenced `VPlang-[relInfluencedBy]->(this:VPlang)`. Inverse: {@link VPlang.relInfluencedBy}. */\n  get relInfluenced() {\n    return new RelTo(this as unknown as VPlang, this.graph.edges.plangRelInfluencedBy);\n  }\n\n  /** Plangs that influenced this `(this:VPlang)-[relInfluencedBy]->VPlang`. Inverse: {@link VPlang.relInfluenced}. */\n  get relInfluencedBy() {\n    return new RelFrom(this as unknown as VPlang, this.graph.edges.plangRelInfluencedBy);\n  }\n\n  /** Learning resources `VLearning-[relPlangs]->(this:VPlang)`. Inverse: {@link VLearning.relPlangs}. */\n  get relLearning() {\n    return new RelTo(this as unknown as VPlang, this.graph.edges.learningRelPlangs);\n  }\n\n  /** Software Libraries `VLibrary-[relPlangs]->(this:VPlang)`. Inverse: {@link VLibrary.relPlangs}. */\n  get relLibraries() {\n    return new RelTo(this as unknown as VPlang, this.graph.edges.libraryRelPlangs);\n  }\n\n  /** Licenses `VLicense-[relPlangs]->(this:VPlang)`. Inverse: {@link VLicense.relPlangs}. */\n  get relLicenses() {\n    return new RelTo(this as unknown as VPlang, this.graph.edges.licenseRelPlangs);\n  }\n\n  /** Paradigms implemented `(this:VPlang)-[relParadigms]->VParadigm`. Inverse: {@link VParadigm.relPlangs}. */\n  get relParadigms() {\n    return new RelFrom(this as unknown as VPlang, this.graph.edges.plangRelParadigms);\n  }\n\n  /** Platforms supported `(this:VPlang)-[relPlatforms]->VPlatform`. Inverse: {@link VPlatform.relPlangs}. */\n  get relPlatforms() {\n    return new RelFrom(this as unknown as VPlang, this.graph.edges.plangRelPlatforms);\n  }\n\n  /** Posts talking about this `VPost-[relPlangs]->(this:VPlang)`. Inverse: {@link VPost.relPlangs}. */\n  get relPosts() {\n    return new RelTo(this as unknown as VPlang, this.graph.edges.postRelPlangs);\n  }\n\n  /** Tags `VTag-[relPlangs]->(this:VPlang)`. Inverse: {@link VTag.relPlangs}. */\n  get relTags() {\n    return new RelTo(this as unknown as VPlang, this.graph.edges.tagRelPlangs);\n  }\n\n  /** Plangs compiling to this `VPlang-[relCompilesTo]->(this:VPlang)`. Inverse: {@link VPlang.relCompilesTo}. */\n  get relTargetOf() {\n    return new RelTo(this as unknown as VPlang, this.graph.edges.plangRelCompilesTo);\n  }\n\n  /** Tools for this `(this:VPlang)-[relTools]->VTool`. Inverse: {@link VTool.relPlangs}. */\n  get relTools() {\n    return new RelFrom(this as unknown as VPlang, this.graph.edges.plangRelTools);\n  }\n\n  /** Tools implemented with this `VTool-[relWrittenWith]->(this:VPlang)`. Inverse: {@link VTool.relWrittenWith}. */\n  get relToolsUsing() {\n    return new RelTo(this as unknown as VPlang, this.graph.edges.toolRelWrittenWith);\n  }\n\n  /** Type Systems implemented `(this:VPlang)-[relTypeSystems]->VTypeSystem`. Inverse: {@link VTypeSystem.relPlangs}. */\n  get relTypeSystems() {\n    return new RelFrom(this as unknown as VPlang, this.graph.edges.plangRelTypeSystems);\n  }\n\n  /** Libraries made with this `VLibrary-[relWrittenWith]->(this:VPlang)`. Inverse: {@link VLibrary.relWrittenWith}. */\n  get relUsedInLibrary() {\n    return new RelTo(this as unknown as VPlang, this.graph.edges.libraryRelWrittenWith);\n  }\n\n  /** Plangs implemented with this `VPlang-[relWrittenWith]->(this:VPlang)`. Inverse: {@link VPlang.relWrittenWith}. */\n  get relUsedToWrite() {\n    return new RelTo(this as unknown as VPlang, this.graph.edges.plangRelWrittenWith);\n  }\n\n  /** Plangs used to implement this `(this:VPlang)-[relWrittenWith]->VPlang`. Inverse: {@link VPlang.relUsedToWrite}. */\n  get relWrittenWith() {\n    return new RelFrom(this as unknown as VPlang, this.graph.edges.plangRelWrittenWith);\n  }\n}\n\n/** Type of the key of an instance of {@link VPlatform}. */\nexport type VPlatformKey = `plat+${string}`;\n\n/** Platform where Software runs */\nexport abstract class VPlatformBase extends PlangsVertex<\"plat\", VPlatformData> {\n  static readonly keyPrefix = \"plat\";\n  static readonly vertexName = \"platform\";\n  static readonly vertexDesc = \"Platform where Software runs\";\n\n  /** Describes the edges and direction used for every relationship in this Vertex. */\n  static readonly relations = {\n    relApps: { edgeName: \"appRelPlatforms\", direction: \"inverse\" },\n    relLibraries: { edgeName: \"libraryRelPlatforms\", direction: \"inverse\" },\n    relPlangs: { edgeName: \"plangRelPlatforms\", direction: \"inverse\" },\n    relTools: { edgeName: \"toolRelPlatforms\", direction: \"inverse\" },\n  } as const;\n\n  readonly vertexDesc = VPlatformBase.vertexDesc;\n\n  /** Apps supporting this `VApp-[relPlatforms]->(this:VPlatform)`. Inverse: {@link VApp.relPlatforms}. */\n  get relApps() {\n    return new RelTo(this as unknown as VPlatform, this.graph.edges.appRelPlatforms);\n  }\n\n  /** Libraries supporting this `VLibrary-[relPlatforms]->(this:VPlatform)`. Inverse: {@link VLibrary.relPlatforms}. */\n  get relLibraries() {\n    return new RelTo(this as unknown as VPlatform, this.graph.edges.libraryRelPlatforms);\n  }\n\n  /** Plangs supporting this `VPlang-[relPlatforms]->(this:VPlatform)`. Inverse: {@link VPlang.relPlatforms}. */\n  get relPlangs() {\n    return new RelTo(this as unknown as VPlatform, this.graph.edges.plangRelPlatforms);\n  }\n\n  /** Tools supporting this `VTool-[relPlatforms]->(this:VPlatform)`. Inverse: {@link VTool.relPlatforms}. */\n  get relTools() {\n    return new RelTo(this as unknown as VPlatform, this.graph.edges.toolRelPlatforms);\n  }\n}\n\n/** Type of the key of an instance of {@link VPost}. */\nexport type VPostKey = `post+${string}`;\n\n/** Blog Post */\nexport abstract class VPostBase extends PlangsVertex<\"post\", VPostData> {\n  static readonly keyPrefix = \"post\";\n  static readonly vertexName = \"post\";\n  static readonly vertexDesc = \"Blog Post\";\n\n  /** Describes the edges and direction used for every relationship in this Vertex. */\n  static readonly relations = { relPlangs: { edgeName: \"postRelPlangs\", direction: \"direct\" } } as const;\n\n  readonly vertexDesc = VPostBase.vertexDesc;\n\n  /** Plangs covered `(this:VPost)-[relPlangs]->VPlang`. Inverse: {@link VPlang.relPosts}. */\n  get relPlangs() {\n    return new RelFrom(this as unknown as VPost, this.graph.edges.postRelPlangs);\n  }\n}\n\n/** Type of the key of an instance of {@link VTag}. */\nexport type VTagKey = `tag+${string}`;\n\n/** Tag */\nexport abstract class VTagBase extends PlangsVertex<\"tag\", VTagData> {\n  static readonly keyPrefix = \"tag\";\n  static readonly vertexName = \"tag\";\n  static readonly vertexDesc = \"Tag\";\n\n  /** Describes the edges and direction used for every relationship in this Vertex. */\n  static readonly relations = {\n    relApps: { edgeName: \"tagRelApps\", direction: \"direct\" },\n    relCommunities: { edgeName: \"tagRelCommunities\", direction: \"direct\" },\n    relLearning: { edgeName: \"tagRelLearning\", direction: \"direct\" },\n    relLibraries: { edgeName: \"tagRelLibraries\", direction: \"direct\" },\n    relPlangs: { edgeName: \"tagRelPlangs\", direction: \"direct\" },\n    relTools: { edgeName: \"tagRelTools\", direction: \"direct\" },\n  } as const;\n\n  readonly vertexDesc = VTagBase.vertexDesc;\n\n  /** Apps tagged `(this:VTag)-[relApps]->VApp`. Inverse: {@link VApp.relTags}. */\n  get relApps() {\n    return new RelFrom(this as unknown as VTag, this.graph.edges.tagRelApps);\n  }\n\n  /** Communities tagged `(this:VTag)-[relCommunities]->VCommunity`. Inverse: {@link VCommunity.relTags}. */\n  get relCommunities() {\n    return new RelFrom(this as unknown as VTag, this.graph.edges.tagRelCommunities);\n  }\n\n  /** Learning resources tagged `(this:VTag)-[relLearning]->VLearning`. Inverse: {@link VLearning.relTags}. */\n  get relLearning() {\n    return new RelFrom(this as unknown as VTag, this.graph.edges.tagRelLearning);\n  }\n\n  /** Libraries tagged `(this:VTag)-[relLibraries]->VLibrary`. Inverse: {@link VLibrary.relTags}. */\n  get relLibraries() {\n    return new RelFrom(this as unknown as VTag, this.graph.edges.tagRelLibraries);\n  }\n\n  /** Plangs tagged `(this:VTag)-[relPlangs]->VPlang`. Inverse: {@link VPlang.relTags}. */\n  get relPlangs() {\n    return new RelFrom(this as unknown as VTag, this.graph.edges.tagRelPlangs);\n  }\n\n  /** Tools tagged `(this:VTag)-[relTools]->VTool`. Inverse: {@link VTool.relTags}. */\n  get relTools() {\n    return new RelFrom(this as unknown as VTag, this.graph.edges.tagRelTools);\n  }\n}\n\n/** Type of the key of an instance of {@link VTool}. */\nexport type VToolKey = `tool+${string}`;\n\n/** Programming Tool */\nexport abstract class VToolBase extends PlangsVertex<\"tool\", VToolData> {\n  static readonly keyPrefix = \"tool\";\n  static readonly vertexName = \"tool\";\n  static readonly vertexDesc = \"Programming Tool\";\n\n  /** Describes the edges and direction used for every relationship in this Vertex. */\n  static readonly relations = {\n    relBundles: { edgeName: \"bundleRelTools\", direction: \"inverse\" },\n    relCommunities: { edgeName: \"communityRelTools\", direction: \"inverse\" },\n    relLearning: { edgeName: \"learningRelTools\", direction: \"inverse\" },\n    relLicenses: { edgeName: \"licenseRelTools\", direction: \"inverse\" },\n    relPlangs: { edgeName: \"plangRelTools\", direction: \"inverse\" },\n    relPlatforms: { edgeName: \"toolRelPlatforms\", direction: \"direct\" },\n    relTags: { edgeName: \"tagRelTools\", direction: \"inverse\" },\n    relWrittenWith: { edgeName: \"toolRelWrittenWith\", direction: \"direct\" },\n  } as const;\n\n  readonly vertexDesc = VToolBase.vertexDesc;\n\n  /** Bundles including this `VBundle-[relTools]->(this:VTool)`. Inverse: {@link VBundle.relTools}. */\n  get relBundles() {\n    return new RelTo(this as unknown as VTool, this.graph.edges.bundleRelTools);\n  }\n\n  /** Communities suporting this `VCommunity-[relTools]->(this:VTool)`. Inverse: {@link VCommunity.relTools}. */\n  get relCommunities() {\n    return new RelTo(this as unknown as VTool, this.graph.edges.communityRelTools);\n  }\n\n  /** Learning resources `VLearning-[relTools]->(this:VTool)`. Inverse: {@link VLearning.relTools}. */\n  get relLearning() {\n    return new RelTo(this as unknown as VTool, this.graph.edges.learningRelTools);\n  }\n\n  /** Licenses `VLicense-[relTools]->(this:VTool)`. Inverse: {@link VLicense.relTools}. */\n  get relLicenses() {\n    return new RelTo(this as unknown as VTool, this.graph.edges.licenseRelTools);\n  }\n\n  /** Plangs supported `VPlang-[relTools]->(this:VTool)`. Inverse: {@link VPlang.relTools}. */\n  get relPlangs() {\n    return new RelTo(this as unknown as VTool, this.graph.edges.plangRelTools);\n  }\n\n  /** Platforms supported `(this:VTool)-[relPlatforms]->VPlatform`. Inverse: {@link VPlatform.relTools}. */\n  get relPlatforms() {\n    return new RelFrom(this as unknown as VTool, this.graph.edges.toolRelPlatforms);\n  }\n\n  /** Tags `VTag-[relTools]->(this:VTool)`. Inverse: {@link VTag.relTools}. */\n  get relTags() {\n    return new RelTo(this as unknown as VTool, this.graph.edges.tagRelTools);\n  }\n\n  /** Plangs used to implement this `(this:VTool)-[relWrittenWith]->VPlang`. Inverse: {@link VPlang.relToolsUsing}. */\n  get relWrittenWith() {\n    return new RelFrom(this as unknown as VTool, this.graph.edges.toolRelWrittenWith);\n  }\n}\n\n/** Type of the key of an instance of {@link VTypeSystem}. */\nexport type VTypeSystemKey = `tsys+${string}`;\n\n/** Type System */\nexport abstract class VTypeSystemBase extends PlangsVertex<\"tsys\", VTypeSystemData> {\n  static readonly keyPrefix = \"tsys\";\n  static readonly vertexName = \"typeSystem\";\n  static readonly vertexDesc = \"Type System\";\n\n  /** Describes the edges and direction used for every relationship in this Vertex. */\n  static readonly relations = { relPlangs: { edgeName: \"plangRelTypeSystems\", direction: \"inverse\" } } as const;\n\n  readonly vertexDesc = VTypeSystemBase.vertexDesc;\n\n  /** Plangs implementing this `VPlang-[relTypeSystems]->(this:VTypeSystem)`. Inverse: {@link VPlang.relTypeSystems}. */\n  get relPlangs() {\n    return new RelTo(this as unknown as VTypeSystem, this.graph.edges.plangRelTypeSystems);\n  }\n}\n", "import { arrayMerge } from \"@plangs/auxiliar/array\";\nimport { IterTap } from \"@plangs/auxiliar/iter_tap\";\n\nimport {\n  PlangsGraphBase,\n  VAppBase,\n  VBundleBase,\n  VCommunityBase,\n  VLearningBase,\n  VLibraryBase,\n  VLicenseBase,\n  VParadigmBase,\n  VPlangBase,\n  VPlatformBase,\n  VPostBase,\n  VTagBase,\n  VToolBase,\n  VTypeSystemBase,\n} from \"./generated\";\n\nimport { FieldGithub, FieldReleases } from \"./vertex_data_fields\";\nimport type { Release, StrDate } from \"./vertex_data_schemas\";\n\n// Shortcuts to the configuration objects.\nexport const rel = PlangsGraphBase.relConfig;\nexport const prop = PlangsGraphBase.propConfig;\n\nexport class PlangsGraph extends PlangsGraphBase {\n  /**\n   * We can derive / infer some data from the existing data.\n   * We may implement some sort of inference engine in the future,\n   * but for now we can just materialize some simple rules.\n   */\n  materialize(): this {\n    // All languages implement themselves.\n    for (const pl of this.plang.values) pl.relImplements.add(pl.key);\n\n    // For each bundle, a bundle supports a language if any of its tools support that language.\n    for (const bundle of this.bundle.values) {\n      for (const tool of bundle.relTools.values) {\n        bundle.relPlangs.add(...tool.relPlangs.keys);\n      }\n    }\n\n    return this;\n  }\n}\n\nexport class VApp extends VAppBase {\n  get github(): FieldGithub {\n    return new FieldGithub(this);\n  }\n\n  get releases(): FieldReleases {\n    return new FieldReleases(this);\n  }\n}\n\nexport class VPlang extends VPlangBase {\n  addExtensions(exts: string[]): this {\n    arrayMerge((this.data.extensions ??= []), exts);\n    return this;\n  }\n\n  addFilenames(filenames: string[]): this {\n    arrayMerge((this.data.filenames ??= []), filenames);\n    return this;\n  }\n\n  addReleases(releases: Release[]): this {\n    arrayMerge((this.data.releases ??= []), releases, (r1, r2) => r1.version === r2.version);\n    return this;\n  }\n\n  addStackovTags(stackovTags: string[]): this {\n    arrayMerge((this.data.stackovTags ??= []), stackovTags);\n    return this;\n  }\n\n  get extensions(): IterTap<string> {\n    return new IterTap(this.data.extensions);\n  }\n\n  get github(): FieldGithub {\n    return new FieldGithub(this);\n  }\n\n  get href(): string {\n    return `/${this.plainKey}`;\n  }\n\n  get isPopular(): boolean {\n    const { githubPopular, languishRanking } = this.data;\n    return !!githubPopular || (typeof languishRanking === \"number\" && languishRanking <= 25);\n  }\n\n  get isTranspiler(): boolean {\n    return this.data.isTranspiler === true;\n  }\n\n  get ranking(): number | undefined {\n    return this.data.languishRanking;\n  }\n\n  get releases(): FieldReleases {\n    return new FieldReleases(this);\n  }\n\n  get stackovTags(): IterTap<string> {\n    return new IterTap(this.data.stackovTags);\n  }\n\n  get urlReddit(): string | undefined {\n    return this.data.extRedditPath ? `https://reddit.com/${this.data.extRedditPath}` : undefined;\n  }\n\n  get urlRepository(): string | undefined {\n    return this.data.extRepositoryURL;\n  }\n\n  get urlStackov(): string | undefined {\n    return this.stackovTags ? `https://stackoverflow.com/questions/tagged/${this.stackovTags.join(\"+\")}` : undefined;\n  }\n\n  get urlWikipedia(): string | undefined {\n    return this.data.extWikipediaPath ? `https://github.com/${this.data.extGithubPath}` : undefined;\n  }\n\n  /**\n   * Builds (non-recursively) a set of all languages that this language is related to, not including self.\n   * A language is related if it is compiled to, is a dialect of, or implements this language.\n   */\n  family(opt = { compilesTo: true, dialectOf: true, implements: true }): Set<VPlang> {\n    const set = new Set<VPlang>([]);\n    if (opt.compilesTo) for (const pl of this.relCompilesTo.values) set.add(pl);\n    if (opt.dialectOf) for (const pl of this.relDialectOf.values) set.add(pl);\n    if (opt.implements) for (const pl of this.relImplements.values) set.add(pl);\n    return set;\n  }\n}\n\nexport class VCommunity extends VCommunityBase {}\n\nexport class VLearning extends VLearningBase {}\n\nexport class VLibrary extends VLibraryBase {\n  get github(): FieldGithub {\n    return new FieldGithub(this);\n  }\n\n  get releases(): FieldReleases {\n    return new FieldReleases(this);\n  }\n}\n\nexport class VLicense extends VLicenseBase {\n  get spdx(): string | undefined {\n    return this.data.spdx;\n  }\n\n  get isFSFLibre(): boolean {\n    return this.data.isFSFLibre === true;\n  }\n\n  get isOSIApproved(): boolean {\n    return this.data.isOSIApproved === true;\n  }\n}\n\nexport class VParadigm extends VParadigmBase {}\n\nexport class VPlatform extends VPlatformBase {}\n\nexport class VTag extends VTagBase {}\n\nexport class VTool extends VToolBase {\n  get github(): FieldGithub {\n    return new FieldGithub(this);\n  }\n\n  get releases(): FieldReleases {\n    return new FieldReleases(this);\n  }\n}\n\nexport class VTypeSystem extends VTypeSystemBase {}\n\nexport class VBundle extends VBundleBase {}\n\nexport class VPost extends VPostBase {\n  set path(path: string) {\n    this.data.path = path;\n  }\n\n  get author(): string | undefined {\n    return this.data.author;\n  }\n\n  get date(): StrDate | undefined {\n    return this.data.date;\n  }\n\n  get path(): string | undefined {\n    return this.data.path;\n  }\n\n  get title(): string | undefined {\n    return this.name;\n  }\n\n  get href(): string {\n    return `/blog/${this.plainKey}`;\n  }\n}\n", "import { ValNil, ValNumber } from \"@plangs/auxiliar/value\";\nimport { FragmentTracker } from \"@plangs/frontend/auxiliar/fragment\";\nimport { loadLocalStorage } from \"@plangs/frontend/auxiliar/storage\";\nimport { FacetsMainState } from \"@plangs/frontend/facets/main/state\";\nimport { bool, defineFacetGroups, table, text } from \"@plangs/frontend/facets/main/types\";\nimport { matchVertices } from \"@plangs/plangs/facets\";\nimport type { AppFacetKey } from \"@plangs/plangs/facets/apps\";\nimport { type PlangsGraph, prop, rel } from \"@plangs/plangs/graph\";\nimport type { VAppKey } from \"@plangs/plangs/graph/generated\";\nimport type { TAB } from \"@plangs/server/components/layout\";\n\n// biome-ignore format: Keep it in one line.\ntype GK = \"creationYear\" | \"general\" | \"licenses\" | \"platforms\" | \"tags\" | \"writtenWith\";\ntype FK = AppFacetKey;\n\nconst [GROUPS, GK_BY_FK, COMPONENT] = defineFacetGroups<GK, FK>({\n  creationYear: { title: \"Creation Year\", facets: [table(\"creationYear\", \"Creation Year\", prop(\"app\", \"created\"))] },\n  general: {\n    title: \"General\",\n    facets: [\n      text(\"name\", \"App Name\"),\n      bool(\"createdRecently\", \"Created Recently\", (checked: boolean) => (checked ? new ValNumber(new Date().getFullYear() - 5) : new ValNil())),\n      bool(\"releasedRecently\", \"Released Recently\", (checked: boolean) => (checked ? new ValNumber(new Date().getFullYear() - 1) : new ValNil())),\n      text(\"ghStars\", \"GitHub Stars\"),\n    ],\n  },\n  licenses: { title: \"Licenses\", facets: [table(\"licenses\", \"Licenses\", rel(\"app\", \"relLicenses\"))] },\n  platforms: { title: \"Platforms\", facets: [table(\"platforms\", \"Platforms\", rel(\"app\", \"relPlatforms\"))] },\n  tags: { title: \"Tags\", facets: [table(\"tags\", \"Tags\", rel(\"app\", \"relTags\"))] },\n  writtenWith: { title: \"Written With\", facets: [table(\"writtenWith\", \"Written With\", rel(\"app\", \"relWrittenWith\"))] },\n});\n\nconst APPS_TAB: TAB = \"apps\";\nconst NAV: { groupKeys: GK[][]; default: GK } = {\n  groupKeys: [[\"general\"], [\"writtenWith\"], [\"tags\", \"creationYear\", \"licenses\"], [\"platforms\"]],\n  default: \"general\",\n};\n\nexport class AppsFacetsState extends FacetsMainState<GK, AppFacetKey> {\n  override readonly nav = NAV;\n  override readonly tab = APPS_TAB;\n  override readonly gkByFk = GK_BY_FK;\n  override readonly groupsConfig = GROUPS;\n  override readonly groupsComponent = COMPONENT;\n\n  static initial(pg: PlangsGraph): AppsFacetsState {\n    const currentGroupKey = loadLocalStorage(APPS_TAB, \"lastGroup\") ?? NAV.default;\n    const values = FacetsMainState.deserialize(GK_BY_FK, FragmentTracker.deserialize() ?? loadLocalStorage(APPS_TAB, \"inputs\"));\n    return new AppsFacetsState({ pg, currentGroupKey, values });\n  }\n\n  override get results(): Set<VAppKey> {\n    if (!this.pg) return new Set();\n    return matchVertices(this.pg.app, this.values.getMap2());\n  }\n}\n", "import { ValNil, ValNumber } from \"@plangs/auxiliar/value\";\nimport { FragmentTracker } from \"@plangs/frontend/auxiliar/fragment\";\nimport { loadLocalStorage } from \"@plangs/frontend/auxiliar/storage\";\nimport { FacetsMainState } from \"@plangs/frontend/facets/main/state\";\nimport { bool, defineFacetGroups, table, text } from \"@plangs/frontend/facets/main/types\";\nimport { matchVertices } from \"@plangs/plangs/facets\";\nimport type { CommunityFacetKey } from \"@plangs/plangs/facets/communities\";\nimport { type PlangsGraph, prop, rel } from \"@plangs/plangs/graph\";\nimport type { VCommunityKey } from \"@plangs/plangs/graph/generated\";\nimport type { TAB } from \"@plangs/server/components/layout\";\n\n// biome-ignore format: Keep it in one line.\ntype GK = \"creationYear\" | \"general\" | \"plangs\" | \"libraries\" | \"apps\" | \"tools\" | \"tags\";\ntype FK = CommunityFacetKey;\n\nconst [GROUPS, GK_BY_FK, COMPONENT] = defineFacetGroups<GK, FK>({\n  creationYear: { title: \"Creation Year\", facets: [table(\"creationYear\", \"Creation Year\", prop(\"community\", \"created\"))] },\n  general: {\n    title: \"General\",\n    facets: [\n      text(\"name\", \"Community Name\"),\n      bool(\"createdRecently\", \"Created Recently\", (checked: boolean) => (checked ? new ValNumber(new Date().getFullYear() - 5) : new ValNil())),\n    ],\n  },\n  apps: { title: \"Licenses\", facets: [table(\"apps\", \"Apps\", rel(\"community\", \"relApps\"))] },\n  libraries: { title: \"Platforms\", facets: [table(\"libraries\", \"libraries\", rel(\"community\", \"relLibraries\"))] },\n  tags: { title: \"Tags\", facets: [table(\"tags\", \"Tags\", rel(\"community\", \"relTags\"))] },\n  plangs: { title: \"Written For\", facets: [table(\"plangs\", \"Plangs\", rel(\"community\", \"relPlangs\"))] },\n  tools: { title: \"Written With\", facets: [table(\"tools\", \"Tools\", rel(\"community\", \"relTools\"))] },\n});\n\nconst COMMUNITY_TAB: TAB = \"communities\";\nconst NAV: { groupKeys: GK[][]; default: GK } = {\n  groupKeys: [[\"general\"], [\"plangs\", \"libraries\"], [\"apps\", \"tools\"], [\"tags\"]],\n  default: \"general\",\n};\n\nexport class CommunitiesFacetsState extends FacetsMainState<GK, CommunityFacetKey> {\n  override readonly nav = NAV;\n  override readonly tab = COMMUNITY_TAB;\n  override readonly gkByFk = GK_BY_FK;\n  override readonly groupsConfig = GROUPS;\n  override readonly groupsComponent = COMPONENT;\n\n  static initial(pg: PlangsGraph): CommunitiesFacetsState {\n    const currentGroupKey = loadLocalStorage(COMMUNITY_TAB, \"lastGroup\") ?? NAV.default;\n    const values = FacetsMainState.deserialize(GK_BY_FK, FragmentTracker.deserialize() ?? loadLocalStorage(COMMUNITY_TAB, \"inputs\"));\n    return new CommunitiesFacetsState({ pg, currentGroupKey, values });\n  }\n\n  override get results(): Set<VCommunityKey> {\n    if (!this.pg) return new Set();\n    return matchVertices(this.pg.community, this.values.getMap2());\n  }\n}\n", "import { ValNil, ValNumber } from \"@plangs/auxiliar/value\";\nimport { FragmentTracker } from \"@plangs/frontend/auxiliar/fragment\";\nimport { loadLocalStorage } from \"@plangs/frontend/auxiliar/storage\";\nimport { FacetsMainState } from \"@plangs/frontend/facets/main/state\";\nimport { bool, defineFacetGroups, table, text } from \"@plangs/frontend/facets/main/types\";\nimport { matchVertices } from \"@plangs/plangs/facets\";\nimport type { LearningFacetKey } from \"@plangs/plangs/facets/learning\";\nimport { type PlangsGraph, prop, rel } from \"@plangs/plangs/graph\";\nimport type { VLearningKey } from \"@plangs/plangs/graph/generated\";\nimport type { TAB } from \"@plangs/server/components/layout\";\n\n// biome-ignore format: Keep it in one line.\ntype GK = \"creationYear\" | \"general\" | \"plangs\" | \"libraries\" | \"apps\" | \"tools\" | \"tags\";\ntype FK = LearningFacetKey;\n\nconst [GROUPS, GK_BY_FK, COMPONENT] = defineFacetGroups<GK, FK>({\n  creationYear: { title: \"Creation Year\", facets: [table(\"creationYear\", \"Creation Year\", prop(\"learning\", \"created\"))] },\n  general: {\n    title: \"General\",\n    facets: [\n      text(\"name\", \"Learning Name\"),\n      bool(\"createdRecently\", \"Created Recently\", (checked: boolean) => (checked ? new ValNumber(new Date().getFullYear() - 5) : new ValNil())),\n    ],\n  },\n  apps: { title: \"Apps\", facets: [table(\"apps\", \"Apps\", rel(\"learning\", \"relApps\"))] },\n  libraries: { title: \"Libraries\", facets: [table(\"libraries\", \"libraries\", rel(\"learning\", \"relLibraries\"))] },\n  tags: { title: \"Tags\", facets: [table(\"tags\", \"Tags\", rel(\"learning\", \"relTags\"))] },\n  plangs: { title: \"Plangs\", facets: [table(\"plangs\", \"Plangs\", rel(\"learning\", \"relPlangs\"))] },\n  tools: { title: \"Tools\", facets: [table(\"tools\", \"Tools\", rel(\"learning\", \"relTools\"))] },\n});\n\nconst COMMUNITY_TAB: TAB = \"communities\";\nconst NAV: { groupKeys: GK[][]; default: GK } = {\n  groupKeys: [[\"general\"], [\"plangs\", \"libraries\"], [\"apps\", \"tools\"], [\"tags\"]],\n  default: \"general\",\n};\n\nexport class LearningFacetsState extends FacetsMainState<GK, LearningFacetKey> {\n  override readonly nav = NAV;\n  override readonly tab = COMMUNITY_TAB;\n  override readonly gkByFk = GK_BY_FK;\n  override readonly groupsConfig = GROUPS;\n  override readonly groupsComponent = COMPONENT;\n\n  static initial(pg: PlangsGraph): LearningFacetsState {\n    const currentGroupKey = loadLocalStorage(COMMUNITY_TAB, \"lastGroup\") ?? NAV.default;\n    const values = FacetsMainState.deserialize(GK_BY_FK, FragmentTracker.deserialize() ?? loadLocalStorage(COMMUNITY_TAB, \"inputs\"));\n    return new LearningFacetsState({ pg, currentGroupKey, values });\n  }\n\n  override get results(): Set<VLearningKey> {\n    if (!this.pg) return new Set();\n    return matchVertices(this.pg.learning, this.values.getMap2());\n  }\n}\n", "import { ValNil, ValNumber } from \"@plangs/auxiliar/value\";\nimport { FragmentTracker } from \"@plangs/frontend/auxiliar/fragment\";\nimport { loadLocalStorage } from \"@plangs/frontend/auxiliar/storage\";\nimport { FacetsMainState } from \"@plangs/frontend/facets/main/state\";\nimport { matchVertices } from \"@plangs/plangs/facets\";\nimport type { LibraryFacetKey } from \"@plangs/plangs/facets/libraries\";\nimport { type PlangsGraph, prop, rel } from \"@plangs/plangs/graph\";\nimport type { VLibraryKey } from \"@plangs/plangs/graph/generated\";\nimport type { TAB } from \"@plangs/server/components/layout\";\nimport { bool, defineFacetGroups, table, text } from \"../main/types\";\n\n// biome-ignore format: Keep it in one line.\ntype GK = \"creationYear\" | \"general\" | \"licenses\" | \"platforms\" | \"tags\" | \"writtenWith\" | \"writtenFor\";\ntype FK = LibraryFacetKey;\n\nconst [GROUPS, GK_BY_FK, COMPONENT] = defineFacetGroups<GK, FK>({\n  creationYear: { title: \"Creation Year\", facets: [table(\"creationYear\", \"Creation Year\", prop(\"library\", \"created\"))] },\n  general: {\n    title: \"General\",\n    facets: [\n      text(\"name\", \"Library Name\"),\n      bool(\"createdRecently\", \"Created Recently\", (checked: boolean) => (checked ? new ValNumber(new Date().getFullYear() - 5) : new ValNil())),\n      bool(\"releasedRecently\", \"Released Recently\", (checked: boolean) => (checked ? new ValNumber(new Date().getFullYear() - 1) : new ValNil())),\n      text(\"ghStars\", \"GitHub Stars\"),\n    ],\n  },\n  licenses: {\n    title: \"Licenses\",\n    facets: [table(\"licenses\", \"Licenses\", rel(\"library\", \"relLicenses\"))],\n  },\n  platforms: {\n    title: \"Platforms\",\n    facets: [table(\"platforms\", \"Platforms\", rel(\"library\", \"relPlatforms\"))],\n  },\n  tags: {\n    title: \"Tags\",\n    facets: [table(\"tags\", \"Tags\", rel(\"library\", \"relTags\"))],\n  },\n  writtenWith: { title: \"Written With \", facets: [table(\"writtenWith\", \"Written With\", rel(\"library\", \"relWrittenWith\"))] },\n  writtenFor: { title: \"Written For\", facets: [table(\"writtenFor\", \"Written For\", rel(\"tool\", \"relPlangs\"))] },\n});\n\nconst LIBS_TAB: TAB = \"libs\";\nconst NAV: { groupKeys: GK[][]; default: GK } = {\n  groupKeys: [[\"general\"], [\"writtenWith\", \"writtenFor\"], [\"tags\", \"creationYear\", \"licenses\"], [\"platforms\"]],\n  default: \"general\",\n};\n\nexport class LibrariesFacetsState extends FacetsMainState<GK, LibraryFacetKey> {\n  override readonly nav = NAV;\n  override readonly tab = LIBS_TAB;\n  override readonly gkByFk = GK_BY_FK;\n  override readonly groupsConfig = GROUPS;\n  override readonly groupsComponent = COMPONENT;\n\n  static initial(pg: PlangsGraph): LibrariesFacetsState {\n    const currentGroupKey = loadLocalStorage(LIBS_TAB, \"lastGroup\") ?? NAV.default;\n    const values = FacetsMainState.deserialize(GK_BY_FK, FragmentTracker.deserialize() ?? loadLocalStorage(LIBS_TAB, \"inputs\"));\n    return new LibrariesFacetsState({ pg, currentGroupKey, values });\n  }\n\n  override get results(): Set<VLibraryKey> {\n    if (!this.pg) return new Set();\n    return matchVertices(this.pg.library, this.values.getMap2());\n  }\n}\n", "import { ValNil, ValNumber } from \"@plangs/auxiliar/value\";\nimport { FragmentTracker } from \"@plangs/frontend/auxiliar/fragment\";\nimport { loadLocalStorage } from \"@plangs/frontend/auxiliar/storage\";\nimport { FacetsMainState } from \"@plangs/frontend/facets/main/state\";\nimport { bool, defineFacetGroups, multi, table, text } from \"@plangs/frontend/facets/main/types\";\nimport { matchVertices } from \"@plangs/plangs/facets\";\nimport type { PlangFacetKey } from \"@plangs/plangs/facets/plangs\";\nimport { type PlangsGraph, prop, rel } from \"@plangs/plangs/graph\";\nimport type { VPlangKey } from \"@plangs/plangs/graph/generated\";\nimport type { TAB } from \"@plangs/server/components/layout\";\n\n// biome-ignore format: Keep it in one line.\ntype GK = \"creationYear\" | \"dialectOf\" | \"general\" | \"implements\" | \"influenced\" | \"influencedBy\" | \"licenses\" | \"paradigms\" | \"platforms\" | \"tags\" | \"transpiler\" | \"typeSystems\" | \"writtenWith\";\ntype FK = PlangFacetKey;\n\nconst [GROUPS, GK_BY_FK, COMPONENT] = defineFacetGroups<GK, FK>({\n  creationYear: { title: \"Creation Year\", facets: [table(\"creationYear\", \"Creation Year\", prop(\"plang\", \"created\"))] },\n  dialectOf: { title: \"Dialect Of\", facets: [table(\"dialectOf\", \"Dialect Of\", rel(\"plang\", \"relDialectOf\"))] },\n  general: {\n    title: \"General\",\n    facets: [\n      text(\"plangName\", \"Plang Name\"),\n      bool(\"createdRecently\", \"Created Recently\", (checked: boolean) => (checked ? new ValNumber(new Date().getFullYear() - 5) : new ValNil())),\n      bool(\"releasedRecently\", \"Released Recently\", (checked: boolean) => (checked ? new ValNumber(new Date().getFullYear() - 1) : new ValNil())),\n      bool(\"isPopular\", \"Is Popular\"),\n      bool(\"hasLogo\", \"Has Logo\"),\n      bool(\"hasWikipedia\", \"Has Wikipedia\"),\n      multi(\"extensions\", \"Extensions\"),\n    ],\n  },\n  implements: {\n    title: \"Implements\",\n    facets: [\n      table(\"implements\", \"Implements\", { ...rel(\"plang\", \"relImplements\"), minEntries: 2 }), // All plangs implement themselves.\n    ],\n  },\n  influenced: { title: \"Influenced\", facets: [table(\"influenced\", \"Influenced\", rel(\"plang\", \"relInfluenced\"))] },\n  influencedBy: { title: \"Influenced By\", facets: [table(\"influencedBy\", \"Influenced By\", rel(\"plang\", \"relInfluencedBy\"))] },\n  licenses: { title: \"Licenses\", facets: [table(\"licenses\", \"Licenses\", rel(\"plang\", \"relLicenses\"))] },\n  paradigms: { title: \"Paradigms\", facets: [table(\"paradigms\", \"Paradigms\", rel(\"plang\", \"relParadigms\"))] },\n  platforms: { title: \"Platforms\", facets: [table(\"platforms\", \"Platforms\", rel(\"plang\", \"relPlatforms\"))] },\n  tags: { title: \"Tags\", facets: [table(\"tags\", \"Tags\", rel(\"plang\", \"relTags\"))] },\n  transpiler: {\n    title: \"Transpiler\",\n    facets: [bool(\"isTranspiler\", \"Is Transpiler\"), table(\"compilesTo\", \"Compiles To\", rel(\"plang\", \"relCompilesTo\"))],\n  },\n  typeSystems: { title: \"Type Systems\", facets: [table(\"typeSystems\", \"Type Systems\", rel(\"plang\", \"relTypeSystems\"))] },\n  writtenWith: { title: \"Written With\", facets: [table(\"writtenWith\", \"Written With\", rel(\"plang\", \"relWrittenWith\"))] },\n});\n\nconst PLANGS_TAB: TAB = \"plangs\";\nconst NAV: { groupKeys: GK[][]; default: GK } = {\n  groupKeys: [\n    [\"general\"],\n    [\"platforms\", \"paradigms\", \"typeSystems\"],\n    [\"writtenWith\", \"transpiler\", \"dialectOf\", \"implements\", \"influencedBy\", \"influenced\"],\n    [\"tags\", \"creationYear\", \"licenses\"],\n  ],\n  default: \"general\",\n};\n\nexport class PlangsFacetsState extends FacetsMainState<GK, PlangFacetKey> {\n  override readonly nav = NAV;\n  override readonly tab = PLANGS_TAB;\n  override readonly gkByFk = GK_BY_FK;\n  override readonly groupsConfig = GROUPS;\n  override readonly groupsComponent = COMPONENT;\n\n  static initial(pg: PlangsGraph): PlangsFacetsState {\n    const currentGroupKey = loadLocalStorage(PLANGS_TAB, \"lastGroup\") ?? NAV.default;\n    const values = FacetsMainState.deserialize(GK_BY_FK, FragmentTracker.deserialize() ?? loadLocalStorage(PLANGS_TAB, \"inputs\"));\n    return new PlangsFacetsState({ pg, currentGroupKey, values });\n  }\n\n  override get results(): Set<VPlangKey> {\n    if (!this.pg) return new Set();\n    return matchVertices(this.pg.plang, this.values.getMap2());\n  }\n}\n", "import { ValNil, ValNumber } from \"@plangs/auxiliar/value\";\nimport { FragmentTracker } from \"@plangs/frontend/auxiliar/fragment\";\nimport { loadLocalStorage } from \"@plangs/frontend/auxiliar/storage\";\nimport { FacetsMainState } from \"@plangs/frontend/facets/main/state\";\nimport { bool, defineFacetGroups, table, text } from \"@plangs/frontend/facets/main/types\";\nimport { matchVertices } from \"@plangs/plangs/facets\";\nimport type { ToolFacetKey } from \"@plangs/plangs/facets/tools\";\nimport { type PlangsGraph, prop, rel } from \"@plangs/plangs/graph\";\nimport type { VToolKey } from \"@plangs/plangs/graph/generated\";\nimport type { TAB } from \"@plangs/server/components/layout\";\n\n// biome-ignore format: Keep it in one line.\ntype GK = \"creationYear\" | \"general\" | \"licenses\" | \"platforms\" | \"tags\" | \"writtenFor\" | \"writtenWith\";\ntype FK = ToolFacetKey;\n\nconst [GROUPS, GK_BY_FK, COMPONENT] = defineFacetGroups<GK, FK>({\n  creationYear: { title: \"Creation Year\", facets: [table(\"creationYear\", \"Creation Year\", prop(\"tool\", \"created\"))] },\n  general: {\n    title: \"General\",\n    facets: [\n      text(\"name\", \"Tool Name\"),\n      bool(\"createdRecently\", \"Created Recently\", (checked: boolean) => (checked ? new ValNumber(new Date().getFullYear() - 5) : new ValNil())),\n      bool(\"releasedRecently\", \"Released Recently\", (checked: boolean) => (checked ? new ValNumber(new Date().getFullYear() - 1) : new ValNil())),\n      text(\"ghStars\", \"GitHub Stars\"),\n    ],\n  },\n  licenses: { title: \"Licenses\", facets: [table(\"licenses\", \"Licenses\", rel(\"tool\", \"relLicenses\"))] },\n  platforms: { title: \"Platforms\", facets: [table(\"platforms\", \"Platforms\", rel(\"tool\", \"relPlatforms\"))] },\n  tags: { title: \"Tags\", facets: [table(\"tags\", \"Tags\", rel(\"tool\", \"relTags\"))] },\n  writtenFor: { title: \"Written For\", facets: [table(\"writtenFor\", \"Written For\", rel(\"tool\", \"relPlangs\"))] },\n  writtenWith: { title: \"Written With\", facets: [table(\"writtenWith\", \"Written With\", rel(\"tool\", \"relWrittenWith\"))] },\n});\n\nconst TOOLS_TAB: TAB = \"tools\";\nconst NAV: { groupKeys: GK[][]; default: GK } = {\n  groupKeys: [[\"general\"], [\"writtenWith\", \"writtenFor\"], [\"tags\", \"creationYear\", \"licenses\"], [\"platforms\"]],\n  default: \"general\",\n};\n\nexport class ToolsFacetsState extends FacetsMainState<GK, ToolFacetKey> {\n  override readonly nav = NAV;\n  override readonly tab = TOOLS_TAB;\n  override readonly gkByFk = GK_BY_FK;\n  override readonly groupsConfig = GROUPS;\n  override readonly groupsComponent = COMPONENT;\n\n  static initial(pg: PlangsGraph): ToolsFacetsState {\n    const currentGroupKey = loadLocalStorage(TOOLS_TAB, \"lastGroup\") ?? NAV.default;\n    const values = FacetsMainState.deserialize(GK_BY_FK, FragmentTracker.deserialize() ?? loadLocalStorage(TOOLS_TAB, \"inputs\"));\n    return new ToolsFacetsState({ pg, currentGroupKey, values });\n  }\n\n  override get results(): Set<VToolKey> {\n    if (!this.pg) return new Set();\n    return matchVertices(this.pg.tool, this.values.getMap2());\n  }\n}\n", "import { createContext } from \"preact\";\n\nimport { useDispatchable } from \"@plangs/frontend/auxiliar/dispatchable\";\nimport type { PlangsGraph } from \"@plangs/plangs/graph\";\nimport type { TAB } from \"@plangs/server/components/layout\";\nimport { AppsFacetsState } from \"../kind/apps\";\nimport { CommunitiesFacetsState } from \"../kind/communities\";\nimport { LearningFacetsState } from \"../kind/learning\";\nimport { LibrariesFacetsState } from \"../kind/libraries\";\nimport { PlangsFacetsState } from \"../kind/plangs\";\nimport { ToolsFacetsState } from \"../kind/tools\";\nimport type { FacetsMainState } from \"./state\";\n\n/** Share the main component state across all other children components that may need it. */\nexport const FacetsMainContext = createContext<AnyFacetsMainState | undefined>(undefined);\n\n/** Generic state so components can work with any group and facet key. */\nexport type AnyFacetsMainState = FacetsMainState<string, string>;\n\nexport function useFacetState(tab: TAB, pg: PlangsGraph): AnyFacetsMainState | undefined {\n  let state: AnyFacetsMainState | undefined;\n\n  if (tab === \"apps\") state = useDispatchable(() => AppsFacetsState.initial(pg) as AnyFacetsMainState);\n  if (tab === \"communities\") state = useDispatchable(() => CommunitiesFacetsState.initial(pg) as AnyFacetsMainState);\n  if (tab === \"learning\") state = useDispatchable(() => LearningFacetsState.initial(pg) as AnyFacetsMainState);\n  if (tab === \"libs\") state = useDispatchable(() => LibrariesFacetsState.initial(pg) as AnyFacetsMainState);\n  if (tab === \"plangs\") state = useDispatchable(() => PlangsFacetsState.initial(pg) as AnyFacetsMainState);\n  if (tab === \"tools\") state = useDispatchable(() => ToolsFacetsState.initial(pg) as AnyFacetsMainState);\n\n  if (!state) {\n    console.error(\"Unknown tab\", tab);\n    return;\n  }\n\n  // Ensures the initial side effects are enforced: for instance filtering thumbs according to state fragment/localStorage.\n  return state.runEffects();\n}\n", "import { Fragment, type Ref } from \"preact\";\nimport { useEffect } from \"preact/hooks\";\n\nimport { useRootState } from \"@plangs/frontend/auxiliar/dispatchable\";\nimport { onClickOnEnter } from \"@plangs/frontend/auxiliar/dom\";\nimport { FULLCIRCLE } from \"@plangs/frontend/auxiliar/icons\";\nimport { BORDER, HOVER, tw } from \"@plangs/frontend/auxiliar/styles\";\nimport type { PlangsGraph } from \"@plangs/plangs/graph\";\nimport type { TAB } from \"@plangs/server/components/layout\";\n\nimport { FacetsMainContext, useFacetState } from \"./use_state\";\n\nexport function FacetsMain({ tab, pg }: { tab: TAB; pg: PlangsGraph }) {\n  const state = useFacetState(tab, pg);\n  const self = useRootState(state);\n\n  // Subscribe to user changes to reset the form when the user changes URL fragment.\n  useEffect(() => window.fragment.onUserChange(ev => state?.doResetAll(ev.deserFrag)));\n\n  const body = () =>\n    !state ? null : (\n      <FacetsMainContext.Provider value={state}>\n        {/* Wrapper to avoid streteching the links to the bottom of the screen. */}\n        <div class={tw(tw(BORDER, \"border-r-1\"), \"overflow-y-scroll\", \"shrink-0 grow-0\")}>\n          <div class={tw(\"grid grid-cols-[auto_auto]\", \"gap-2\", \"pt-1\")}>\n            {state.nav.groupKeys.flatMap(keys => (\n              // Subgrid respects the alignment of indicators while allowing to group the links and add a border.\n              <div key={keys.join(\"-\")} class={tw(\"col-span-2\", \"grid grid-cols-subgrid\", \"items-center\", \"pb-2\", tw(BORDER, \"border-b-1\"))}>\n                {/* biome-ignore lint/suspicious/noExplicitAny: we set as any here since the groupKey is actually a string that can belong to _any_ facet group. */}\n                {keys.map((groupKey: any) => (\n                  <Fragment key={groupKey}>\n                    <div class={tw(\"mt-[.45rem] pl-1\", state.groupHasValues(groupKey) ? \"text-primary\" : \"text-foreground/20 text-xs\")}>\n                      <div class=\"-mt-[2px] scale-66\">{FULLCIRCLE}</div>\n                    </div>\n                    <button\n                      {...onClickOnEnter(() => state.doSetCurrentGroup(groupKey))}\n                      class={tw(\n                        \"block\",\n                        \"truncate text-left\",\n                        \"mr-2 px-1 py-1\",\n                        state.currentGroupKey === groupKey ? \"text-primary\" : \"text-foreground/85\",\n                        \"underline decoration-1 decoration-dotted\",\n                        \"cursor-pointer\",\n                        HOVER,\n                      )}>\n                      {state.groupTitle(groupKey)}\n                    </button>\n                  </Fragment>\n                ))}\n              </div>\n            ))}\n          </div>\n        </div>\n        <div class={tw(\"flex w-full flex-col\", \"overflow-hidden\", \"bg-linear-to-b to-secondary/50\")}>\n          <state.groupsComponent currentFacetGroup={state.currentGroupKey} />\n        </div>\n      </FacetsMainContext.Provider>\n    );\n\n  return (\n    <aside\n      ref={self as Ref<HTMLElement>}\n      class={tw(\"flex flex-row\", \"max-h-full overflow-hidden\", tw(BORDER, \"border-b-1\", \"border-t-1\", \"sm:border-r-1\"))}>\n      {body()}\n    </aside>\n  );\n}\n", "import { render } from \"preact\";\n\nimport { elems } from \"@plangs/frontend/auxiliar/dom\";\nimport { tw } from \"@plangs/frontend/auxiliar/styles\";\nimport type { PlangsGraph } from \"@plangs/plangs/graph\";\nimport type { TAB } from \"@plangs/server/components/layout\";\nimport { cssClass } from \"@plangs/server/elements\";\n\nimport { FacetsMain } from \"./main\";\nimport type { AnyFacetsMainState } from \"./use_state\";\n\nconst CL = \"facetsMain\";\n\nexport type FacetsMainElement = HTMLDivElement & { state?: AnyFacetsMainState };\n\n/** Used server side to create a div to act as entry point of a {@link FacetsMain} component. */\nexport function facetsMain({ tab, class: klass }: { tab: TAB; class: string }) {\n  return <div data-tab={tab} class={tw(klass, cssClass(CL))} />;\n}\n\n/** Find {@link FacetsMain} component/s in the DOM and render them. */\nexport function activateFacetsMain(pg: PlangsGraph) {\n  for (const elem of elems(CL)) {\n    if (pg && elem.dataset.tab) {\n      render(<FacetsMain pg={pg} tab={elem.dataset.tab as TAB} />, elem);\n    } else {\n      console.error(\"Missing prop for FacetsMain component.\");\n    }\n  }\n}\n", "import \"preact/debug\";\n\nimport { data, elem } from \"@plangs/frontend/auxiliar/dom\";\nimport { on } from \"@plangs/frontend/auxiliar/events\";\nimport { FragmentTracker } from \"@plangs/frontend/auxiliar/fragment\";\nimport { connectLivereload } from \"@plangs/frontend/auxiliar/livereload\";\nimport { activateIconButtons } from \"@plangs/frontend/components/icon-button\";\nimport { ToggleFacetsMenu, ToggleHamburguer, ToggleLights } from \"@plangs/frontend/components/icon-button/state\";\nimport { renderVertexInfo } from \"@plangs/frontend/components/vertex-info\";\nimport { activateFacetsMain } from \"@plangs/frontend/facets/main\";\nimport { PlangsGraph, VPlang } from \"@plangs/plangs/graph\";\nimport type { VPlangKey } from \"@plangs/plangs/graph/generated\";\nimport { dataKey } from \"@plangs/server/elements\";\n\n/** Attempt to load a plang using the nearest data-key attribute. */\nfunction getPlang(pg: PlangsGraph, target: EventTarget | null): VPlang | undefined {\n  const key = data((target as Element).closest(`[${dataKey(\"vertex-key\")}]`), \"vertex-key\");\n  if (key) return pg.plang.get(key as VPlangKey);\n}\n\n/** Get the latest plang from local storage, or a default one. */\nfunction lastPlang(pg: PlangsGraph): VPlang | undefined {\n  try {\n    const { key, data } = JSON.parse(localStorage.getItem(\"last-plang\") || \"{}\");\n    // This instance will not be part of the plangs graph vertex map,\n    // but that's okay, since it's only used for rendering once on load.\n    return new VPlang(pg, key).merge(data);\n  } catch (err) {\n    console.warn(err);\n  }\n}\n\nfunction renderLastVertexInfo(pg: PlangsGraph) {\n  const vertex = lastPlang(pg);\n  if (vertex) renderVertexInfo({ vertex, tab: \"plangs\" });\n}\n\nasync function start() {\n  const pg = new PlangsGraph();\n  const loadData = fetch(\"/plangs.json\")\n    .then(async r => pg.loadJSON(await r.json()))\n    .then(g => g.materialize());\n\n  window.fragment = new FragmentTracker().bind();\n  window.restoreFilters = () => ToggleFacetsMenu.initial().runEffects();\n  window.restoreHamburguer = () => ToggleHamburguer.initial().runEffects();\n  window.restoreLightMode = () => ToggleLights.initial().runEffects();\n  window.restoreVertexInfo = () => renderLastVertexInfo(pg); // NOTE: this doesn't need the fully loaded data.\n\n  document.addEventListener(\"DOMContentLoaded\", () => {\n    activateIconButtons();\n\n    loadData.then(() => {\n      activateFacetsMain(pg);\n\n      const grid = elem(\"vertexGrid\");\n      if (!grid) return;\n\n      on(grid, \"pointerdown\", ({ target }: MouseEvent) => {\n        const pl = getPlang(pg, target);\n        if (pl) renderVertexInfo({ vertex: pl, tab: \"plangs\" });\n      });\n\n      // On double-click, open the language page.\n      on(grid, \"dblclick\", ({ target }: MouseEvent) => {\n        const pl = getPlang(pg, target);\n        if (pl) window.location.href = `/${pl.plainKey}`;\n      });\n    });\n  });\n}\n\n// This is a global variable that is set by the build system.\ndeclare const DEVEL: boolean;\nif (DEVEL) {\n  try {\n    connectLivereload();\n  } catch (err) {\n    console.error(err);\n  }\n}\n\nstart();\n\n// Declare some globals that are called as the page is being loaded to avoid flashing the wrong content.\ndeclare global {\n  interface Window {\n    fragment: FragmentTracker;\n    restoreFilters: () => void;\n    restoreHamburguer: () => void;\n    restoreLightMode: () => void;\n    restoreVertexInfo: () => void;\n  }\n}\n"],
  "mappings": "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",
  "names": ["slice", "options", "vnodeId", "isValidElement", "rerenderQueue", "prevDebounce", "defer", "depthSort", "eventClock", "eventProxy", "eventProxyCapture", "i", "EMPTY_OBJ", "EMPTY_ARR", "IS_NON_DIMENSIONAL", "isArray", "Array", "assign", "obj", "props", "removeNode", "node", "parentNode", "removeChild", "createElement", "type", "children", "key", "ref", "normalizedProps", "arguments", "length", "call", "defaultProps", "createVNode", "original", "vnode", "__k", "__", "__b", "__e", "__d", "__c", "constructor", "__v", "__i", "__u", "Fragment", "props", "children", "BaseComponent", "context", "this", "getDomSibling", "vnode", "childIndex", "__", "__i", "sibling", "__k", "length", "__e", "type", "updateParentDomPointers", "i", "child", "__c", "base", "enqueueRender", "c", "__d", "rerenderQueue", "push", "process", "__r", "prevDebounce", "options", "debounceRendering", "defer", "renderQueueLength", "component", "newVNode", "oldVNode", "oldDom", "commitQueue", "refQueue", "sort", "depthSort", "shift", "__v", "__P", "assign", "diff", "__n", "namespaceURI", "__u", "commitRoot", "diffChildren", "parentDom", "renderResult", "newParentVNode", "oldParentVNode", "globalContext", "namespace", "excessDomChildren", "isHydrating", "childVNode", "newDom", "firstChildDom", "oldChildren", "EMPTY_ARR", "newChildrenLength", "constructNewChildrenArray", "EMPTY_OBJ", "ref", "applyRef", "insert", "nextSibling", "skewedIndex", "matchingIndex", "oldChildrenLength", "remainingOldChildren", "skew", "constructor", "String", "createVNode", "isArray", "__b", "key", "findMatchingIndex", "unmount", "parentVNode", "contains", "insertBefore", "nodeType", "findMatchingIndex", "childVNode", "oldChildren", "skewedIndex", "remainingOldChildren", "key", "type", "x", "y", "oldVNode", "__u", "shouldSearch", "length", "setStyle", "style", "value", "setProperty", "IS_NON_DIMENSIONAL", "test", "dom", "name", "oldValue", "namespace", "useCapture", "o", "cssText", "replace", "toLowerCase", "slice", "l", "_attached", "eventClock", "addEventListener", "eventProxyCapture", "eventProxy", "removeEventListener", "e", "removeAttribute", "setAttribute", "createEventProxy", "this", "eventHandler", "_dispatched", "options", "event", "diff", "parentDom", "newVNode", "globalContext", "excessDomChildren", "commitQueue", "oldDom", "isHydrating", "refQueue", "tmp", "c", "isNew", "oldProps", "oldState", "snapshot", "clearProcessingException", "newProps", "isClassComponent", "provider", "componentContext", "i", "renderHook", "count", "renderResult", "newType", "constructor", "__e", "__b", "outer", "props", "prototype", "render", "contextType", "__c", "__", "__E", "BaseComponent", "doRender", "sub", "state", "context", "__n", "__d", "__h", "_sb", "__s", "getDerivedStateFromProps", "assign", "__v", "componentWillMount", "componentDidMount", "push", "componentWillReceiveProps", "shouldComponentUpdate", "__k", "forEach", "vnode", "componentWillUpdate", "componentDidUpdate", "__P", "__r", "getChildContext", "getSnapshotBeforeUpdate", "diffChildren", "isArray", "Fragment", "children", "base", "MODE_HYDRATE", "nodeType", "nextSibling", "indexOf", "diffElementNodes", "diffed", "commitRoot", "root", "applyRef", "some", "cb", "call", "newHtml", "oldHtml", "newChildren", "inputValue", "checked", "localName", "document", "createTextNode", "createElementNS", "is", "data", "childNodes", "EMPTY_OBJ", "attributes", "__html", "innerHTML", "getDomSibling", "removeNode", "ref", "hasRefUnmount", "current", "unmount", "parentVNode", "skipRemove", "r", "componentWillUnmount", "replaceNode", "createElement", "namespaceURI", "firstChild", "createContext", "defaultValue", "contextId", "context", "__c", "i", "__", "Consumer", "props", "contextValue", "children", "Provider", "subs", "ctx", "this", "getChildContext", "componentWillUnmount", "shouldComponentUpdate", "_props", "value", "some", "c", "__e", "enqueueRender", "sub", "push", "old", "splice", "indexOf", "call", "contextType", "slice", "EMPTY_ARR", "options", "error", "vnode", "oldVNode", "errorInfo", "component", "ctor", "handled", "constructor", "getDerivedStateFromError", "setState", "__d", "componentDidCatch", "__E", "e", "vnodeId", "isValidElement", "undefined", "BaseComponent", "prototype", "update", "callback", "s", "__s", "state", "assign", "__v", "_sb", "forceUpdate", "__h", "render", "Fragment", "rerenderQueue", "defer", "Promise", "then", "bind", "resolve", "setTimeout", "depthSort", "a", "b", "__b", "process", "__r", "eventClock", "eventProxy", "createEventProxy", "eventProxyCapture", "globalVar", "globalVar", "globalThis", "window", "__PREACT_DEVTOOLS__", "attachPreact", "options", "Fragment", "Component", "loggedTypeFailures", "getDisplayName", "vnode", "type", "Fragment", "displayName", "name", "renderStack", "ownerStack", "getCurrentVNode", "length", "showJsxSourcePluginWarning", "isPossibleOwner", "getOwnerStack", "stack", "next", "__o", "push", "reduce", "acc", "owner", "source", "__source", "fileName", "lineNumber", "console", "warn", "isWeakMapSupported", "WeakMap", "getDomChildren", "domChildren", "__k", "forEach", "child", "apply", "getClosestDomNodeParentName", "parent", "__", "__e", "parentNode", "localName", "setState", "Component", "prototype", "isTableElement", "update", "callback", "this", "__v", "state", "call", "ILLEGAL_PARAGRAPH_CHILD_ELEMENTS", "forceUpdate", "serializeVNode", "props", "attrs", "prop", "hasOwnProperty", "value", "Object", "toString", "JSON", "stringify", "children", "__P", "oldDiff", "options", "__b", "oldDiffed", "diffed", "oldRoot", "oldVNode", "oldRender", "__r", "pop", "setupComponentStack", "hooksAllowed", "oldBeforeDiff", "oldVnode", "oldCatchError", "oldHook", "__h", "warnedComponents", "useEffect", "useLayoutEffect", "lazyPropTypes", "deprecations", "error", "errorInfo", "__c", "then", "promise", "Error", "componentStack", "setTimeout", "e", "isValid", "nodeType", "componentName", "Array", "isArray", "ref", "key", "propTypes", "has", "m", "lazyVNode", "set", "values", "__f", "obj", "i", "typeSpecs", "location", "getStack", "keys", "typeSpecName", "message", "loggedTypeFailures", "currentComponent", "renderCount", "nextComponent", "comp", "index", "property", "get", "indexOf", "deprecatedAttributes", "nodeName", "attributes", "deprecatedProto", "create", "newProps", "v", "__self", "__proto__", "join", "domParentName", "log", "illegalDomChildrenTypes", "filter", "childType", "test", "__H", "hooks", "hook", "j", "initDebug", "$", "i", "c", "value", "c", "text", "RISON", "text", "rison.RISON", "RISON", "parse", "stringify", "prop", "data", "e", "s", "elem", "currentIndex", "currentComponent", "previousComponent", "prevRaf", "currentHook", "afterPaintEffects", "options", "_options", "oldBeforeDiff", "__b", "oldBeforeRender", "__r", "oldAfterDiff", "diffed", "oldCommit", "__c", "oldBeforeUnmount", "unmount", "oldRoot", "__", "getHookState", "index", "type", "__h", "hooks", "__H", "length", "push", "useState", "initialState", "useReducer", "invokeOrReturn", "reducer", "init", "hookState", "_reducer", "action", "currentValue", "__N", "nextValue", "setState", "_hasScuFromHooks", "updateHookState", "p", "s", "c", "stateHooks", "filter", "x", "every", "prevScu", "call", "this", "shouldUpdate", "forEach", "hookItem", "props", "shouldComponentUpdate", "prevCWU", "componentWillUpdate", "__e", "tmp", "useEffect", "callback", "args", "state", "__s", "argsChanged", "_pendingArgs", "useRef", "initialValue", "currentHook", "useMemo", "current", "useMemo", "factory", "args", "state", "getHookState", "currentIndex", "argsChanged", "__H", "__", "__h", "useContext", "context", "provider", "currentComponent", "__c", "state", "getHookState", "currentIndex", "c", "__", "sub", "props", "value", "flushAfterPaintEffects", "component", "afterPaintEffects", "shift", "__P", "__H", "__h", "forEach", "invokeCleanup", "invokeEffect", "e", "options", "__e", "__v", "__b", "vnode", "currentComponent", "oldBeforeDiff", "__", "parentDom", "__k", "__m", "oldRoot", "__r", "oldBeforeRender", "currentIndex", "hooks", "__c", "previousComponent", "hookItem", "__N", "_pendingArgs", "diffed", "oldAfterDiff", "c", "length", "push", "prevRaf", "requestAnimationFrame", "afterNextFrame", "commitQueue", "some", "filter", "cb", "oldCommit", "unmount", "oldBeforeUnmount", "hasErrored", "s", "HAS_RAF", "callback", "raf", "done", "clearTimeout", "timeout", "cancelAnimationFrame", "setTimeout", "hook", "comp", "cleanup", "argsChanged", "oldArgs", "newArgs", "arg", "index", "invokeOrReturn", "f", "data", "h", "A", "y", "vnodeId", "isArray", "Array", "createVNode", "type", "props", "key", "isStaticChildren", "__source", "__self", "ref", "i", "normalizedProps", "vnode", "__k", "__", "__b", "__e", "__d", "__c", "constructor", "__v", "__i", "__u", "defaultProps", "options", "u", "u", "u", "u", "u", "data", "u", "cssClass", "y", "u", "elem", "u", "u", "rel", "_", "elem", "u", "v", "v", "data", "e", "k2", "v", "m2", "m", "data", "_", "v", "$", "label", "A", "x", "u", "label", "x", "u", "data", "label", "A", "x", "y", "input", "n", "b", "u", "relations", "CMP", "a", "b", "cssClass", "u", "data", "A", "x", "y", "u", "u", "label", "x", "label", "l2", "elem", "v", "data", "f", "b", "k", "v", "a", "b", "rel", "r2", "k", "i2", "l2", "rel", "k", "v", "e", "data", "r2", "GROUPS", "GK_BY_FK", "COMPONENT", "NAV", "GROUPS", "GK_BY_FK", "COMPONENT", "COMMUNITY_TAB", "NAV", "GROUPS", "GK_BY_FK", "COMPONENT", "NAV", "GROUPS", "GK_BY_FK", "COMPONENT", "NAV", "GROUPS", "GK_BY_FK", "COMPONENT", "NAV", "y", "u", "elem", "u", "data", "r", "g"]
}
